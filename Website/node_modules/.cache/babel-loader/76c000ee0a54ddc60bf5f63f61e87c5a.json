{"ast":null,"code":"var _jsxFileName = \"/Users/bhavyameghnani/Desktop/react-saas-template/src/logged_in/components/navigation/MessagePopperButton.js\";\nimport React, { Fragment, useState, useRef, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Popover, IconButton, AppBar, List, Divider, ListItem, ListItemText, Typography, Box, withStyles } from \"@material-ui/core\";\nimport MessageIcon from \"@material-ui/icons/Message\";\nimport MessageListItem from \"./MessageListItem\";\n\nconst styles = theme => ({\n  tabContainer: {\n    overflowY: \"auto\",\n    maxHeight: 350\n  },\n  popoverPaper: {\n    width: \"100%\",\n    maxWidth: 350,\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(1),\n    [theme.breakpoints.down(\"sm\")]: {\n      maxWidth: 270\n    }\n  },\n  divider: {\n    marginTop: -2\n  },\n  noShadow: {\n    boxShadow: \"none !important\"\n  }\n});\n\nfunction MessagePopperButton(props) {\n  const {\n    classes,\n    messages\n  } = props;\n  const anchorEl = useRef();\n  const [isOpen, setIsOpen] = useState(false);\n  const handleClick = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [isOpen, setIsOpen]);\n  const handleClickAway = useCallback(() => {\n    setIsOpen(false);\n  }, [setIsOpen]);\n  const id = isOpen ? \"scroll-playground\" : null;\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleClick,\n    buttonRef: anchorEl,\n    \"aria-label\": \"Open Messages\",\n    \"aria-describedby\": id,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MessageIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Popover, {\n    id: id,\n    open: isOpen,\n    anchorEl: anchorEl.current,\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"right\"\n    },\n    classes: {\n      paper: classes.popoverPaper\n    },\n    onClose: handleClickAway,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    color: \"inherit\",\n    className: classes.noShadow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    pt: 1,\n    pl: 2,\n    pb: 1,\n    pr: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Messages\")), /*#__PURE__*/React.createElement(Divider, {\n    className: classes.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(List, {\n    dense: true,\n    className: classes.tabContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, messages.length === 0 ? /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, \"You haven't received any messages yet.\")) : messages.map((element, index) => /*#__PURE__*/React.createElement(MessageListItem, {\n    key: index,\n    message: element,\n    divider: index !== messages.length - 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  })))));\n}\n\nMessagePopperButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(MessagePopperButton);","map":{"version":3,"sources":["/Users/bhavyameghnani/Desktop/react-saas-template/src/logged_in/components/navigation/MessagePopperButton.js"],"names":["React","Fragment","useState","useRef","useCallback","PropTypes","Popover","IconButton","AppBar","List","Divider","ListItem","ListItemText","Typography","Box","withStyles","MessageIcon","MessageListItem","styles","theme","tabContainer","overflowY","maxHeight","popoverPaper","width","maxWidth","marginLeft","spacing","marginRight","breakpoints","down","divider","marginTop","noShadow","boxShadow","MessagePopperButton","props","classes","messages","anchorEl","isOpen","setIsOpen","handleClick","handleClickAway","id","current","vertical","horizontal","paper","length","map","element","index","propTypes","object","isRequired","arrayOf","withTheme"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useRef, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Popover,\n  IconButton,\n  AppBar,\n  List,\n  Divider,\n  ListItem,\n  ListItemText,\n  Typography,\n  Box,\n  withStyles\n} from \"@material-ui/core\";\nimport MessageIcon from \"@material-ui/icons/Message\";\nimport MessageListItem from \"./MessageListItem\";\n\nconst styles = theme => ({\n  tabContainer: {\n    overflowY: \"auto\",\n    maxHeight: 350\n  },\n  popoverPaper: {\n    width: \"100%\",\n    maxWidth: 350,\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(1),\n    [theme.breakpoints.down(\"sm\")]: {\n      maxWidth: 270\n    }\n  },\n  divider: {\n    marginTop: -2\n  },\n  noShadow: {\n    boxShadow: \"none !important\"\n  }\n});\n\nfunction MessagePopperButton(props) {\n  const { classes, messages } = props;\n  const anchorEl = useRef();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleClick = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [isOpen, setIsOpen]);\n\n  const handleClickAway = useCallback(() => {\n    setIsOpen(false);\n  }, [setIsOpen]);\n\n  const id = isOpen ? \"scroll-playground\" : null;\n  return (\n    <Fragment>\n      <IconButton\n        onClick={handleClick}\n        buttonRef={anchorEl}\n        aria-label=\"Open Messages\"\n        aria-describedby={id}\n        color=\"primary\"\n      >\n        <MessageIcon />\n      </IconButton>\n      <Popover\n        id={id}\n        open={isOpen}\n        anchorEl={anchorEl.current}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\"\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\"\n        }}\n        classes={{ paper: classes.popoverPaper }}\n        onClose={handleClickAway}\n      >\n        <AppBar position=\"static\" color=\"inherit\" className={classes.noShadow}>\n          <Box pt={1} pl={2} pb={1} pr={1}>\n            <Typography variant=\"subtitle1\">Messages</Typography>\n          </Box>\n          <Divider className={classes.divider} />\n        </AppBar>\n        <List dense className={classes.tabContainer}>\n          {messages.length === 0 ? (\n            <ListItem>\n              <ListItemText>\n                You haven&apos;t received any messages yet.\n              </ListItemText>\n            </ListItem>\n          ) : (\n            messages.map((element, index) => (\n              <MessageListItem\n                key={index}\n                message={element}\n                divider={index !== messages.length - 1}\n              />\n            ))\n          )}\n        </List>\n      </Popover>\n    </Fragment>\n  );\n}\n\nMessagePopperButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(MessagePopperButton);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/bhavyameghnani/Desktop/react-saas-template/src/shared/components/SelfAligningImage.js\";\nimport React, { useState, useRef, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport format from \"date-fns/format\";\nimport { GridListTileBar, withStyles } from \"@material-ui/core\";\nimport VertOptions from \"./VertOptions\";\nconst styles = {\n  imageContainer: {\n    width: \"100%\",\n    paddingTop: \"100%\",\n    overflow: \"hidden\",\n    position: \"relative\"\n  },\n  image: {\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    margin: \"auto\"\n  }\n};\n\nfunction SelfAligningImage(props) {\n  const {\n    classes,\n    src,\n    title,\n    timeStamp,\n    options,\n    roundedBorder,\n    theme\n  } = props;\n  const img = useRef();\n  const [hasMoreWidthThanHeight, setHasMoreWidthThanHeight] = useState(null);\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const onLoad = useCallback(() => {\n    if (img.current.naturalHeight < img.current.naturalWidth) {\n      setHasMoreWidthThanHeight(true);\n    } else {\n      setHasMoreWidthThanHeight(false);\n    }\n\n    setHasLoaded(true);\n  }, [img, setHasLoaded, setHasMoreWidthThanHeight]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.imageContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      height: hasMoreWidthThanHeight ? \"100%\" : \"auto\",\n      width: hasMoreWidthThanHeight ? \"auto\" : \"100%\",\n      display: hasLoaded ? \"block\" : \"none\",\n      borderRadius: roundedBorder ? theme.shape.borderRadius : 0\n    },\n    ref: img,\n    className: classes.image,\n    onLoad: onLoad,\n    src: src,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), title && /*#__PURE__*/React.createElement(GridListTileBar, {\n    title: title,\n    subtitle: format(new Date(timeStamp * 1000), \"PP - k:mm\", {\n      awareOfUnicodeTokens: true\n    }),\n    actionIcon: options.length > 0 && /*#__PURE__*/React.createElement(VertOptions, {\n      color: theme.palette.common.white,\n      items: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }));\n}\n\nSelfAligningImage.propTypes = {\n  classes: PropTypes.object.isRequired,\n  src: PropTypes.string.isRequired,\n  theme: PropTypes.object.isRequired,\n  title: PropTypes.string,\n  timeStamp: PropTypes.number,\n  roundedBorder: PropTypes.bool,\n  options: PropTypes.arrayOf(PropTypes.object)\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(SelfAligningImage);","map":{"version":3,"sources":["/Users/bhavyameghnani/Desktop/react-saas-template/src/shared/components/SelfAligningImage.js"],"names":["React","useState","useRef","useCallback","PropTypes","format","GridListTileBar","withStyles","VertOptions","styles","imageContainer","width","paddingTop","overflow","position","image","top","bottom","left","right","margin","SelfAligningImage","props","classes","src","title","timeStamp","options","roundedBorder","theme","img","hasMoreWidthThanHeight","setHasMoreWidthThanHeight","hasLoaded","setHasLoaded","onLoad","current","naturalHeight","naturalWidth","height","display","borderRadius","shape","Date","awareOfUnicodeTokens","length","palette","common","white","propTypes","object","isRequired","string","number","bool","arrayOf","withTheme"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport format from \"date-fns/format\";\nimport { GridListTileBar, withStyles } from \"@material-ui/core\";\nimport VertOptions from \"./VertOptions\";\n\nconst styles = {\n  imageContainer: {\n    width: \"100%\",\n    paddingTop: \"100%\",\n    overflow: \"hidden\",\n    position: \"relative\",\n  },\n  image: {\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    margin: \"auto\",\n  },\n};\n\nfunction SelfAligningImage(props) {\n  const {\n    classes,\n    src,\n    title,\n    timeStamp,\n    options,\n    roundedBorder,\n    theme,\n  } = props;\n  const img = useRef();\n  const [hasMoreWidthThanHeight, setHasMoreWidthThanHeight] = useState(null);\n  const [hasLoaded, setHasLoaded] = useState(false);\n\n  const onLoad = useCallback(() => {\n    if (img.current.naturalHeight < img.current.naturalWidth) {\n      setHasMoreWidthThanHeight(true);\n    } else {\n      setHasMoreWidthThanHeight(false);\n    }\n    setHasLoaded(true);\n  }, [img, setHasLoaded, setHasMoreWidthThanHeight]);\n\n  return (\n    <div className={classes.imageContainer}>\n      <img\n        style={{\n          height: hasMoreWidthThanHeight ? \"100%\" : \"auto\",\n          width: hasMoreWidthThanHeight ? \"auto\" : \"100%\",\n          display: hasLoaded ? \"block\" : \"none\",\n          borderRadius: roundedBorder ? theme.shape.borderRadius : 0,\n        }}\n        ref={img}\n        className={classes.image}\n        onLoad={onLoad}\n        src={src}\n        alt=\"\"\n      />\n      {title && (\n        <GridListTileBar\n          title={title}\n          subtitle={format(new Date(timeStamp * 1000), \"PP - k:mm\", {\n            awareOfUnicodeTokens: true,\n          })}\n          actionIcon={\n            options.length > 0 && (\n              <VertOptions color={theme.palette.common.white} items={options} />\n            )\n          }\n        />\n      )}\n    </div>\n  );\n}\n\nSelfAligningImage.propTypes = {\n  classes: PropTypes.object.isRequired,\n  src: PropTypes.string.isRequired,\n  theme: PropTypes.object.isRequired,\n  title: PropTypes.string,\n  timeStamp: PropTypes.number,\n  roundedBorder: PropTypes.bool,\n  options: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default withStyles(styles, { withTheme: true })(SelfAligningImage);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/bhavyameghnani/Desktop/react-saas-template/src/shared/components/NavigationDrawer.js\";\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { List, ListItem, ListItemIcon, ListItemText, Drawer, withStyles, IconButton, Typography, withWidth, isWidthUp, Toolbar } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst styles = theme => ({\n  closeIcon: {\n    marginRight: theme.spacing(0.5)\n  },\n  headSection: {\n    width: 200\n  },\n  blackList: {\n    backgroundColor: theme.palette.common.black,\n    height: \"100%\"\n  },\n  noDecoration: {\n    textDecoration: \"none !important\"\n  }\n});\n\nfunction NavigationDrawer(props) {\n  const {\n    width,\n    open,\n    onClose,\n    anchor,\n    classes,\n    menuItems,\n    selectedItem,\n    theme\n  } = props;\n  useEffect(() => {\n    window.onresize = () => {\n      if (isWidthUp(\"sm\", width) && open) {\n        onClose();\n      }\n    };\n  }, [width, open, onClose]);\n  return /*#__PURE__*/React.createElement(Drawer, {\n    variant: \"temporary\",\n    open: open,\n    onClose: onClose,\n    anchor: anchor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.headSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    style: {\n      paddingTop: theme.spacing(0),\n      paddingBottom: theme.spacing(0),\n      height: \"100%\",\n      justifyContent: anchor === \"left\" ? \"flex-start\" : \"flex-end\"\n    },\n    disableGutters: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    className: classes.closeIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: onClose,\n    \"aria-label\": \"Close Navigation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(List, {\n    className: classes.blackList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, menuItems.map(element => {\n    if (element.link) {\n      return /*#__PURE__*/React.createElement(Link, {\n        key: element.name,\n        to: element.link,\n        className: classes.noDecoration,\n        onClick: onClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(ListItem, {\n        button: true,\n        selected: selectedItem === element.name\n        /**\n         * We disable ripple as it will make a weird animation\n         * with primary and secondary color\n         */\n        ,\n        disableRipple: true,\n        disableTouchRipple: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ListItemIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 19\n        }\n      }, element.icon), /*#__PURE__*/React.createElement(ListItemText, {\n        primary: /*#__PURE__*/React.createElement(Typography, {\n          variant: \"subtitle1\",\n          className: \"text-white\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 23\n          }\n        }, element.name),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 19\n        }\n      })));\n    }\n\n    return /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      key: element.name,\n      onClick: element.onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, element.icon), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: /*#__PURE__*/React.createElement(Typography, {\n        variant: \"subtitle1\",\n        className: \"text-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 19\n        }\n      }, element.name),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }));\n  })));\n}\n\nNavigationDrawer.propTypes = {\n  anchor: PropTypes.string.isRequired,\n  theme: PropTypes.object.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  menuItems: PropTypes.arrayOf(PropTypes.object).isRequired,\n  classes: PropTypes.object.isRequired,\n  width: PropTypes.string.isRequired,\n  selectedItem: PropTypes.string\n};\nexport default withWidth()(withStyles(styles, {\n  withTheme: true\n})(NavigationDrawer));","map":{"version":3,"sources":["/Users/bhavyameghnani/Desktop/react-saas-template/src/shared/components/NavigationDrawer.js"],"names":["React","useEffect","PropTypes","Link","List","ListItem","ListItemIcon","ListItemText","Drawer","withStyles","IconButton","Typography","withWidth","isWidthUp","Toolbar","CloseIcon","styles","theme","closeIcon","marginRight","spacing","headSection","width","blackList","backgroundColor","palette","common","black","height","noDecoration","textDecoration","NavigationDrawer","props","open","onClose","anchor","classes","menuItems","selectedItem","window","onresize","paddingTop","paddingBottom","justifyContent","map","element","link","name","icon","onClick","propTypes","string","isRequired","object","bool","func","arrayOf","withTheme"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Drawer,\n  withStyles,\n  IconButton,\n  Typography,\n  withWidth,\n  isWidthUp,\n  Toolbar\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst styles = theme => ({\n  closeIcon: {\n    marginRight: theme.spacing(0.5)\n  },\n  headSection: {\n    width: 200\n  },\n  blackList: {\n    backgroundColor: theme.palette.common.black,\n    height: \"100%\"\n  },\n  noDecoration: {\n    textDecoration: \"none !important\"\n  }\n});\n\nfunction NavigationDrawer(props) {\n  const {\n    width,\n    open,\n    onClose,\n    anchor,\n    classes,\n    menuItems,\n    selectedItem,\n    theme\n  } = props;\n\n  useEffect(() => {\n    window.onresize = () => {\n      if (isWidthUp(\"sm\", width) && open) {\n        onClose();\n      }\n    };\n  }, [width, open, onClose]);\n\n  return (\n    <Drawer variant=\"temporary\" open={open} onClose={onClose} anchor={anchor}>\n      <Toolbar className={classes.headSection}>\n        <ListItem\n          style={{\n            paddingTop: theme.spacing(0),\n            paddingBottom: theme.spacing(0),\n            height: \"100%\",\n            justifyContent: anchor === \"left\" ? \"flex-start\" : \"flex-end\"\n          }}\n          disableGutters\n        >\n          <ListItemIcon className={classes.closeIcon}>\n            <IconButton onClick={onClose} aria-label=\"Close Navigation\">\n              <CloseIcon color=\"primary\" />\n            </IconButton>\n          </ListItemIcon>\n        </ListItem>\n      </Toolbar>\n      <List className={classes.blackList}>\n        {menuItems.map(element => {\n          if (element.link) {\n            return (\n              <Link\n                key={element.name}\n                to={element.link}\n                className={classes.noDecoration}\n                onClick={onClose}\n              >\n                <ListItem\n                  button\n                  selected={selectedItem === element.name}\n                  /**\n                   * We disable ripple as it will make a weird animation\n                   * with primary and secondary color\n                   */\n                  disableRipple\n                  disableTouchRipple\n                >\n                  <ListItemIcon>{element.icon}</ListItemIcon>\n                  <ListItemText\n                    primary={\n                      <Typography variant=\"subtitle1\" className=\"text-white\">\n                        {element.name}\n                      </Typography>\n                    }\n                  />\n                </ListItem>\n              </Link>\n            );\n          }\n          return (\n            <ListItem button key={element.name} onClick={element.onClick}>\n              <ListItemIcon>{element.icon}</ListItemIcon>\n              <ListItemText\n                primary={\n                  <Typography variant=\"subtitle1\" className=\"text-white\">\n                    {element.name}\n                  </Typography>\n                }\n              />\n            </ListItem>\n          );\n        })}\n      </List>\n    </Drawer>\n  );\n}\n\nNavigationDrawer.propTypes = {\n  anchor: PropTypes.string.isRequired,\n  theme: PropTypes.object.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  menuItems: PropTypes.arrayOf(PropTypes.object).isRequired,\n  classes: PropTypes.object.isRequired,\n  width: PropTypes.string.isRequired,\n  selectedItem: PropTypes.string\n};\n\nexport default withWidth()(\n  withStyles(styles, { withTheme: true })(NavigationDrawer)\n);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/bhavyameghnani/Desktop/react-saas-template/src/logged_out/components/register_login/RegisterDialog.js\";\nimport React, { useState, useCallback, useRef, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormHelperText, TextField, Button, Checkbox, Typography, FormControlLabel, withStyles } from \"@material-ui/core\";\nimport FormDialog from \"../../../shared/components/FormDialog\";\nimport HighlightedInformation from \"../../../shared/components/HighlightedInformation\";\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\nimport VisibilityPasswordTextField from \"../../../shared/components/VisibilityPasswordTextField\";\n\nconst styles = theme => ({\n  link: {\n    transition: theme.transitions.create([\"background-color\"], {\n      duration: theme.transitions.duration.complex,\n      easing: theme.transitions.easing.easeInOut\n    }),\n    cursor: \"pointer\",\n    color: theme.palette.primary.main,\n    \"&:enabled:hover\": {\n      color: theme.palette.primary.dark\n    },\n    \"&:enabled:focus\": {\n      color: theme.palette.primary.dark\n    }\n  }\n});\n\nfunction RegisterDialog(props) {\n  const {\n    setStatus,\n    theme,\n    onClose,\n    openTermsDialog,\n    status,\n    classes\n  } = props;\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasTermsOfServiceError, setHasTermsOfServiceError] = useState(false);\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\n  const registerTermsCheckbox = useRef();\n  const registerPassword = useRef();\n  const registerPasswordRepeat = useRef();\n  const register = useCallback(() => {\n    if (!registerTermsCheckbox.current.checked) {\n      setHasTermsOfServiceError(true);\n      return;\n    }\n\n    if (registerPassword.current.value !== registerPasswordRepeat.current.value) {\n      setStatus(\"passwordsDontMatch\");\n      return;\n    }\n\n    setStatus(null);\n    setIsLoading(true);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 1500);\n  }, [setIsLoading, setStatus, setHasTermsOfServiceError, registerPassword, registerPasswordRepeat, registerTermsCheckbox]);\n  return /*#__PURE__*/React.createElement(FormDialog, {\n    loading: isLoading,\n    onClose: onClose,\n    open: true,\n    headline: \"Register\",\n    onFormSubmit: e => {\n      e.preventDefault();\n      register();\n    },\n    hideBackdrop: true,\n    hasCloseIcon: true,\n    content: /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      error: status === \"invalidEmail\",\n      label: \"Email Address\",\n      autoFocus: true,\n      autoComplete: \"off\",\n      type: \"email\",\n      onChange: () => {\n        if (status === \"invalidEmail\") {\n          setStatus(null);\n        }\n      },\n      FormHelperTextProps: {\n        error: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(VisibilityPasswordTextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      error: status === \"passwordTooShort\" || status === \"passwordsDontMatch\",\n      label: \"Password\",\n      inputRef: registerPassword,\n      autoComplete: \"off\",\n      onChange: () => {\n        if (status === \"passwordTooShort\" || status === \"passwordsDontMatch\") {\n          setStatus(null);\n        }\n      },\n      helperText: (() => {\n        if (status === \"passwordTooShort\") {\n          return \"Create a password at least 6 characters long.\";\n        }\n\n        if (status === \"passwordsDontMatch\") {\n          return \"Your passwords dont match.\";\n        }\n\n        return null;\n      })(),\n      FormHelperTextProps: {\n        error: true\n      },\n      isVisible: isPasswordVisible,\n      onVisibilityChange: setIsPasswordVisible,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(VisibilityPasswordTextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      error: status === \"passwordTooShort\" || status === \"passwordsDontMatch\",\n      label: \"Repeat Password\",\n      inputRef: registerPasswordRepeat,\n      autoComplete: \"off\",\n      onChange: () => {\n        if (status === \"passwordTooShort\" || status === \"passwordsDontMatch\") {\n          setStatus(null);\n        }\n      },\n      helperText: (() => {\n        if (status === \"passwordTooShort\") {\n          return \"Create a password at least 6 characters long.\";\n        }\n\n        if (status === \"passwordsDontMatch\") {\n          return \"Your passwords dont match.\";\n        }\n      })(),\n      FormHelperTextProps: {\n        error: true\n      },\n      isVisible: isPasswordVisible,\n      onVisibilityChange: setIsPasswordVisible,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormControlLabel, {\n      style: {\n        marginRight: 0\n      },\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        color: \"primary\",\n        inputRef: registerTermsCheckbox,\n        onChange: () => {\n          setHasTermsOfServiceError(false);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }\n      }),\n      label: /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }\n      }, \"I agree to the\", /*#__PURE__*/React.createElement(\"span\", {\n        className: classes.link,\n        onClick: isLoading ? null : openTermsDialog,\n        tabIndex: 0,\n        role: \"button\",\n        onKeyDown: event => {\n          // For screenreaders listen to space and enter events\n          if (!isLoading && event.keyCode === 13 || event.keyCode === 32) {\n            openTermsDialog();\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }\n      }, \" \", \"terms of service\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }\n    }), hasTermsOfServiceError && /*#__PURE__*/React.createElement(FormHelperText, {\n      error: true,\n      style: {\n        display: \"block\",\n        marginTop: theme.spacing(-1)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }\n    }, \"In order to create an account, you have to accept our terms of service.\"), status === \"accountCreated\" ? /*#__PURE__*/React.createElement(HighlightedInformation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }\n    }, \"We have created your account. Please click on the link in the email we have sent to you before logging in.\") : /*#__PURE__*/React.createElement(HighlightedInformation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }\n    }, \"Registration is disabled until we go live.\")),\n    actions: /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      size: \"large\",\n      color: \"secondary\",\n      disabled: isLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }\n    }, \"Register\", isLoading && /*#__PURE__*/React.createElement(ButtonCircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 25\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  });\n}\n\nRegisterDialog.propTypes = {\n  theme: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired,\n  openTermsDialog: PropTypes.func.isRequired,\n  status: PropTypes.string,\n  setStatus: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(RegisterDialog);","map":{"version":3,"sources":["/Users/bhavyameghnani/Desktop/react-saas-template/src/logged_out/components/register_login/RegisterDialog.js"],"names":["React","useState","useCallback","useRef","Fragment","PropTypes","FormHelperText","TextField","Button","Checkbox","Typography","FormControlLabel","withStyles","FormDialog","HighlightedInformation","ButtonCircularProgress","VisibilityPasswordTextField","styles","theme","link","transition","transitions","create","duration","complex","easing","easeInOut","cursor","color","palette","primary","main","dark","RegisterDialog","props","setStatus","onClose","openTermsDialog","status","classes","isLoading","setIsLoading","hasTermsOfServiceError","setHasTermsOfServiceError","isPasswordVisible","setIsPasswordVisible","registerTermsCheckbox","registerPassword","registerPasswordRepeat","register","current","checked","value","setTimeout","e","preventDefault","error","marginRight","event","keyCode","display","marginTop","spacing","propTypes","object","isRequired","func","string","withTheme"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useRef, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  FormHelperText,\n  TextField,\n  Button,\n  Checkbox,\n  Typography,\n  FormControlLabel,\n  withStyles,\n} from \"@material-ui/core\";\nimport FormDialog from \"../../../shared/components/FormDialog\";\nimport HighlightedInformation from \"../../../shared/components/HighlightedInformation\";\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\nimport VisibilityPasswordTextField from \"../../../shared/components/VisibilityPasswordTextField\";\n\nconst styles = (theme) => ({\n  link: {\n    transition: theme.transitions.create([\"background-color\"], {\n      duration: theme.transitions.duration.complex,\n      easing: theme.transitions.easing.easeInOut,\n    }),\n    cursor: \"pointer\",\n    color: theme.palette.primary.main,\n    \"&:enabled:hover\": {\n      color: theme.palette.primary.dark,\n    },\n    \"&:enabled:focus\": {\n      color: theme.palette.primary.dark,\n    },\n  },\n});\n\nfunction RegisterDialog(props) {\n  const { setStatus, theme, onClose, openTermsDialog, status, classes } = props;\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasTermsOfServiceError, setHasTermsOfServiceError] = useState(false);\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\n  const registerTermsCheckbox = useRef();\n  const registerPassword = useRef();\n  const registerPasswordRepeat = useRef();\n\n  const register = useCallback(() => {\n    if (!registerTermsCheckbox.current.checked) {\n      setHasTermsOfServiceError(true);\n      return;\n    }\n    if (\n      registerPassword.current.value !== registerPasswordRepeat.current.value\n    ) {\n      setStatus(\"passwordsDontMatch\");\n      return;\n    }\n    setStatus(null);\n    setIsLoading(true);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 1500);\n  }, [\n    setIsLoading,\n    setStatus,\n    setHasTermsOfServiceError,\n    registerPassword,\n    registerPasswordRepeat,\n    registerTermsCheckbox,\n  ]);\n\n  return (\n    <FormDialog\n      loading={isLoading}\n      onClose={onClose}\n      open\n      headline=\"Register\"\n      onFormSubmit={(e) => {\n        e.preventDefault();\n        register();\n      }}\n      hideBackdrop\n      hasCloseIcon\n      content={\n        <Fragment>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            error={status === \"invalidEmail\"}\n            label=\"Email Address\"\n            autoFocus\n            autoComplete=\"off\"\n            type=\"email\"\n            onChange={() => {\n              if (status === \"invalidEmail\") {\n                setStatus(null);\n              }\n            }}\n            FormHelperTextProps={{ error: true }}\n          />\n          <VisibilityPasswordTextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            error={\n              status === \"passwordTooShort\" || status === \"passwordsDontMatch\"\n            }\n            label=\"Password\"\n            inputRef={registerPassword}\n            autoComplete=\"off\"\n            onChange={() => {\n              if (\n                status === \"passwordTooShort\" ||\n                status === \"passwordsDontMatch\"\n              ) {\n                setStatus(null);\n              }\n            }}\n            helperText={(() => {\n              if (status === \"passwordTooShort\") {\n                return \"Create a password at least 6 characters long.\";\n              }\n              if (status === \"passwordsDontMatch\") {\n                return \"Your passwords dont match.\";\n              }\n              return null;\n            })()}\n            FormHelperTextProps={{ error: true }}\n            isVisible={isPasswordVisible}\n            onVisibilityChange={setIsPasswordVisible}\n          />\n          <VisibilityPasswordTextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            error={\n              status === \"passwordTooShort\" || status === \"passwordsDontMatch\"\n            }\n            label=\"Repeat Password\"\n            inputRef={registerPasswordRepeat}\n            autoComplete=\"off\"\n            onChange={() => {\n              if (\n                status === \"passwordTooShort\" ||\n                status === \"passwordsDontMatch\"\n              ) {\n                setStatus(null);\n              }\n            }}\n            helperText={(() => {\n              if (status === \"passwordTooShort\") {\n                return \"Create a password at least 6 characters long.\";\n              }\n              if (status === \"passwordsDontMatch\") {\n                return \"Your passwords dont match.\";\n              }\n            })()}\n            FormHelperTextProps={{ error: true }}\n            isVisible={isPasswordVisible}\n            onVisibilityChange={setIsPasswordVisible}\n          />\n          <FormControlLabel\n            style={{ marginRight: 0 }}\n            control={\n              <Checkbox\n                color=\"primary\"\n                inputRef={registerTermsCheckbox}\n                onChange={() => {\n                  setHasTermsOfServiceError(false);\n                }}\n              />\n            }\n            label={\n              <Typography variant=\"body1\">\n                I agree to the\n                <span\n                  className={classes.link}\n                  onClick={isLoading ? null : openTermsDialog}\n                  tabIndex={0}\n                  role=\"button\"\n                  onKeyDown={(event) => {\n                    // For screenreaders listen to space and enter events\n                    if (\n                      (!isLoading && event.keyCode === 13) ||\n                      event.keyCode === 32\n                    ) {\n                      openTermsDialog();\n                    }\n                  }}\n                >\n                  {\" \"}\n                  terms of service\n                </span>\n              </Typography>\n            }\n          />\n          {hasTermsOfServiceError && (\n            <FormHelperText\n              error\n              style={{\n                display: \"block\",\n                marginTop: theme.spacing(-1),\n              }}\n            >\n              In order to create an account, you have to accept our terms of\n              service.\n            </FormHelperText>\n          )}\n          {status === \"accountCreated\" ? (\n            <HighlightedInformation>\n              We have created your account. Please click on the link in the\n              email we have sent to you before logging in.\n            </HighlightedInformation>\n          ) : (\n            <HighlightedInformation>\n              Registration is disabled until we go live.\n            </HighlightedInformation>\n          )}\n        </Fragment>\n      }\n      actions={\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          size=\"large\"\n          color=\"secondary\"\n          disabled={isLoading}\n        >\n          Register\n          {isLoading && <ButtonCircularProgress />}\n        </Button>\n      }\n    />\n  );\n}\n\nRegisterDialog.propTypes = {\n  theme: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired,\n  openTermsDialog: PropTypes.func.isRequired,\n  status: PropTypes.string,\n  setStatus: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(RegisterDialog);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/bhavyameghnani/Desktop/react-saas-template/src/logged_in/components/posts/AddPostOptions.js\";\nimport React, { Fragment, useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Typography, IconButton, List, ListItem, ListItemText, ListItemSecondaryAction, FormControl, Select, OutlinedInput, MenuItem, Box, withStyles } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Bordered from \"../../../shared/components/Bordered\";\nimport ImageCropperDialog from \"../../../shared/components/ImageCropperDialog\";\n\nconst styles = theme => ({\n  floatButtonWrapper: {\n    position: \"absolute\",\n    top: theme.spacing(1),\n    right: theme.spacing(1),\n    zIndex: 1000\n  },\n  inputRoot: {\n    width: 190,\n    \"@media (max-width:  400px)\": {\n      width: 160\n    },\n    \"@media (max-width:  360px)\": {\n      width: 140\n    },\n    \"@media (max-width:  340px)\": {\n      width: 120\n    }\n  },\n  uploadIcon: {\n    fontSize: 48,\n    transition: theme.transitions.create([\"color\", \"box-shadow\", \"border\"], {\n      duration: theme.transitions.duration.short,\n      easing: theme.transitions.easing.easeInOut\n    })\n  },\n  imgWrapper: {\n    position: \"relative\"\n  },\n  img: {\n    width: \"100%\",\n    border: \"1px solid rgba(0, 0, 0, 0.23)\",\n    borderRadius: theme.shape.borderRadius,\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0\n  },\n  uploadText: {\n    transition: theme.transitions.create([\"color\", \"box-shadow\", \"border\"], {\n      duration: theme.transitions.duration.short,\n      easing: theme.transitions.easing.easeInOut\n    })\n  },\n  numberInput: {\n    width: 110\n  },\n  numberInputInput: {\n    padding: \"9px 34px 9px 14.5px\"\n  },\n  emojiTextArea: {\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n    marginRight: -1\n  },\n  dNone: {\n    display: \"none\"\n  }\n});\n\nconst inputOptions = [\"None\", \"Slow\", \"Normal\", \"Fast\"];\n\nfunction AddPostOptions(props) {\n  const {\n    Dropzone,\n    classes,\n    files,\n    deleteItem,\n    onDrop,\n    EmojiTextArea,\n    ImageCropper,\n    DateTimePicker,\n    cropperFile,\n    onCrop,\n    onCropperClose,\n    uploadAt,\n    onChangeUploadAt\n  } = props;\n  const [option1, setOption1] = useState(\"None\");\n  const [option2, setOption2] = useState(\"None\");\n  const [option3, setOption3] = useState(\"None\");\n  const [option4, setOption4] = useState(\"None\");\n  const handleChange = useCallback(event => {\n    const {\n      name,\n      value\n    } = event.target;\n\n    switch (name) {\n      case \"option1\":\n        setOption1(value);\n        break;\n\n      case \"option2\":\n        setOption2(value);\n        break;\n\n      case \"option3\":\n        setOption3(value);\n        break;\n\n      case \"option4\":\n        setOption4(value);\n        break;\n\n      default:\n        throw new Error(\"No branch selected in switch-statement.\");\n    }\n  }, [setOption1, setOption2, setOption3, setOption4]);\n  const printFile = useCallback(() => {\n    if (files[0]) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.imgWrapper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        alt: \"uploaded item\",\n        src: files[0].preview,\n        className: classes.img,\n        style: {\n          height: 151\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.floatButtonWrapper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: deleteItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CloseIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }\n      }))));\n    }\n\n    return /*#__PURE__*/React.createElement(Dropzone, {\n      accept: \"image/png, image/jpeg\",\n      onDrop: onDrop,\n      fullHeight: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.uploadText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, \"Click / Drop file \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 29\n      }\n    }), \" here\"));\n  }, [onDrop, files, classes, deleteItem]);\n  const inputs = useCallback([{\n    state: option1,\n    label: \"Option 1\",\n    stateName: \"option1\"\n  }, {\n    state: option2,\n    label: \"Option 2\",\n    stateName: \"option2\"\n  }, {\n    state: option3,\n    label: \"Option 3\",\n    stateName: \"option3\"\n  }, {\n    state: option4,\n    label: \"Option 4\",\n    stateName: \"option4\"\n  }], [option1, option2, option3, option4]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 5\n    }\n  }, ImageCropper && /*#__PURE__*/React.createElement(ImageCropperDialog, {\n    open: cropperFile ? true : false,\n    ImageCropper: ImageCropper,\n    src: cropperFile ? cropperFile.preview : \"\",\n    onCrop: onCrop,\n    onClose: onCropperClose,\n    aspectRatio: 4 / 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    paragraph: true,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }\n  }, \"Upload Image\"), /*#__PURE__*/React.createElement(Box, {\n    mb: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }, EmojiTextArea && /*#__PURE__*/React.createElement(EmojiTextArea, {\n    inputClassName: classes.emojiTextArea,\n    maxCharacters: 2200,\n    rightContent: printFile(),\n    emojiSet: \"google\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    paragraph: true,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }\n  }, \"Options\"), /*#__PURE__*/React.createElement(List, {\n    disablePadding: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Bordered, {\n    disableVerticalPadding: true,\n    disableBorderRadius: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    divider: true,\n    disableGutters: true,\n    className: \"listItemLeftPadding\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 15\n    }\n  }, \"Upload at\")), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, DateTimePicker && /*#__PURE__*/React.createElement(DateTimePicker, {\n    value: uploadAt,\n    format: \"yyyy/MM/dd hh:mm a\",\n    onChange: onChangeUploadAt,\n    disablePast: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }))), inputs.map((element, index) => /*#__PURE__*/React.createElement(ListItem, {\n    className: \"listItemLeftPadding\",\n    disableGutters: true,\n    divider: index !== inputs.length - 1,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }, element.label)), /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    value: element.state,\n    onChange: handleChange,\n    input: /*#__PURE__*/React.createElement(OutlinedInput, {\n      name: element.stateName,\n      labelWidth: 0,\n      className: classes.numberInput,\n      classes: {\n        input: classes.numberInputInput\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 23\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 19\n    }\n  }, inputOptions.map(innerElement => /*#__PURE__*/React.createElement(MenuItem, {\n    value: innerElement,\n    key: innerElement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 23\n    }\n  }, innerElement))))))))));\n}\n\nAddPostOptions.propTypes = {\n  onEmojiTextareaChange: PropTypes.func,\n  DateTimePicker: PropTypes.elementType,\n  EmojiTextArea: PropTypes.elementType,\n  Dropzone: PropTypes.elementType,\n  ImageCropper: PropTypes.elementType,\n  classes: PropTypes.object,\n  cropperFile: PropTypes.object,\n  onCrop: PropTypes.func,\n  onCropperClose: PropTypes.func,\n  files: PropTypes.arrayOf(PropTypes.object).isRequired,\n  deleteItem: PropTypes.func,\n  onDrop: PropTypes.func,\n  value: PropTypes.string,\n  characters: PropTypes.number,\n  uploadAt: PropTypes.instanceOf(Date),\n  onChangeUploadAt: PropTypes.func\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(AddPostOptions);","map":{"version":3,"sources":["/Users/bhavyameghnani/Desktop/react-saas-template/src/logged_in/components/posts/AddPostOptions.js"],"names":["React","Fragment","useState","useCallback","PropTypes","Typography","IconButton","List","ListItem","ListItemText","ListItemSecondaryAction","FormControl","Select","OutlinedInput","MenuItem","Box","withStyles","CloseIcon","Bordered","ImageCropperDialog","styles","theme","floatButtonWrapper","position","top","spacing","right","zIndex","inputRoot","width","uploadIcon","fontSize","transition","transitions","create","duration","short","easing","easeInOut","imgWrapper","img","border","borderRadius","shape","borderTopLeftRadius","borderBottomLeftRadius","uploadText","numberInput","numberInputInput","padding","emojiTextArea","borderTopRightRadius","borderBottomRightRadius","marginRight","dNone","display","inputOptions","AddPostOptions","props","Dropzone","classes","files","deleteItem","onDrop","EmojiTextArea","ImageCropper","DateTimePicker","cropperFile","onCrop","onCropperClose","uploadAt","onChangeUploadAt","option1","setOption1","option2","setOption2","option3","setOption3","option4","setOption4","handleChange","event","name","value","target","Error","printFile","preview","height","inputs","state","label","stateName","map","element","index","length","input","innerElement","propTypes","onEmojiTextareaChange","func","elementType","object","arrayOf","isRequired","string","characters","number","instanceOf","Date","withTheme"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Typography,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  FormControl,\n  Select,\n  OutlinedInput,\n  MenuItem,\n  Box,\n  withStyles,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Bordered from \"../../../shared/components/Bordered\";\nimport ImageCropperDialog from \"../../../shared/components/ImageCropperDialog\";\n\nconst styles = (theme) => ({\n  floatButtonWrapper: {\n    position: \"absolute\",\n    top: theme.spacing(1),\n    right: theme.spacing(1),\n    zIndex: 1000,\n  },\n  inputRoot: {\n    width: 190,\n    \"@media (max-width:  400px)\": {\n      width: 160,\n    },\n    \"@media (max-width:  360px)\": {\n      width: 140,\n    },\n    \"@media (max-width:  340px)\": {\n      width: 120,\n    },\n  },\n  uploadIcon: {\n    fontSize: 48,\n    transition: theme.transitions.create([\"color\", \"box-shadow\", \"border\"], {\n      duration: theme.transitions.duration.short,\n      easing: theme.transitions.easing.easeInOut,\n    }),\n  },\n  imgWrapper: { position: \"relative\" },\n  img: {\n    width: \"100%\",\n    border: \"1px solid rgba(0, 0, 0, 0.23)\",\n    borderRadius: theme.shape.borderRadius,\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n  },\n  uploadText: {\n    transition: theme.transitions.create([\"color\", \"box-shadow\", \"border\"], {\n      duration: theme.transitions.duration.short,\n      easing: theme.transitions.easing.easeInOut,\n    }),\n  },\n  numberInput: {\n    width: 110,\n  },\n  numberInputInput: {\n    padding: \"9px 34px 9px 14.5px\",\n  },\n  emojiTextArea: {\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n    marginRight: -1,\n  },\n  dNone: {\n    display: \"none\",\n  },\n});\n\nconst inputOptions = [\"None\", \"Slow\", \"Normal\", \"Fast\"];\n\nfunction AddPostOptions(props) {\n  const {\n    Dropzone,\n    classes,\n    files,\n    deleteItem,\n    onDrop,\n    EmojiTextArea,\n    ImageCropper,\n    DateTimePicker,\n    cropperFile,\n    onCrop,\n    onCropperClose,\n    uploadAt,\n    onChangeUploadAt,\n  } = props;\n  const [option1, setOption1] = useState(\"None\");\n  const [option2, setOption2] = useState(\"None\");\n  const [option3, setOption3] = useState(\"None\");\n  const [option4, setOption4] = useState(\"None\");\n\n  const handleChange = useCallback(\n    (event) => {\n      const { name, value } = event.target;\n      switch (name) {\n        case \"option1\":\n          setOption1(value);\n          break;\n        case \"option2\":\n          setOption2(value);\n          break;\n        case \"option3\":\n          setOption3(value);\n          break;\n        case \"option4\":\n          setOption4(value);\n          break;\n        default:\n          throw new Error(\"No branch selected in switch-statement.\");\n      }\n    },\n    [setOption1, setOption2, setOption3, setOption4]\n  );\n\n  const printFile = useCallback(() => {\n    if (files[0]) {\n      return (\n        <div className={classes.imgWrapper}>\n          <img\n            alt=\"uploaded item\"\n            src={files[0].preview}\n            className={classes.img}\n            style={{ height: 151 }}\n          />\n          <div className={classes.floatButtonWrapper}>\n            <IconButton onClick={deleteItem}>\n              <CloseIcon />\n            </IconButton>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <Dropzone accept=\"image/png, image/jpeg\" onDrop={onDrop} fullHeight>\n        <span className={classes.uploadText}>\n          Click / Drop file <br /> here\n        </span>\n      </Dropzone>\n    );\n  }, [onDrop, files, classes, deleteItem]);\n\n  const inputs = useCallback(\n    [\n      {\n        state: option1,\n        label: \"Option 1\",\n        stateName: \"option1\",\n      },\n      {\n        state: option2,\n        label: \"Option 2\",\n        stateName: \"option2\",\n      },\n      {\n        state: option3,\n        label: \"Option 3\",\n        stateName: \"option3\",\n      },\n      {\n        state: option4,\n        label: \"Option 4\",\n        stateName: \"option4\",\n      },\n    ],\n    [option1, option2, option3, option4]\n  );\n\n  return (\n    <Fragment>\n      {ImageCropper && (\n        <ImageCropperDialog\n          open={cropperFile ? true : false}\n          ImageCropper={ImageCropper}\n          src={cropperFile ? cropperFile.preview : \"\"}\n          onCrop={onCrop}\n          onClose={onCropperClose}\n          aspectRatio={4 / 3}\n        />\n      )}\n      <Typography paragraph variant=\"h6\">\n        Upload Image\n      </Typography>\n      <Box mb={2}>\n        {EmojiTextArea && (\n          <EmojiTextArea\n            inputClassName={classes.emojiTextArea}\n            maxCharacters={2200}\n            rightContent={printFile()}\n            emojiSet=\"google\"\n          />\n        )}\n      </Box>\n      <Typography paragraph variant=\"h6\">\n        Options\n      </Typography>\n      <List disablePadding>\n        <Bordered disableVerticalPadding disableBorderRadius>\n          <ListItem divider disableGutters className=\"listItemLeftPadding\">\n            <ListItemText>\n              <Typography variant=\"body2\">Upload at</Typography>\n            </ListItemText>\n            <ListItemSecondaryAction>\n              {DateTimePicker && (\n                <DateTimePicker\n                  value={uploadAt}\n                  format=\"yyyy/MM/dd hh:mm a\"\n                  onChange={onChangeUploadAt}\n                  disablePast\n                />\n              )}\n            </ListItemSecondaryAction>\n          </ListItem>\n          {inputs.map((element, index) => (\n            <ListItem\n              className=\"listItemLeftPadding\"\n              disableGutters\n              divider={index !== inputs.length - 1}\n              key={index}\n            >\n              <ListItemText>\n                <Typography variant=\"body2\">{element.label}</Typography>\n              </ListItemText>\n              <FormControl variant=\"outlined\">\n                <ListItemSecondaryAction>\n                  <Select\n                    value={element.state}\n                    onChange={handleChange}\n                    input={\n                      <OutlinedInput\n                        name={element.stateName}\n                        labelWidth={0}\n                        className={classes.numberInput}\n                        classes={{ input: classes.numberInputInput }}\n                      />\n                    }\n                  >\n                    {inputOptions.map((innerElement) => (\n                      <MenuItem value={innerElement} key={innerElement}>\n                        {innerElement}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </ListItemSecondaryAction>\n              </FormControl>\n            </ListItem>\n          ))}\n        </Bordered>\n      </List>\n    </Fragment>\n  );\n}\n\nAddPostOptions.propTypes = {\n  onEmojiTextareaChange: PropTypes.func,\n  DateTimePicker: PropTypes.elementType,\n  EmojiTextArea: PropTypes.elementType,\n  Dropzone: PropTypes.elementType,\n  ImageCropper: PropTypes.elementType,\n  classes: PropTypes.object,\n  cropperFile: PropTypes.object,\n  onCrop: PropTypes.func,\n  onCropperClose: PropTypes.func,\n  files: PropTypes.arrayOf(PropTypes.object).isRequired,\n  deleteItem: PropTypes.func,\n  onDrop: PropTypes.func,\n  value: PropTypes.string,\n  characters: PropTypes.number,\n  uploadAt: PropTypes.instanceOf(Date),\n  onChangeUploadAt: PropTypes.func,\n};\n\nexport default withStyles(styles, { withTheme: true })(AddPostOptions);\n"]},"metadata":{},"sourceType":"module"}
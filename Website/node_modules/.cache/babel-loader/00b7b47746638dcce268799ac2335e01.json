{"ast":null,"code":"/*!\n * Cropper.js v1.5.7\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2020-05-23T05:23:00.081Z\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.Cropper = factory());\n})(this, function () {\n  'use strict';\n\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      if (enumerableOnly) symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n  var IS_TOUCH_DEVICE = IS_BROWSER && WINDOW.document.documentElement ? 'ontouchstart' in WINDOW.document.documentElement : false;\n  var HAS_POINTER_EVENT = IS_BROWSER ? 'PointerEvent' in WINDOW : false;\n  var NAMESPACE = 'cropper'; // Actions\n\n  var ACTION_ALL = 'all';\n  var ACTION_CROP = 'crop';\n  var ACTION_MOVE = 'move';\n  var ACTION_ZOOM = 'zoom';\n  var ACTION_EAST = 'e';\n  var ACTION_WEST = 'w';\n  var ACTION_SOUTH = 's';\n  var ACTION_NORTH = 'n';\n  var ACTION_NORTH_EAST = 'ne';\n  var ACTION_NORTH_WEST = 'nw';\n  var ACTION_SOUTH_EAST = 'se';\n  var ACTION_SOUTH_WEST = 'sw'; // Classes\n\n  var CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\n  var CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\n  var CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\n  var CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\n  var CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\n  var CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\n  var CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\"); // Data keys\n\n  var DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\n  var DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\"); // Drag modes\n\n  var DRAG_MODE_CROP = 'crop';\n  var DRAG_MODE_MOVE = 'move';\n  var DRAG_MODE_NONE = 'none'; // Events\n\n  var EVENT_CROP = 'crop';\n  var EVENT_CROP_END = 'cropend';\n  var EVENT_CROP_MOVE = 'cropmove';\n  var EVENT_CROP_START = 'cropstart';\n  var EVENT_DBLCLICK = 'dblclick';\n  var EVENT_TOUCH_START = IS_TOUCH_DEVICE ? 'touchstart' : 'mousedown';\n  var EVENT_TOUCH_MOVE = IS_TOUCH_DEVICE ? 'touchmove' : 'mousemove';\n  var EVENT_TOUCH_END = IS_TOUCH_DEVICE ? 'touchend touchcancel' : 'mouseup';\n  var EVENT_POINTER_DOWN = HAS_POINTER_EVENT ? 'pointerdown' : EVENT_TOUCH_START;\n  var EVENT_POINTER_MOVE = HAS_POINTER_EVENT ? 'pointermove' : EVENT_TOUCH_MOVE;\n  var EVENT_POINTER_UP = HAS_POINTER_EVENT ? 'pointerup pointercancel' : EVENT_TOUCH_END;\n  var EVENT_READY = 'ready';\n  var EVENT_RESIZE = 'resize';\n  var EVENT_WHEEL = 'wheel';\n  var EVENT_ZOOM = 'zoom'; // Mime types\n\n  var MIME_TYPE_JPEG = 'image/jpeg'; // RegExps\n\n  var REGEXP_ACTIONS = /^e|w|s|n|se|sw|ne|nw|all|crop|move|zoom$/;\n  var REGEXP_DATA_URL = /^data:/;\n  var REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\n  var REGEXP_TAG_NAME = /^img|canvas$/i; // Misc\n\n  var DEFAULTS = {\n    // Define the view mode of the cropper\n    viewMode: 0,\n    // 0, 1, 2, 3\n    // Define the dragging mode of the cropper\n    dragMode: DRAG_MODE_CROP,\n    // 'crop', 'move' or 'none'\n    // Define the initial aspect ratio of the crop box\n    initialAspectRatio: NaN,\n    // Define the aspect ratio of the crop box\n    aspectRatio: NaN,\n    // An object with the previous cropping result data\n    data: null,\n    // A selector for adding extra containers to preview\n    preview: '',\n    // Re-render the cropper when resize the window\n    responsive: true,\n    // Restore the cropped area after resize the window\n    restore: true,\n    // Check if the current image is a cross-origin image\n    checkCrossOrigin: true,\n    // Check the current image's Exif Orientation information\n    checkOrientation: true,\n    // Show the black modal\n    modal: true,\n    // Show the dashed lines for guiding\n    guides: true,\n    // Show the center indicator for guiding\n    center: true,\n    // Show the white modal to highlight the crop box\n    highlight: true,\n    // Show the grid background\n    background: true,\n    // Enable to crop the image automatically when initialize\n    autoCrop: true,\n    // Define the percentage of automatic cropping area when initializes\n    autoCropArea: 0.8,\n    // Enable to move the image\n    movable: true,\n    // Enable to rotate the image\n    rotatable: true,\n    // Enable to scale the image\n    scalable: true,\n    // Enable to zoom the image\n    zoomable: true,\n    // Enable to zoom the image by dragging touch\n    zoomOnTouch: true,\n    // Enable to zoom the image by wheeling mouse\n    zoomOnWheel: true,\n    // Define zoom ratio when zoom the image by wheeling mouse\n    wheelZoomRatio: 0.1,\n    // Enable to move the crop box\n    cropBoxMovable: true,\n    // Enable to resize the crop box\n    cropBoxResizable: true,\n    // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n    toggleDragModeOnDblclick: true,\n    // Size limitation\n    minCanvasWidth: 0,\n    minCanvasHeight: 0,\n    minCropBoxWidth: 0,\n    minCropBoxHeight: 0,\n    minContainerWidth: 200,\n    minContainerHeight: 100,\n    // Shortcuts of events\n    ready: null,\n    cropstart: null,\n    cropmove: null,\n    cropend: null,\n    crop: null,\n    zoom: null\n  };\n  var TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n  /**\n   * Check if the given value is not a number.\n   */\n\n  var isNaN = Number.isNaN || WINDOW.isNaN;\n  /**\n   * Check if the given value is a number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n   */\n\n  function isNumber(value) {\n    return typeof value === 'number' && !isNaN(value);\n  }\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n\n\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n  /**\n   * Check if the given value is undefined.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n   */\n\n\n  function isUndefined(value) {\n    return typeof value === 'undefined';\n  }\n  /**\n   * Check if the given value is an object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n   */\n\n\n  function isObject(value) {\n    return _typeof(value) === 'object' && value !== null;\n  }\n\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  /**\n   * Check if the given value is a plain object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n   */\n\n  function isPlainObject(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n\n    try {\n      var _constructor = value.constructor;\n      var prototype = _constructor.prototype;\n      return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n    } catch (error) {\n      return false;\n    }\n  }\n  /**\n   * Check if the given value is a function.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n   */\n\n\n  function isFunction(value) {\n    return typeof value === 'function';\n  }\n\n  var slice = Array.prototype.slice;\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n  /**\n   * Iterate the given data.\n   * @param {*} data - The data to iterate.\n   * @param {Function} callback - The process function for each element.\n   * @returns {*} The original data.\n   */\n\n\n  function forEach(data, callback) {\n    if (data && isFunction(callback)) {\n      if (Array.isArray(data) || isNumber(data.length)\n      /* array-like */\n      ) {\n          toArray(data).forEach(function (value, key) {\n            callback.call(data, value, key, data);\n          });\n        } else if (isObject(data)) {\n        Object.keys(data).forEach(function (key) {\n          callback.call(data, data[key], key, data);\n        });\n      }\n    }\n\n    return data;\n  }\n  /**\n   * Extend the given object.\n   * @param {*} target - The target object to extend.\n   * @param {*} args - The rest objects for merging to the target object.\n   * @returns {Object} The extended object.\n   */\n\n\n  var assign = Object.assign || function assign(target) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (isObject(target) && args.length > 0) {\n      args.forEach(function (arg) {\n        if (isObject(arg)) {\n          Object.keys(arg).forEach(function (key) {\n            target[key] = arg[key];\n          });\n        }\n      });\n    }\n\n    return target;\n  };\n\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n  /**\n   * Normalize decimal number.\n   * Check out {@link https://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n\n  var REGEXP_SUFFIX = /^width|height|left|top|marginLeft|marginTop$/;\n  /**\n   * Apply styles to the given element.\n   * @param {Element} element - The target element.\n   * @param {Object} styles - The styles for applying.\n   */\n\n  function setStyle(element, styles) {\n    var style = element.style;\n    forEach(styles, function (value, property) {\n      if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n        value = \"\".concat(value, \"px\");\n      }\n\n      style[property] = value;\n    });\n  }\n  /**\n   * Check if the given element has a special class.\n   * @param {Element} element - The element to check.\n   * @param {string} value - The class to search.\n   * @returns {boolean} Returns `true` if the special class was found.\n   */\n\n\n  function hasClass(element, value) {\n    return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n  }\n  /**\n   * Add classes to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be added.\n   */\n\n\n  function addClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        addClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.add(value);\n      return;\n    }\n\n    var className = element.className.trim();\n\n    if (!className) {\n      element.className = value;\n    } else if (className.indexOf(value) < 0) {\n      element.className = \"\".concat(className, \" \").concat(value);\n    }\n  }\n  /**\n   * Remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be removed.\n   */\n\n\n  function removeClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        removeClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.remove(value);\n      return;\n    }\n\n    if (element.className.indexOf(value) >= 0) {\n      element.className = element.className.replace(value, '');\n    }\n  }\n  /**\n   * Add or remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be toggled.\n   * @param {boolean} added - Add only.\n   */\n\n\n  function toggleClass(element, value, added) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        toggleClass(elem, value, added);\n      });\n      return;\n    } // IE10-11 doesn't support the second parameter of `classList.toggle`\n\n\n    if (added) {\n      addClass(element, value);\n    } else {\n      removeClass(element, value);\n    }\n  }\n\n  var REGEXP_CAMEL_CASE = /([a-z\\d])([A-Z])/g;\n  /**\n   * Transform the given string from camelCase to kebab-case\n   * @param {string} value - The value to transform.\n   * @returns {string} The transformed value.\n   */\n\n  function toParamCase(value) {\n    return value.replace(REGEXP_CAMEL_CASE, '$1-$2').toLowerCase();\n  }\n  /**\n   * Get data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to get.\n   * @returns {string} The data value.\n   */\n\n\n  function getData(element, name) {\n    if (isObject(element[name])) {\n      return element[name];\n    }\n\n    if (element.dataset) {\n      return element.dataset[name];\n    }\n\n    return element.getAttribute(\"data-\".concat(toParamCase(name)));\n  }\n  /**\n   * Set data to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to set.\n   * @param {string} data - The data value.\n   */\n\n\n  function setData(element, name, data) {\n    if (isObject(data)) {\n      element[name] = data;\n    } else if (element.dataset) {\n      element.dataset[name] = data;\n    } else {\n      element.setAttribute(\"data-\".concat(toParamCase(name)), data);\n    }\n  }\n  /**\n   * Remove data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to remove.\n   */\n\n\n  function removeData(element, name) {\n    if (isObject(element[name])) {\n      try {\n        delete element[name];\n      } catch (error) {\n        element[name] = undefined;\n      }\n    } else if (element.dataset) {\n      // #128 Safari not allows to delete dataset property\n      try {\n        delete element.dataset[name];\n      } catch (error) {\n        element.dataset[name] = undefined;\n      }\n    } else {\n      element.removeAttribute(\"data-\".concat(toParamCase(name)));\n    }\n  }\n\n  var REGEXP_SPACES = /\\s\\s*/;\n\n  var onceSupported = function () {\n    var supported = false;\n\n    if (IS_BROWSER) {\n      var once = false;\n\n      var listener = function listener() {};\n\n      var options = Object.defineProperty({}, 'once', {\n        get: function get() {\n          supported = true;\n          return once;\n        },\n\n        /**\n         * This setter can fix a `TypeError` in strict mode\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n         * @param {boolean} value - The value to set\n         */\n        set: function set(value) {\n          once = value;\n        }\n      });\n      WINDOW.addEventListener('test', listener, options);\n      WINDOW.removeEventListener('test', listener, options);\n    }\n\n    return supported;\n  }();\n  /**\n   * Remove event listener from the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n\n  function removeListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (!onceSupported) {\n        var listeners = element.listeners;\n\n        if (listeners && listeners[event] && listeners[event][listener]) {\n          handler = listeners[event][listener];\n          delete listeners[event][listener];\n\n          if (Object.keys(listeners[event]).length === 0) {\n            delete listeners[event];\n          }\n\n          if (Object.keys(listeners).length === 0) {\n            delete element.listeners;\n          }\n        }\n      }\n\n      element.removeEventListener(event, handler, options);\n    });\n  }\n  /**\n   * Add event listener to the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n\n  function addListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var _handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (options.once && !onceSupported) {\n        var _element$listeners = element.listeners,\n            listeners = _element$listeners === void 0 ? {} : _element$listeners;\n\n        _handler = function handler() {\n          delete listeners[event][listener];\n          element.removeEventListener(event, _handler, options);\n\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          listener.apply(element, args);\n        };\n\n        if (!listeners[event]) {\n          listeners[event] = {};\n        }\n\n        if (listeners[event][listener]) {\n          element.removeEventListener(event, listeners[event][listener], options);\n        }\n\n        listeners[event][listener] = _handler;\n        element.listeners = listeners;\n      }\n\n      element.addEventListener(event, _handler, options);\n    });\n  }\n  /**\n   * Dispatch event on the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Object} data - The additional event data.\n   * @returns {boolean} Indicate if the event is default prevented or not.\n   */\n\n\n  function dispatchEvent(element, type, data) {\n    var event; // Event and CustomEvent on IE9-11 are global objects, not constructors\n\n    if (isFunction(Event) && isFunction(CustomEvent)) {\n      event = new CustomEvent(type, {\n        detail: data,\n        bubbles: true,\n        cancelable: true\n      });\n    } else {\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(type, true, true, data);\n    }\n\n    return element.dispatchEvent(event);\n  }\n  /**\n   * Get the offset base on the document.\n   * @param {Element} element - The target element.\n   * @returns {Object} The offset data.\n   */\n\n\n  function getOffset(element) {\n    var box = element.getBoundingClientRect();\n    return {\n      left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n      top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n    };\n  }\n\n  var location = WINDOW.location;\n  var REGEXP_ORIGINS = /^(\\w+:)\\/\\/([^:/?#]*):?(\\d*)/i;\n  /**\n   * Check if the given URL is a cross origin URL.\n   * @param {string} url - The target URL.\n   * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n   */\n\n  function isCrossOriginURL(url) {\n    var parts = url.match(REGEXP_ORIGINS);\n    return parts !== null && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n  }\n  /**\n   * Add timestamp to the given URL.\n   * @param {string} url - The target URL.\n   * @returns {string} The result URL.\n   */\n\n\n  function addTimestamp(url) {\n    var timestamp = \"timestamp=\".concat(new Date().getTime());\n    return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n  }\n  /**\n   * Get transforms base on the given object.\n   * @param {Object} obj - The target object.\n   * @returns {string} A string contains transform values.\n   */\n\n\n  function getTransforms(_ref) {\n    var rotate = _ref.rotate,\n        scaleX = _ref.scaleX,\n        scaleY = _ref.scaleY,\n        translateX = _ref.translateX,\n        translateY = _ref.translateY;\n    var values = [];\n\n    if (isNumber(translateX) && translateX !== 0) {\n      values.push(\"translateX(\".concat(translateX, \"px)\"));\n    }\n\n    if (isNumber(translateY) && translateY !== 0) {\n      values.push(\"translateY(\".concat(translateY, \"px)\"));\n    } // Rotate should come first before scale to match orientation transform\n\n\n    if (isNumber(rotate) && rotate !== 0) {\n      values.push(\"rotate(\".concat(rotate, \"deg)\"));\n    }\n\n    if (isNumber(scaleX) && scaleX !== 1) {\n      values.push(\"scaleX(\".concat(scaleX, \")\"));\n    }\n\n    if (isNumber(scaleY) && scaleY !== 1) {\n      values.push(\"scaleY(\".concat(scaleY, \")\"));\n    }\n\n    var transform = values.length ? values.join(' ') : 'none';\n    return {\n      WebkitTransform: transform,\n      msTransform: transform,\n      transform: transform\n    };\n  }\n  /**\n   * Get the max ratio of a group of pointers.\n   * @param {string} pointers - The target pointers.\n   * @returns {number} The result ratio.\n   */\n\n\n  function getMaxZoomRatio(pointers) {\n    var pointers2 = _objectSpread2({}, pointers);\n\n    var ratios = [];\n    forEach(pointers, function (pointer, pointerId) {\n      delete pointers2[pointerId];\n      forEach(pointers2, function (pointer2) {\n        var x1 = Math.abs(pointer.startX - pointer2.startX);\n        var y1 = Math.abs(pointer.startY - pointer2.startY);\n        var x2 = Math.abs(pointer.endX - pointer2.endX);\n        var y2 = Math.abs(pointer.endY - pointer2.endY);\n        var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n        var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n        var ratio = (z2 - z1) / z1;\n        ratios.push(ratio);\n      });\n    });\n    ratios.sort(function (a, b) {\n      return Math.abs(a) < Math.abs(b);\n    });\n    return ratios[0];\n  }\n  /**\n   * Get a pointer from an event object.\n   * @param {Object} event - The target event object.\n   * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n   * @returns {Object} The result pointer contains start and/or end point coordinates.\n   */\n\n\n  function getPointer(_ref2, endOnly) {\n    var pageX = _ref2.pageX,\n        pageY = _ref2.pageY;\n    var end = {\n      endX: pageX,\n      endY: pageY\n    };\n    return endOnly ? end : _objectSpread2({\n      startX: pageX,\n      startY: pageY\n    }, end);\n  }\n  /**\n   * Get the center point coordinate of a group of pointers.\n   * @param {Object} pointers - The target pointers.\n   * @returns {Object} The center point coordinate.\n   */\n\n\n  function getPointersCenter(pointers) {\n    var pageX = 0;\n    var pageY = 0;\n    var count = 0;\n    forEach(pointers, function (_ref3) {\n      var startX = _ref3.startX,\n          startY = _ref3.startY;\n      pageX += startX;\n      pageY += startY;\n      count += 1;\n    });\n    pageX /= count;\n    pageY /= count;\n    return {\n      pageX: pageX,\n      pageY: pageY\n    };\n  }\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n\n\n  function getAdjustedSizes(_ref4) // or 'cover'\n  {\n    var aspectRatio = _ref4.aspectRatio,\n        height = _ref4.height,\n        width = _ref4.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n\n      if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Get the new sizes of a rectangle after rotated.\n   * @param {Object} data - The original sizes.\n   * @returns {Object} The result sizes.\n   */\n\n\n  function getRotatedSizes(_ref5) {\n    var width = _ref5.width,\n        height = _ref5.height,\n        degree = _ref5.degree;\n    degree = Math.abs(degree) % 180;\n\n    if (degree === 90) {\n      return {\n        width: height,\n        height: width\n      };\n    }\n\n    var arc = degree % 90 * Math.PI / 180;\n    var sinArc = Math.sin(arc);\n    var cosArc = Math.cos(arc);\n    var newWidth = width * cosArc + height * sinArc;\n    var newHeight = width * sinArc + height * cosArc;\n    return degree > 90 ? {\n      width: newHeight,\n      height: newWidth\n    } : {\n      width: newWidth,\n      height: newHeight\n    };\n  }\n  /**\n   * Get a canvas which drew the given image.\n   * @param {HTMLImageElement} image - The image for drawing.\n   * @param {Object} imageData - The image data.\n   * @param {Object} canvasData - The canvas data.\n   * @param {Object} options - The options.\n   * @returns {HTMLCanvasElement} The result canvas.\n   */\n\n\n  function getSourceCanvas(image, _ref6, _ref7, _ref8) {\n    var imageAspectRatio = _ref6.aspectRatio,\n        imageNaturalWidth = _ref6.naturalWidth,\n        imageNaturalHeight = _ref6.naturalHeight,\n        _ref6$rotate = _ref6.rotate,\n        rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\n        _ref6$scaleX = _ref6.scaleX,\n        scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\n        _ref6$scaleY = _ref6.scaleY,\n        scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n    var aspectRatio = _ref7.aspectRatio,\n        naturalWidth = _ref7.naturalWidth,\n        naturalHeight = _ref7.naturalHeight;\n    var _ref8$fillColor = _ref8.fillColor,\n        fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\n        _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n        imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\n        _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n        imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\n        _ref8$maxWidth = _ref8.maxWidth,\n        maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\n        _ref8$maxHeight = _ref8.maxHeight,\n        maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\n        _ref8$minWidth = _ref8.minWidth,\n        minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\n        _ref8$minHeight = _ref8.minHeight,\n        minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n    var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight)); // Note: should always use image's natural sizes for drawing as\n    // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n\n    var destMaxSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var destMinSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n    var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n    var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = fillColor;\n    context.fillRect(0, 0, width, height);\n    context.save();\n    context.translate(width / 2, height / 2);\n    context.rotate(rotate * Math.PI / 180);\n    context.scale(scaleX, scaleY);\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n    context.imageSmoothingQuality = imageSmoothingQuality;\n    context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n    context.restore();\n    return canvas;\n  }\n\n  var fromCharCode = String.fromCharCode;\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    length += start;\n\n    for (var i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n\n    return str;\n  }\n\n  var REGEXP_DATA_URL_HEAD = /^data:.*,/;\n  /**\n   * Transform Data URL to array buffer.\n   * @param {string} dataURL - The Data URL to transform.\n   * @returns {ArrayBuffer} The result array buffer.\n   */\n\n  function dataURLToArrayBuffer(dataURL) {\n    var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n    var binary = atob(base64);\n    var arrayBuffer = new ArrayBuffer(binary.length);\n    var uint8 = new Uint8Array(arrayBuffer);\n    forEach(uint8, function (value, i) {\n      uint8[i] = binary.charCodeAt(i);\n    });\n    return arrayBuffer;\n  }\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n\n\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = []; // Chunk Typed Array for better performance (#435)\n\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n\n\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation; // Ignores range error when the image does not have correct Exif information\n\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n\n          offset += 1;\n        }\n      }\n\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n\n          if (littleEndian || endianness === 0x4D4D\n          /* bigEndian */\n          ) {\n              if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n                var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n                if (firstIFDOffset >= 0x00000008) {\n                  ifdStart = tiffOffset + firstIFDOffset;\n                }\n              }\n            }\n        }\n      }\n\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n\n        var _offset;\n\n        var i;\n\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112\n          /* Orientation */\n          ) {\n              // 8 is the offset of the current tag's value\n              _offset += 8; // Get the original orientation value\n\n              orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n              dataView.setUint16(_offset, 1, littleEndian);\n              break;\n            }\n        }\n      }\n    } catch (error) {\n      orientation = 1;\n    }\n\n    return orientation;\n  }\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n\n\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n      // Rotate left 180°\n\n      case 3:\n        rotate = -180;\n        break;\n      // Flip vertical\n\n      case 4:\n        scaleY = -1;\n        break;\n      // Flip vertical and rotate right 90°\n\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n      // Rotate right 90°\n\n      case 6:\n        rotate = 90;\n        break;\n      // Flip horizontal and rotate right 90°\n\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n      // Rotate left 90°\n\n      case 8:\n        rotate = -90;\n        break;\n    }\n\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var render = {\n    render: function render() {\n      this.initContainer();\n      this.initCanvas();\n      this.initCropBox();\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    },\n    initContainer: function initContainer() {\n      var element = this.element,\n          options = this.options,\n          container = this.container,\n          cropper = this.cropper;\n      addClass(cropper, CLASS_HIDDEN);\n      removeClass(element, CLASS_HIDDEN);\n      var containerData = {\n        width: Math.max(container.offsetWidth, Number(options.minContainerWidth) || 200),\n        height: Math.max(container.offsetHeight, Number(options.minContainerHeight) || 100)\n      };\n      this.containerData = containerData;\n      setStyle(cropper, {\n        width: containerData.width,\n        height: containerData.height\n      });\n      addClass(element, CLASS_HIDDEN);\n      removeClass(cropper, CLASS_HIDDEN);\n    },\n    // Canvas (image wrapper)\n    initCanvas: function initCanvas() {\n      var containerData = this.containerData,\n          imageData = this.imageData;\n      var viewMode = this.options.viewMode;\n      var rotated = Math.abs(imageData.rotate) % 180 === 90;\n      var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n      var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n      var aspectRatio = naturalWidth / naturalHeight;\n      var canvasWidth = containerData.width;\n      var canvasHeight = containerData.height;\n\n      if (containerData.height * aspectRatio > containerData.width) {\n        if (viewMode === 3) {\n          canvasWidth = containerData.height * aspectRatio;\n        } else {\n          canvasHeight = containerData.width / aspectRatio;\n        }\n      } else if (viewMode === 3) {\n        canvasHeight = containerData.width / aspectRatio;\n      } else {\n        canvasWidth = containerData.height * aspectRatio;\n      }\n\n      var canvasData = {\n        aspectRatio: aspectRatio,\n        naturalWidth: naturalWidth,\n        naturalHeight: naturalHeight,\n        width: canvasWidth,\n        height: canvasHeight\n      };\n      canvasData.left = (containerData.width - canvasWidth) / 2;\n      canvasData.top = (containerData.height - canvasHeight) / 2;\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      this.canvasData = canvasData;\n      this.limited = viewMode === 1 || viewMode === 2;\n      this.limitCanvas(true, true);\n      this.initialImageData = assign({}, imageData);\n      this.initialCanvasData = assign({}, canvasData);\n    },\n    limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var viewMode = options.viewMode;\n      var aspectRatio = canvasData.aspectRatio;\n      var cropped = this.cropped && cropBoxData;\n\n      if (sizeLimited) {\n        var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n        var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n        if (viewMode > 1) {\n          minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n          minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n          if (viewMode === 3) {\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        } else if (viewMode > 0) {\n          if (minCanvasWidth) {\n            minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n          } else if (minCanvasHeight) {\n            minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n          } else if (cropped) {\n            minCanvasWidth = cropBoxData.width;\n            minCanvasHeight = cropBoxData.height;\n\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        }\n\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minCanvasWidth,\n          height: minCanvasHeight\n        });\n\n        minCanvasWidth = _getAdjustedSizes.width;\n        minCanvasHeight = _getAdjustedSizes.height;\n        canvasData.minWidth = minCanvasWidth;\n        canvasData.minHeight = minCanvasHeight;\n        canvasData.maxWidth = Infinity;\n        canvasData.maxHeight = Infinity;\n      }\n\n      if (positionLimited) {\n        if (viewMode > (cropped ? 0 : 1)) {\n          var newCanvasLeft = containerData.width - canvasData.width;\n          var newCanvasTop = containerData.height - canvasData.height;\n          canvasData.minLeft = Math.min(0, newCanvasLeft);\n          canvasData.minTop = Math.min(0, newCanvasTop);\n          canvasData.maxLeft = Math.max(0, newCanvasLeft);\n          canvasData.maxTop = Math.max(0, newCanvasTop);\n\n          if (cropped && this.limited) {\n            canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n            canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n            canvasData.maxLeft = cropBoxData.left;\n            canvasData.maxTop = cropBoxData.top;\n\n            if (viewMode === 2) {\n              if (canvasData.width >= containerData.width) {\n                canvasData.minLeft = Math.min(0, newCanvasLeft);\n                canvasData.maxLeft = Math.max(0, newCanvasLeft);\n              }\n\n              if (canvasData.height >= containerData.height) {\n                canvasData.minTop = Math.min(0, newCanvasTop);\n                canvasData.maxTop = Math.max(0, newCanvasTop);\n              }\n            }\n          }\n        } else {\n          canvasData.minLeft = -canvasData.width;\n          canvasData.minTop = -canvasData.height;\n          canvasData.maxLeft = containerData.width;\n          canvasData.maxTop = containerData.height;\n        }\n      }\n    },\n    renderCanvas: function renderCanvas(changed, transformed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n\n      if (transformed) {\n        var _getRotatedSizes = getRotatedSizes({\n          width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n          height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n          degree: imageData.rotate || 0\n        }),\n            naturalWidth = _getRotatedSizes.width,\n            naturalHeight = _getRotatedSizes.height;\n\n        var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n        var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n        canvasData.left -= (width - canvasData.width) / 2;\n        canvasData.top -= (height - canvasData.height) / 2;\n        canvasData.width = width;\n        canvasData.height = height;\n        canvasData.aspectRatio = naturalWidth / naturalHeight;\n        canvasData.naturalWidth = naturalWidth;\n        canvasData.naturalHeight = naturalHeight;\n        this.limitCanvas(true, false);\n      }\n\n      if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n        canvasData.left = canvasData.oldLeft;\n      }\n\n      if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n        canvasData.top = canvasData.oldTop;\n      }\n\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      this.limitCanvas(false, true);\n      canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n      canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      setStyle(this.canvas, assign({\n        width: canvasData.width,\n        height: canvasData.height\n      }, getTransforms({\n        translateX: canvasData.left,\n        translateY: canvasData.top\n      })));\n      this.renderImage(changed);\n\n      if (this.cropped && this.limited) {\n        this.limitCropBox(true, true);\n      }\n    },\n    renderImage: function renderImage(changed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n      var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n      var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n      assign(imageData, {\n        width: width,\n        height: height,\n        left: (canvasData.width - width) / 2,\n        top: (canvasData.height - height) / 2\n      });\n      setStyle(this.image, assign({\n        width: imageData.width,\n        height: imageData.height\n      }, getTransforms(assign({\n        translateX: imageData.left,\n        translateY: imageData.top\n      }, imageData))));\n\n      if (changed) {\n        this.output();\n      }\n    },\n    initCropBox: function initCropBox() {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n      var autoCropArea = Number(options.autoCropArea) || 0.8;\n      var cropBoxData = {\n        width: canvasData.width,\n        height: canvasData.height\n      };\n\n      if (aspectRatio) {\n        if (canvasData.height * aspectRatio > canvasData.width) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.cropBoxData = cropBoxData;\n      this.limitCropBox(true, true); // Initialize auto crop area\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight); // The width/height of auto crop area must large than \"minWidth/Height\"\n\n      cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n      cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n      cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n      cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n      this.initialCropBoxData = assign({}, cropBoxData);\n    },\n    limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData,\n          limited = this.limited;\n      var aspectRatio = options.aspectRatio;\n\n      if (sizeLimited) {\n        var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n        var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n        var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n        var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height; // The min/maxCropBoxWidth/Height must be less than container's width/height\n\n        minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n        minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n        if (aspectRatio) {\n          if (minCropBoxWidth && minCropBoxHeight) {\n            if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n              minCropBoxHeight = minCropBoxWidth / aspectRatio;\n            } else {\n              minCropBoxWidth = minCropBoxHeight * aspectRatio;\n            }\n          } else if (minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else if (minCropBoxHeight) {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n\n          if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n            maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n          } else {\n            maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n          }\n        } // The minWidth/Height must be less than maxWidth/Height\n\n\n        cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n        cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n        cropBoxData.maxWidth = maxCropBoxWidth;\n        cropBoxData.maxHeight = maxCropBoxHeight;\n      }\n\n      if (positionLimited) {\n        if (limited) {\n          cropBoxData.minLeft = Math.max(0, canvasData.left);\n          cropBoxData.minTop = Math.max(0, canvasData.top);\n          cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n          cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n        } else {\n          cropBoxData.minLeft = 0;\n          cropBoxData.minTop = 0;\n          cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n          cropBoxData.maxTop = containerData.height - cropBoxData.height;\n        }\n      }\n    },\n    renderCropBox: function renderCropBox() {\n      var options = this.options,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData;\n\n      if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n        cropBoxData.left = cropBoxData.oldLeft;\n      }\n\n      if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n        cropBoxData.top = cropBoxData.oldTop;\n      }\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n      this.limitCropBox(false, true);\n      cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n      cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n\n      if (options.movable && options.cropBoxMovable) {\n        // Turn to move the canvas when the crop box is equal to the container\n        setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n      }\n\n      setStyle(this.cropBox, assign({\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      }, getTransforms({\n        translateX: cropBoxData.left,\n        translateY: cropBoxData.top\n      })));\n\n      if (this.cropped && this.limited) {\n        this.limitCanvas(true, true);\n      }\n\n      if (!this.disabled) {\n        this.output();\n      }\n    },\n    output: function output() {\n      this.preview();\n      dispatchEvent(this.element, EVENT_CROP, this.getData());\n    }\n  };\n  var preview = {\n    initPreview: function initPreview() {\n      var element = this.element,\n          crossOrigin = this.crossOrigin;\n      var preview = this.options.preview;\n      var url = crossOrigin ? this.crossOriginUrl : this.url;\n      var alt = element.alt || 'The image to preview';\n      var image = document.createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = url;\n      image.alt = alt;\n      this.viewBox.appendChild(image);\n      this.viewBoxImage = image;\n\n      if (!preview) {\n        return;\n      }\n\n      var previews = preview;\n\n      if (typeof preview === 'string') {\n        previews = element.ownerDocument.querySelectorAll(preview);\n      } else if (preview.querySelector) {\n        previews = [preview];\n      }\n\n      this.previews = previews;\n      forEach(previews, function (el) {\n        var img = document.createElement('img'); // Save the original size for recover\n\n        setData(el, DATA_PREVIEW, {\n          width: el.offsetWidth,\n          height: el.offsetHeight,\n          html: el.innerHTML\n        });\n\n        if (crossOrigin) {\n          img.crossOrigin = crossOrigin;\n        }\n\n        img.src = url;\n        img.alt = alt;\n        /**\n         * Override img element styles\n         * Add `display:block` to avoid margin top issue\n         * Add `height:auto` to override `height` attribute on IE8\n         * (Occur only when margin-top <= -height)\n         */\n\n        img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n        el.innerHTML = '';\n        el.appendChild(img);\n      });\n    },\n    resetPreview: function resetPreview() {\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        setStyle(element, {\n          width: data.width,\n          height: data.height\n        });\n        element.innerHTML = data.html;\n        removeData(element, DATA_PREVIEW);\n      });\n    },\n    preview: function preview() {\n      var imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var cropBoxWidth = cropBoxData.width,\n          cropBoxHeight = cropBoxData.height;\n      var width = imageData.width,\n          height = imageData.height;\n      var left = cropBoxData.left - canvasData.left - imageData.left;\n      var top = cropBoxData.top - canvasData.top - imageData.top;\n\n      if (!this.cropped || this.disabled) {\n        return;\n      }\n\n      setStyle(this.viewBoxImage, assign({\n        width: width,\n        height: height\n      }, getTransforms(assign({\n        translateX: -left,\n        translateY: -top\n      }, imageData))));\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        var originalWidth = data.width;\n        var originalHeight = data.height;\n        var newWidth = originalWidth;\n        var newHeight = originalHeight;\n        var ratio = 1;\n\n        if (cropBoxWidth) {\n          ratio = originalWidth / cropBoxWidth;\n          newHeight = cropBoxHeight * ratio;\n        }\n\n        if (cropBoxHeight && newHeight > originalHeight) {\n          ratio = originalHeight / cropBoxHeight;\n          newWidth = cropBoxWidth * ratio;\n          newHeight = originalHeight;\n        }\n\n        setStyle(element, {\n          width: newWidth,\n          height: newHeight\n        });\n        setStyle(element.getElementsByTagName('img')[0], assign({\n          width: width * ratio,\n          height: height * ratio\n        }, getTransforms(assign({\n          translateX: -left * ratio,\n          translateY: -top * ratio\n        }, imageData))));\n      });\n    }\n  };\n  var events = {\n    bind: function bind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        addListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        addListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        addListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        addListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        addListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n\n      if (options.zoomable && options.zoomOnWheel) {\n        addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this), {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n      }\n\n      addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n      addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n\n      if (options.responsive) {\n        addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n      }\n    },\n    unbind: function unbind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        removeListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        removeListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        removeListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        removeListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n      if (options.zoomable && options.zoomOnWheel) {\n        removeListener(cropper, EVENT_WHEEL, this.onWheel, {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n      }\n\n      removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n      removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n      if (options.responsive) {\n        removeListener(window, EVENT_RESIZE, this.onResize);\n      }\n    }\n  };\n  var handlers = {\n    resize: function resize() {\n      if (this.disabled) {\n        return;\n      }\n\n      var options = this.options,\n          container = this.container,\n          containerData = this.containerData;\n      var ratio = container.offsetWidth / containerData.width; // Resize when width changed or height changed\n\n      if (ratio !== 1 || container.offsetHeight !== containerData.height) {\n        var canvasData;\n        var cropBoxData;\n\n        if (options.restore) {\n          canvasData = this.getCanvasData();\n          cropBoxData = this.getCropBoxData();\n        }\n\n        this.render();\n\n        if (options.restore) {\n          this.setCanvasData(forEach(canvasData, function (n, i) {\n            canvasData[i] = n * ratio;\n          }));\n          this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n            cropBoxData[i] = n * ratio;\n          }));\n        }\n      }\n    },\n    dblclick: function dblclick() {\n      if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n        return;\n      }\n\n      this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n    },\n    wheel: function wheel(event) {\n      var _this = this;\n\n      var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n      var delta = 1;\n\n      if (this.disabled) {\n        return;\n      }\n\n      event.preventDefault(); // Limit wheel speed to prevent zoom too fast (#21)\n\n      if (this.wheeling) {\n        return;\n      }\n\n      this.wheeling = true;\n      setTimeout(function () {\n        _this.wheeling = false;\n      }, 50);\n\n      if (event.deltaY) {\n        delta = event.deltaY > 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        delta = -event.wheelDelta / 120;\n      } else if (event.detail) {\n        delta = event.detail > 0 ? 1 : -1;\n      }\n\n      this.zoom(-delta * ratio, event);\n    },\n    cropStart: function cropStart(event) {\n      var buttons = event.buttons,\n          button = event.button;\n\n      if (this.disabled // Handle mouse event and pointer event and ignore touch event\n      || (event.type === 'mousedown' || event.type === 'pointerdown' && event.pointerType === 'mouse') && ( // No primary button (Usually the left button)\n      isNumber(buttons) && buttons !== 1 || isNumber(button) && button !== 0 // Open context menu\n      || event.ctrlKey)) {\n        return;\n      }\n\n      var options = this.options,\n          pointers = this.pointers;\n      var action;\n\n      if (event.changedTouches) {\n        // Handle touch event\n        forEach(event.changedTouches, function (touch) {\n          pointers[touch.identifier] = getPointer(touch);\n        });\n      } else {\n        // Handle mouse event and pointer event\n        pointers[event.pointerId || 0] = getPointer(event);\n      }\n\n      if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n        action = ACTION_ZOOM;\n      } else {\n        action = getData(event.target, DATA_ACTION);\n      }\n\n      if (!REGEXP_ACTIONS.test(action)) {\n        return;\n      }\n\n      if (dispatchEvent(this.element, EVENT_CROP_START, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      } // This line is required for preventing page zooming in iOS browsers\n\n\n      event.preventDefault();\n      this.action = action;\n      this.cropping = false;\n\n      if (action === ACTION_CROP) {\n        this.cropping = true;\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n    },\n    cropMove: function cropMove(event) {\n      var action = this.action;\n\n      if (this.disabled || !action) {\n        return;\n      }\n\n      var pointers = this.pointers;\n      event.preventDefault();\n\n      if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      }\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          // The first parameter should not be undefined (#432)\n          assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n        });\n      } else {\n        assign(pointers[event.pointerId || 0] || {}, getPointer(event, true));\n      }\n\n      this.change(event);\n    },\n    cropEnd: function cropEnd(event) {\n      if (this.disabled) {\n        return;\n      }\n\n      var action = this.action,\n          pointers = this.pointers;\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          delete pointers[touch.identifier];\n        });\n      } else {\n        delete pointers[event.pointerId || 0];\n      }\n\n      if (!action) {\n        return;\n      }\n\n      event.preventDefault();\n\n      if (!Object.keys(pointers).length) {\n        this.action = '';\n      }\n\n      if (this.cropping) {\n        this.cropping = false;\n        toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n      }\n\n      dispatchEvent(this.element, EVENT_CROP_END, {\n        originalEvent: event,\n        action: action\n      });\n    }\n  };\n  var change = {\n    change: function change(event) {\n      var options = this.options,\n          canvasData = this.canvasData,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData,\n          pointers = this.pointers;\n      var action = this.action;\n      var aspectRatio = options.aspectRatio;\n      var left = cropBoxData.left,\n          top = cropBoxData.top,\n          width = cropBoxData.width,\n          height = cropBoxData.height;\n      var right = left + width;\n      var bottom = top + height;\n      var minLeft = 0;\n      var minTop = 0;\n      var maxWidth = containerData.width;\n      var maxHeight = containerData.height;\n      var renderable = true;\n      var offset; // Locking aspect ratio in \"free mode\" by holding shift key\n\n      if (!aspectRatio && event.shiftKey) {\n        aspectRatio = width && height ? width / height : 1;\n      }\n\n      if (this.limited) {\n        minLeft = cropBoxData.minLeft;\n        minTop = cropBoxData.minTop;\n        maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n        maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n      }\n\n      var pointer = pointers[Object.keys(pointers)[0]];\n      var range = {\n        x: pointer.endX - pointer.startX,\n        y: pointer.endY - pointer.startY\n      };\n\n      var check = function check(side) {\n        switch (side) {\n          case ACTION_EAST:\n            if (right + range.x > maxWidth) {\n              range.x = maxWidth - right;\n            }\n\n            break;\n\n          case ACTION_WEST:\n            if (left + range.x < minLeft) {\n              range.x = minLeft - left;\n            }\n\n            break;\n\n          case ACTION_NORTH:\n            if (top + range.y < minTop) {\n              range.y = minTop - top;\n            }\n\n            break;\n\n          case ACTION_SOUTH:\n            if (bottom + range.y > maxHeight) {\n              range.y = maxHeight - bottom;\n            }\n\n            break;\n        }\n      };\n\n      switch (action) {\n        // Move crop box\n        case ACTION_ALL:\n          left += range.x;\n          top += range.y;\n          break;\n        // Resize crop box\n\n        case ACTION_EAST:\n          if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n\n          if (width < 0) {\n            action = ACTION_WEST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n\n          if (height < 0) {\n            action = ACTION_SOUTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n\n          if (width < 0) {\n            action = ACTION_EAST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_SOUTH);\n          height += range.y;\n\n          if (height < 0) {\n            action = ACTION_NORTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH_EAST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_NORTH_WEST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n            left += cropBoxData.width - width;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_WEST:\n          if (aspectRatio) {\n            if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_WEST);\n            width -= range.x;\n            left += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_EAST:\n          if (aspectRatio) {\n            if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_EAST);\n            width += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n        // Move canvas\n\n        case ACTION_MOVE:\n          this.move(range.x, range.y);\n          renderable = false;\n          break;\n        // Zoom canvas\n\n        case ACTION_ZOOM:\n          this.zoom(getMaxZoomRatio(pointers), event);\n          renderable = false;\n          break;\n        // Create crop box\n\n        case ACTION_CROP:\n          if (!range.x || !range.y) {\n            renderable = false;\n            break;\n          }\n\n          offset = getOffset(this.cropper);\n          left = pointer.startX - offset.left;\n          top = pointer.startY - offset.top;\n          width = cropBoxData.minWidth;\n          height = cropBoxData.minHeight;\n\n          if (range.x > 0) {\n            action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n          } else if (range.x < 0) {\n            left -= width;\n            action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n          }\n\n          if (range.y < 0) {\n            top -= height;\n          } // Show the crop box if is hidden\n\n\n          if (!this.cropped) {\n            removeClass(this.cropBox, CLASS_HIDDEN);\n            this.cropped = true;\n\n            if (this.limited) {\n              this.limitCropBox(true, true);\n            }\n          }\n\n          break;\n      }\n\n      if (renderable) {\n        cropBoxData.width = width;\n        cropBoxData.height = height;\n        cropBoxData.left = left;\n        cropBoxData.top = top;\n        this.action = action;\n        this.renderCropBox();\n      } // Override\n\n\n      forEach(pointers, function (p) {\n        p.startX = p.endX;\n        p.startY = p.endY;\n      });\n    }\n  };\n  var methods = {\n    // Show the crop box manually\n    crop: function crop() {\n      if (this.ready && !this.cropped && !this.disabled) {\n        this.cropped = true;\n        this.limitCropBox(true, true);\n\n        if (this.options.modal) {\n          addClass(this.dragBox, CLASS_MODAL);\n        }\n\n        removeClass(this.cropBox, CLASS_HIDDEN);\n        this.setCropBoxData(this.initialCropBoxData);\n      }\n\n      return this;\n    },\n    // Reset the image and crop box to their initial states\n    reset: function reset() {\n      if (this.ready && !this.disabled) {\n        this.imageData = assign({}, this.initialImageData);\n        this.canvasData = assign({}, this.initialCanvasData);\n        this.cropBoxData = assign({}, this.initialCropBoxData);\n        this.renderCanvas();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n\n      return this;\n    },\n    // Clear the crop box\n    clear: function clear() {\n      if (this.cropped && !this.disabled) {\n        assign(this.cropBoxData, {\n          left: 0,\n          top: 0,\n          width: 0,\n          height: 0\n        });\n        this.cropped = false;\n        this.renderCropBox();\n        this.limitCanvas(true, true); // Render canvas after crop box rendered\n\n        this.renderCanvas();\n        removeClass(this.dragBox, CLASS_MODAL);\n        addClass(this.cropBox, CLASS_HIDDEN);\n      }\n\n      return this;\n    },\n\n    /**\n     * Replace the image's src and rebuild the cropper\n     * @param {string} url - The new URL.\n     * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n     * @returns {Cropper} this\n     */\n    replace: function replace(url) {\n      var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!this.disabled && url) {\n        if (this.isImg) {\n          this.element.src = url;\n        }\n\n        if (hasSameSize) {\n          this.url = url;\n          this.image.src = url;\n\n          if (this.ready) {\n            this.viewBoxImage.src = url;\n            forEach(this.previews, function (element) {\n              element.getElementsByTagName('img')[0].src = url;\n            });\n          }\n        } else {\n          if (this.isImg) {\n            this.replaced = true;\n          }\n\n          this.options.data = null;\n          this.uncreate();\n          this.load(url);\n        }\n      }\n\n      return this;\n    },\n    // Enable (unfreeze) the cropper\n    enable: function enable() {\n      if (this.ready && this.disabled) {\n        this.disabled = false;\n        removeClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n    // Disable (freeze) the cropper\n    disable: function disable() {\n      if (this.ready && !this.disabled) {\n        this.disabled = true;\n        addClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n\n    /**\n     * Destroy the cropper and remove the instance from the image\n     * @returns {Cropper} this\n     */\n    destroy: function destroy() {\n      var element = this.element;\n\n      if (!element[NAMESPACE]) {\n        return this;\n      }\n\n      element[NAMESPACE] = undefined;\n\n      if (this.isImg && this.replaced) {\n        element.src = this.originalUrl;\n      }\n\n      this.uncreate();\n      return this;\n    },\n\n    /**\n     * Move the canvas with relative offsets\n     * @param {number} offsetX - The relative offset distance on the x-axis.\n     * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n     * @returns {Cropper} this\n     */\n    move: function move(offsetX) {\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n      var _this$canvasData = this.canvasData,\n          left = _this$canvasData.left,\n          top = _this$canvasData.top;\n      return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n    },\n\n    /**\n     * Move the canvas to an absolute point\n     * @param {number} x - The x-axis coordinate.\n     * @param {number} [y=x] - The y-axis coordinate.\n     * @returns {Cropper} this\n     */\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n      var canvasData = this.canvasData;\n      var changed = false;\n      x = Number(x);\n      y = Number(y);\n\n      if (this.ready && !this.disabled && this.options.movable) {\n        if (isNumber(x)) {\n          canvasData.left = x;\n          changed = true;\n        }\n\n        if (isNumber(y)) {\n          canvasData.top = y;\n          changed = true;\n        }\n\n        if (changed) {\n          this.renderCanvas(true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Zoom the canvas with a relative ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoom: function zoom(ratio, _originalEvent) {\n      var canvasData = this.canvasData;\n      ratio = Number(ratio);\n\n      if (ratio < 0) {\n        ratio = 1 / (1 - ratio);\n      } else {\n        ratio = 1 + ratio;\n      }\n\n      return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n    },\n\n    /**\n     * Zoom the canvas to an absolute ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Object} pivot - The zoom pivot point coordinate.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var width = canvasData.width,\n          height = canvasData.height,\n          naturalWidth = canvasData.naturalWidth,\n          naturalHeight = canvasData.naturalHeight;\n      ratio = Number(ratio);\n\n      if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n        var newWidth = naturalWidth * ratio;\n        var newHeight = naturalHeight * ratio;\n\n        if (dispatchEvent(this.element, EVENT_ZOOM, {\n          ratio: ratio,\n          oldRatio: width / naturalWidth,\n          originalEvent: _originalEvent\n        }) === false) {\n          return this;\n        }\n\n        if (_originalEvent) {\n          var pointers = this.pointers;\n          var offset = getOffset(this.cropper);\n          var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n            pageX: _originalEvent.pageX,\n            pageY: _originalEvent.pageY\n          }; // Zoom from the triggering point of the event\n\n          canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n        } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n          canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n        } else {\n          // Zoom from the center of the canvas\n          canvasData.left -= (newWidth - width) / 2;\n          canvasData.top -= (newHeight - height) / 2;\n        }\n\n        canvasData.width = newWidth;\n        canvasData.height = newHeight;\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Rotate the canvas with a relative degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotate: function rotate(degree) {\n      return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n    },\n\n    /**\n     * Rotate the canvas to an absolute degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotateTo: function rotateTo(degree) {\n      degree = Number(degree);\n\n      if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n        this.imageData.rotate = degree % 360;\n        this.renderCanvas(true, true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Scale the image on the x-axis.\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @returns {Cropper} this\n     */\n    scaleX: function scaleX(_scaleX) {\n      var scaleY = this.imageData.scaleY;\n      return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n    },\n\n    /**\n     * Scale the image on the y-axis.\n     * @param {number} scaleY - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scaleY: function scaleY(_scaleY) {\n      var scaleX = this.imageData.scaleX;\n      return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n    },\n\n    /**\n     * Scale the image\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n      var imageData = this.imageData;\n      var transformed = false;\n      scaleX = Number(scaleX);\n      scaleY = Number(scaleY);\n\n      if (this.ready && !this.disabled && this.options.scalable) {\n        if (isNumber(scaleX)) {\n          imageData.scaleX = scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(scaleY)) {\n          imageData.scaleY = scaleY;\n          transformed = true;\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the cropped area position and size data (base on the original image)\n     * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n     * @returns {Object} The result cropped data.\n     */\n    getData: function getData() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          x: cropBoxData.left - canvasData.left,\n          y: cropBoxData.top - canvasData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n        var ratio = imageData.width / imageData.naturalWidth;\n        forEach(data, function (n, i) {\n          data[i] = n / ratio;\n        });\n\n        if (rounded) {\n          // In case rounding off leads to extra 1px in right or bottom border\n          // we should round the top-left corner and the dimension (#343).\n          var bottom = Math.round(data.y + data.height);\n          var right = Math.round(data.x + data.width);\n          data.x = Math.round(data.x);\n          data.y = Math.round(data.y);\n          data.width = right - data.x;\n          data.height = bottom - data.y;\n        }\n      } else {\n        data = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n\n      if (options.rotatable) {\n        data.rotate = imageData.rotate || 0;\n      }\n\n      if (options.scalable) {\n        data.scaleX = imageData.scaleX || 1;\n        data.scaleY = imageData.scaleY || 1;\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the cropped area position and size with new data\n     * @param {Object} data - The new data.\n     * @returns {Cropper} this\n     */\n    setData: function setData(data) {\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData;\n      var cropBoxData = {};\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        var transformed = false;\n\n        if (options.rotatable) {\n          if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n            imageData.rotate = data.rotate;\n            transformed = true;\n          }\n        }\n\n        if (options.scalable) {\n          if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n            imageData.scaleX = data.scaleX;\n            transformed = true;\n          }\n\n          if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n            imageData.scaleY = data.scaleY;\n            transformed = true;\n          }\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n\n        var ratio = imageData.width / imageData.naturalWidth;\n\n        if (isNumber(data.x)) {\n          cropBoxData.left = data.x * ratio + canvasData.left;\n        }\n\n        if (isNumber(data.y)) {\n          cropBoxData.top = data.y * ratio + canvasData.top;\n        }\n\n        if (isNumber(data.width)) {\n          cropBoxData.width = data.width * ratio;\n        }\n\n        if (isNumber(data.height)) {\n          cropBoxData.height = data.height * ratio;\n        }\n\n        this.setCropBoxData(cropBoxData);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the container size data.\n     * @returns {Object} The result container data.\n     */\n    getContainerData: function getContainerData() {\n      return this.ready ? assign({}, this.containerData) : {};\n    },\n\n    /**\n     * Get the image position and size data.\n     * @returns {Object} The result image data.\n     */\n    getImageData: function getImageData() {\n      return this.sized ? assign({}, this.imageData) : {};\n    },\n\n    /**\n     * Get the canvas position and size data.\n     * @returns {Object} The result canvas data.\n     */\n    getCanvasData: function getCanvasData() {\n      var canvasData = this.canvasData;\n      var data = {};\n\n      if (this.ready) {\n        forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n          data[n] = canvasData[n];\n        });\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the canvas position and size with new data.\n     * @param {Object} data - The new canvas data.\n     * @returns {Cropper} this\n     */\n    setCanvasData: function setCanvasData(data) {\n      var canvasData = this.canvasData;\n      var aspectRatio = canvasData.aspectRatio;\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          canvasData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          canvasData.top = data.top;\n        }\n\n        if (isNumber(data.width)) {\n          canvasData.width = data.width;\n          canvasData.height = data.width / aspectRatio;\n        } else if (isNumber(data.height)) {\n          canvasData.height = data.height;\n          canvasData.width = data.height * aspectRatio;\n        }\n\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the crop box position and size data.\n     * @returns {Object} The result crop box data.\n     */\n    getCropBoxData: function getCropBoxData() {\n      var cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          left: cropBoxData.left,\n          top: cropBoxData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n      }\n\n      return data || {};\n    },\n\n    /**\n     * Set the crop box position and size with new data.\n     * @param {Object} data - The new crop box data.\n     * @returns {Cropper} this\n     */\n    setCropBoxData: function setCropBoxData(data) {\n      var cropBoxData = this.cropBoxData;\n      var aspectRatio = this.options.aspectRatio;\n      var widthChanged;\n      var heightChanged;\n\n      if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          cropBoxData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          cropBoxData.top = data.top;\n        }\n\n        if (isNumber(data.width) && data.width !== cropBoxData.width) {\n          widthChanged = true;\n          cropBoxData.width = data.width;\n        }\n\n        if (isNumber(data.height) && data.height !== cropBoxData.height) {\n          heightChanged = true;\n          cropBoxData.height = data.height;\n        }\n\n        if (aspectRatio) {\n          if (widthChanged) {\n            cropBoxData.height = cropBoxData.width / aspectRatio;\n          } else if (heightChanged) {\n            cropBoxData.width = cropBoxData.height * aspectRatio;\n          }\n        }\n\n        this.renderCropBox();\n      }\n\n      return this;\n    },\n\n    /**\n     * Get a canvas drawn the cropped image.\n     * @param {Object} [options={}] - The config options.\n     * @returns {HTMLCanvasElement} - The result canvas.\n     */\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!this.ready || !window.HTMLCanvasElement) {\n        return null;\n      }\n\n      var canvasData = this.canvasData;\n      var source = getSourceCanvas(this.image, this.imageData, canvasData, options); // Returns the source canvas if it is not cropped.\n\n      if (!this.cropped) {\n        return source;\n      }\n\n      var _this$getData = this.getData(),\n          initialX = _this$getData.x,\n          initialY = _this$getData.y,\n          initialWidth = _this$getData.width,\n          initialHeight = _this$getData.height;\n\n      var ratio = source.width / Math.floor(canvasData.naturalWidth);\n\n      if (ratio !== 1) {\n        initialX *= ratio;\n        initialY *= ratio;\n        initialWidth *= ratio;\n        initialHeight *= ratio;\n      }\n\n      var aspectRatio = initialWidth / initialHeight;\n      var maxSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.maxWidth || Infinity,\n        height: options.maxHeight || Infinity\n      });\n      var minSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.minWidth || 0,\n        height: options.minHeight || 0\n      }, 'cover');\n\n      var _getAdjustedSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.width || (ratio !== 1 ? source.width : initialWidth),\n        height: options.height || (ratio !== 1 ? source.height : initialHeight)\n      }),\n          width = _getAdjustedSizes.width,\n          height = _getAdjustedSizes.height;\n\n      width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n      height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      canvas.width = normalizeDecimalNumber(width);\n      canvas.height = normalizeDecimalNumber(height);\n      context.fillStyle = options.fillColor || 'transparent';\n      context.fillRect(0, 0, width, height);\n      var _options$imageSmoothi = options.imageSmoothingEnabled,\n          imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\n          imageSmoothingQuality = options.imageSmoothingQuality;\n      context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n      if (imageSmoothingQuality) {\n        context.imageSmoothingQuality = imageSmoothingQuality;\n      } // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n\n\n      var sourceWidth = source.width;\n      var sourceHeight = source.height; // Source canvas parameters\n\n      var srcX = initialX;\n      var srcY = initialY;\n      var srcWidth;\n      var srcHeight; // Destination canvas parameters\n\n      var dstX;\n      var dstY;\n      var dstWidth;\n      var dstHeight;\n\n      if (srcX <= -initialWidth || srcX > sourceWidth) {\n        srcX = 0;\n        srcWidth = 0;\n        dstX = 0;\n        dstWidth = 0;\n      } else if (srcX <= 0) {\n        dstX = -srcX;\n        srcX = 0;\n        srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n        dstWidth = srcWidth;\n      } else if (srcX <= sourceWidth) {\n        dstX = 0;\n        srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n        dstWidth = srcWidth;\n      }\n\n      if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n        srcY = 0;\n        srcHeight = 0;\n        dstY = 0;\n        dstHeight = 0;\n      } else if (srcY <= 0) {\n        dstY = -srcY;\n        srcY = 0;\n        srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n        dstHeight = srcHeight;\n      } else if (srcY <= sourceHeight) {\n        dstY = 0;\n        srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n        dstHeight = srcHeight;\n      }\n\n      var params = [srcX, srcY, srcWidth, srcHeight]; // Avoid \"IndexSizeError\"\n\n      if (dstWidth > 0 && dstHeight > 0) {\n        var scale = width / initialWidth;\n        params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n      } // All the numerical parameters should be integer for `drawImage`\n      // https://github.com/fengyuanchen/cropper/issues/476\n\n\n      context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\n        return Math.floor(normalizeDecimalNumber(param));\n      }))));\n      return canvas;\n    },\n\n    /**\n     * Change the aspect ratio of the crop box.\n     * @param {number} aspectRatio - The new aspect ratio.\n     * @returns {Cropper} this\n     */\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      var options = this.options;\n\n      if (!this.disabled && !isUndefined(aspectRatio)) {\n        // 0 -> NaN\n        options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n        if (this.ready) {\n          this.initCropBox();\n\n          if (this.cropped) {\n            this.renderCropBox();\n          }\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Change the drag mode.\n     * @param {string} mode - The new drag mode.\n     * @returns {Cropper} this\n     */\n    setDragMode: function setDragMode(mode) {\n      var options = this.options,\n          dragBox = this.dragBox,\n          face = this.face;\n\n      if (this.ready && !this.disabled) {\n        var croppable = mode === DRAG_MODE_CROP;\n        var movable = options.movable && mode === DRAG_MODE_MOVE;\n        mode = croppable || movable ? mode : DRAG_MODE_NONE;\n        options.dragMode = mode;\n        setData(dragBox, DATA_ACTION, mode);\n        toggleClass(dragBox, CLASS_CROP, croppable);\n        toggleClass(dragBox, CLASS_MOVE, movable);\n\n        if (!options.cropBoxMovable) {\n          // Sync drag mode to crop box when it is not movable\n          setData(face, DATA_ACTION, mode);\n          toggleClass(face, CLASS_CROP, croppable);\n          toggleClass(face, CLASS_MOVE, movable);\n        }\n      }\n\n      return this;\n    }\n  };\n  var AnotherCropper = WINDOW.Cropper;\n\n  var Cropper = /*#__PURE__*/function () {\n    /**\n     * Create a new Cropper.\n     * @param {Element} element - The target element for cropping.\n     * @param {Object} [options={}] - The configuration options.\n     */\n    function Cropper(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, Cropper);\n\n      if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n        throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n      }\n\n      this.element = element;\n      this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n      this.cropped = false;\n      this.disabled = false;\n      this.pointers = {};\n      this.ready = false;\n      this.reloading = false;\n      this.replaced = false;\n      this.sized = false;\n      this.sizing = false;\n      this.init();\n    }\n\n    _createClass(Cropper, [{\n      key: \"init\",\n      value: function init() {\n        var element = this.element;\n        var tagName = element.tagName.toLowerCase();\n        var url;\n\n        if (element[NAMESPACE]) {\n          return;\n        }\n\n        element[NAMESPACE] = this;\n\n        if (tagName === 'img') {\n          this.isImg = true; // e.g.: \"img/picture.jpg\"\n\n          url = element.getAttribute('src') || '';\n          this.originalUrl = url; // Stop when it's a blank image\n\n          if (!url) {\n            return;\n          } // e.g.: \"https://example.com/img/picture.jpg\"\n\n\n          url = element.src;\n        } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n          url = element.toDataURL();\n        }\n\n        this.load(url);\n      }\n    }, {\n      key: \"load\",\n      value: function load(url) {\n        var _this = this;\n\n        if (!url) {\n          return;\n        }\n\n        this.url = url;\n        this.imageData = {};\n        var element = this.element,\n            options = this.options;\n\n        if (!options.rotatable && !options.scalable) {\n          options.checkOrientation = false;\n        } // Only IE10+ supports Typed Arrays\n\n\n        if (!options.checkOrientation || !window.ArrayBuffer) {\n          this.clone();\n          return;\n        } // Detect the mime type of the image directly if it is a Data URL\n\n\n        if (REGEXP_DATA_URL.test(url)) {\n          // Read ArrayBuffer from Data URL of JPEG images directly for better performance\n          if (REGEXP_DATA_URL_JPEG.test(url)) {\n            this.read(dataURLToArrayBuffer(url));\n          } else {\n            // Only a JPEG image may contains Exif Orientation information,\n            // the rest types of Data URLs are not necessary to check orientation at all.\n            this.clone();\n          }\n\n          return;\n        } // 1. Detect the mime type of the image by a XMLHttpRequest.\n        // 2. Load the image as ArrayBuffer for reading orientation if its a JPEG image.\n\n\n        var xhr = new XMLHttpRequest();\n        var clone = this.clone.bind(this);\n        this.reloading = true;\n        this.xhr = xhr; // 1. Cross origin requests are only supported for protocol schemes:\n        // http, https, data, chrome, chrome-extension.\n        // 2. Access to XMLHttpRequest from a Data URL will be blocked by CORS policy\n        // in some browsers as IE11 and Safari.\n\n        xhr.onabort = clone;\n        xhr.onerror = clone;\n        xhr.ontimeout = clone;\n\n        xhr.onprogress = function () {\n          // Abort the request directly if it not a JPEG image for better performance\n          if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n            xhr.abort();\n          }\n        };\n\n        xhr.onload = function () {\n          _this.read(xhr.response);\n        };\n\n        xhr.onloadend = function () {\n          _this.reloading = false;\n          _this.xhr = null;\n        }; // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n\n\n        if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n          url = addTimestamp(url);\n        }\n\n        xhr.open('GET', url);\n        xhr.responseType = 'arraybuffer';\n        xhr.withCredentials = element.crossOrigin === 'use-credentials';\n        xhr.send();\n      }\n    }, {\n      key: \"read\",\n      value: function read(arrayBuffer) {\n        var options = this.options,\n            imageData = this.imageData; // Reset the orientation value to its default value 1\n        // as some iOS browsers will render image with its orientation\n\n        var orientation = resetAndGetOrientation(arrayBuffer);\n        var rotate = 0;\n        var scaleX = 1;\n        var scaleY = 1;\n\n        if (orientation > 1) {\n          // Generate a new URL which has the default orientation value\n          this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n\n          var _parseOrientation = parseOrientation(orientation);\n\n          rotate = _parseOrientation.rotate;\n          scaleX = _parseOrientation.scaleX;\n          scaleY = _parseOrientation.scaleY;\n        }\n\n        if (options.rotatable) {\n          imageData.rotate = rotate;\n        }\n\n        if (options.scalable) {\n          imageData.scaleX = scaleX;\n          imageData.scaleY = scaleY;\n        }\n\n        this.clone();\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        var element = this.element,\n            url = this.url;\n        var crossOrigin = element.crossOrigin;\n        var crossOriginUrl = url;\n\n        if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n          if (!crossOrigin) {\n            crossOrigin = 'anonymous';\n          } // Bust cache when there is not a \"crossOrigin\" property (#519)\n\n\n          crossOriginUrl = addTimestamp(url);\n        }\n\n        this.crossOrigin = crossOrigin;\n        this.crossOriginUrl = crossOriginUrl;\n        var image = document.createElement('img');\n\n        if (crossOrigin) {\n          image.crossOrigin = crossOrigin;\n        }\n\n        image.src = crossOriginUrl || url;\n        image.alt = element.alt || 'The image to crop';\n        this.image = image;\n        image.onload = this.start.bind(this);\n        image.onerror = this.stop.bind(this);\n        addClass(image, CLASS_HIDE);\n        element.parentNode.insertBefore(image, element.nextSibling);\n      }\n    }, {\n      key: \"start\",\n      value: function start() {\n        var _this2 = this;\n\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        this.sizing = true; // Match all browsers that use WebKit as the layout engine in iOS devices,\n        // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n\n        var isIOSWebKit = WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent);\n\n        var done = function done(naturalWidth, naturalHeight) {\n          assign(_this2.imageData, {\n            naturalWidth: naturalWidth,\n            naturalHeight: naturalHeight,\n            aspectRatio: naturalWidth / naturalHeight\n          });\n          _this2.sizing = false;\n          _this2.sized = true;\n\n          _this2.build();\n        }; // Most modern browsers (excepts iOS WebKit)\n\n\n        if (image.naturalWidth && !isIOSWebKit) {\n          done(image.naturalWidth, image.naturalHeight);\n          return;\n        }\n\n        var sizingImage = document.createElement('img');\n        var body = document.body || document.documentElement;\n        this.sizingImage = sizingImage;\n\n        sizingImage.onload = function () {\n          done(sizingImage.width, sizingImage.height);\n\n          if (!isIOSWebKit) {\n            body.removeChild(sizingImage);\n          }\n        };\n\n        sizingImage.src = image.src; // iOS WebKit will convert the image automatically\n        // with its orientation once append it into DOM (#279)\n\n        if (!isIOSWebKit) {\n          sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n          body.appendChild(sizingImage);\n        }\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        image.parentNode.removeChild(image);\n        this.image = null;\n      }\n    }, {\n      key: \"build\",\n      value: function build() {\n        if (!this.sized || this.ready) {\n          return;\n        }\n\n        var element = this.element,\n            options = this.options,\n            image = this.image; // Create cropper elements\n\n        var container = element.parentNode;\n        var template = document.createElement('div');\n        template.innerHTML = TEMPLATE;\n        var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n        var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n        var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n        var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n        var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n        this.container = container;\n        this.cropper = cropper;\n        this.canvas = canvas;\n        this.dragBox = dragBox;\n        this.cropBox = cropBox;\n        this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n        this.face = face;\n        canvas.appendChild(image); // Hide the original image\n\n        addClass(element, CLASS_HIDDEN); // Inserts the cropper after to the current image\n\n        container.insertBefore(cropper, element.nextSibling); // Show the image if is hidden\n\n        if (!this.isImg) {\n          removeClass(image, CLASS_HIDE);\n        }\n\n        this.initPreview();\n        this.bind();\n        options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n        options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n        options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n        addClass(cropBox, CLASS_HIDDEN);\n\n        if (!options.guides) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n        }\n\n        if (!options.center) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n        }\n\n        if (options.background) {\n          addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n        }\n\n        if (!options.highlight) {\n          addClass(face, CLASS_INVISIBLE);\n        }\n\n        if (options.cropBoxMovable) {\n          addClass(face, CLASS_MOVE);\n          setData(face, DATA_ACTION, ACTION_ALL);\n        }\n\n        if (!options.cropBoxResizable) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n        }\n\n        this.render();\n        this.ready = true;\n        this.setDragMode(options.dragMode);\n\n        if (options.autoCrop) {\n          this.crop();\n        }\n\n        this.setData(options.data);\n\n        if (isFunction(options.ready)) {\n          addListener(element, EVENT_READY, options.ready, {\n            once: true\n          });\n        }\n\n        dispatchEvent(element, EVENT_READY);\n      }\n    }, {\n      key: \"unbuild\",\n      value: function unbuild() {\n        if (!this.ready) {\n          return;\n        }\n\n        this.ready = false;\n        this.unbind();\n        this.resetPreview();\n        this.cropper.parentNode.removeChild(this.cropper);\n        removeClass(this.element, CLASS_HIDDEN);\n      }\n    }, {\n      key: \"uncreate\",\n      value: function uncreate() {\n        if (this.ready) {\n          this.unbuild();\n          this.ready = false;\n          this.cropped = false;\n        } else if (this.sizing) {\n          this.sizingImage.onload = null;\n          this.sizing = false;\n          this.sized = false;\n        } else if (this.reloading) {\n          this.xhr.onabort = null;\n          this.xhr.abort();\n        } else if (this.image) {\n          this.stop();\n        }\n      }\n      /**\n       * Get the no conflict cropper class.\n       * @returns {Cropper} The cropper class.\n       */\n\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Cropper = AnotherCropper;\n        return Cropper;\n      }\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        assign(DEFAULTS, isPlainObject(options) && options);\n      }\n    }]);\n\n    return Cropper;\n  }();\n\n  assign(Cropper.prototype, render, preview, events, handlers, change, methods);\n  return Cropper;\n});","map":{"version":3,"sources":["/Users/bhavyameghnani/Desktop/react-saas-template/node_modules/cropperjs/dist/cropper.js"],"names":["global","factory","exports","module","define","amd","self","Cropper","_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_defineProperty","value","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","Array","isArray","_arrayLikeToArray","iter","from","o","minLen","n","toString","call","slice","name","test","len","arr2","IS_BROWSER","window","document","WINDOW","IS_TOUCH_DEVICE","documentElement","HAS_POINTER_EVENT","NAMESPACE","ACTION_ALL","ACTION_CROP","ACTION_MOVE","ACTION_ZOOM","ACTION_EAST","ACTION_WEST","ACTION_SOUTH","ACTION_NORTH","ACTION_NORTH_EAST","ACTION_NORTH_WEST","ACTION_SOUTH_EAST","ACTION_SOUTH_WEST","CLASS_CROP","concat","CLASS_DISABLED","CLASS_HIDDEN","CLASS_HIDE","CLASS_INVISIBLE","CLASS_MODAL","CLASS_MOVE","DATA_ACTION","DATA_PREVIEW","DRAG_MODE_CROP","DRAG_MODE_MOVE","DRAG_MODE_NONE","EVENT_CROP","EVENT_CROP_END","EVENT_CROP_MOVE","EVENT_CROP_START","EVENT_DBLCLICK","EVENT_TOUCH_START","EVENT_TOUCH_MOVE","EVENT_TOUCH_END","EVENT_POINTER_DOWN","EVENT_POINTER_MOVE","EVENT_POINTER_UP","EVENT_READY","EVENT_RESIZE","EVENT_WHEEL","EVENT_ZOOM","MIME_TYPE_JPEG","REGEXP_ACTIONS","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","DEFAULTS","viewMode","dragMode","initialAspectRatio","NaN","aspectRatio","data","preview","responsive","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","cropstart","cropmove","cropend","crop","zoom","TEMPLATE","isNaN","Number","isNumber","isPositiveNumber","Infinity","isUndefined","isObject","hasOwnProperty","isPlainObject","_constructor","error","isFunction","toArray","callback","assign","_len","args","_key","arg","REGEXP_DECIMALS","normalizeDecimalNumber","times","undefined","Math","round","REGEXP_SUFFIX","setStyle","element","styles","style","property","hasClass","classList","contains","className","indexOf","addClass","elem","add","trim","removeClass","remove","replace","toggleClass","added","REGEXP_CAMEL_CASE","toParamCase","toLowerCase","getData","dataset","getAttribute","setData","setAttribute","removeData","removeAttribute","REGEXP_SPACES","onceSupported","supported","once","listener","options","get","set","addEventListener","removeEventListener","removeListener","type","handler","split","event","listeners","addListener","_handler","_element$listeners","_len2","_key2","dispatchEvent","Event","CustomEvent","detail","bubbles","cancelable","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","pageXOffset","clientLeft","top","pageYOffset","clientTop","location","REGEXP_ORIGINS","isCrossOriginURL","url","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","_ref","rotate","scaleX","scaleY","translateX","translateY","values","transform","join","WebkitTransform","msTransform","getMaxZoomRatio","pointers","pointers2","ratios","pointer","pointerId","pointer2","x1","abs","startX","y1","startY","x2","endX","y2","endY","z1","sqrt","z2","ratio","sort","a","b","getPointer","_ref2","endOnly","pageX","pageY","end","getPointersCenter","count","_ref3","getAdjustedSizes","_ref4","height","width","isValidWidth","isValidHeight","adjustedWidth","getRotatedSizes","_ref5","degree","arc","PI","sinArc","sin","cosArc","cos","newWidth","newHeight","getSourceCanvas","image","_ref6","_ref7","_ref8","imageAspectRatio","imageNaturalWidth","naturalWidth","imageNaturalHeight","naturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","imageSmoothingEnabled","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","maxWidth","_ref8$maxHeight","maxHeight","_ref8$minWidth","minWidth","_ref8$minHeight","minHeight","canvas","createElement","context","getContext","maxSizes","minSizes","min","max","destMaxSizes","destMinSizes","destWidth","destHeight","params","fillStyle","fillRect","save","translate","scale","drawImage","map","param","floor","fromCharCode","String","getStringFromCharCode","dataView","start","str","getUint8","REGEXP_DATA_URL_HEAD","dataURLToArrayBuffer","dataURL","base64","binary","atob","arrayBuffer","ArrayBuffer","uint8","Uint8Array","charCodeAt","arrayBufferToDataURL","mimeType","chunks","chunkSize","subarray","btoa","resetAndGetOrientation","DataView","orientation","littleEndian","app1Start","ifdStart","byteLength","offset","exifIDCode","tiffOffset","endianness","getUint16","firstIFDOffset","getUint32","_length","_offset","setUint16","parseOrientation","render","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","cropper","containerData","offsetWidth","offsetHeight","imageData","rotated","canvasWidth","canvasHeight","canvasData","oldLeft","oldTop","limited","limitCanvas","initialImageData","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getAdjustedSizes","newCanvasLeft","newCanvasTop","minLeft","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","renderImage","limitCropBox","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","disabled","initPreview","crossOrigin","crossOriginUrl","alt","src","viewBox","appendChild","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","el","img","html","innerHTML","cssText","resetPreview","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","getElementsByTagName","events","bind","onCropStart","cropStart","onWheel","wheel","passive","capture","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","getCanvasData","getCropBoxData","setCanvasData","setCropBoxData","setDragMode","dragBox","_this","delta","preventDefault","wheeling","setTimeout","deltaY","wheelDelta","buttons","button","pointerType","ctrlKey","action","changedTouches","touch","identifier","originalEvent","cropping","change","right","bottom","renderable","shiftKey","range","x","y","check","side","move","p","methods","reset","clear","hasSameSize","isImg","replaced","uncreate","load","enable","disable","destroy","originalUrl","offsetX","offsetY","_this$canvasData","moveTo","_originalEvent","zoomTo","pivot","oldRatio","rotateTo","_scaleX","_scaleY","rounded","getContainerData","getImageData","sized","widthChanged","heightChanged","getCroppedCanvas","HTMLCanvasElement","_this$getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","sourceWidth","sourceHeight","srcX","srcY","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","setAspectRatio","mode","croppable","AnotherCropper","tagName","Error","reloading","sizing","init","toDataURL","clone","read","xhr","XMLHttpRequest","onabort","onerror","ontimeout","onprogress","getResponseHeader","abort","onload","response","onloadend","open","responseType","withCredentials","send","_parseOrientation","stop","parentNode","insertBefore","nextSibling","_this2","isIOSWebKit","navigator","userAgent","done","build","sizingImage","body","removeChild","template","getElementsByClassName","unbuild","noConflict","setDefaults"],"mappings":"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","sourcesContent":["/*!\n * Cropper.js v1.5.7\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2020-05-23T05:23:00.081Z\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Cropper = factory());\n}(this, (function () { 'use strict';\n\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      if (enumerableOnly) symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n  var IS_TOUCH_DEVICE = IS_BROWSER && WINDOW.document.documentElement ? 'ontouchstart' in WINDOW.document.documentElement : false;\n  var HAS_POINTER_EVENT = IS_BROWSER ? 'PointerEvent' in WINDOW : false;\n  var NAMESPACE = 'cropper'; // Actions\n\n  var ACTION_ALL = 'all';\n  var ACTION_CROP = 'crop';\n  var ACTION_MOVE = 'move';\n  var ACTION_ZOOM = 'zoom';\n  var ACTION_EAST = 'e';\n  var ACTION_WEST = 'w';\n  var ACTION_SOUTH = 's';\n  var ACTION_NORTH = 'n';\n  var ACTION_NORTH_EAST = 'ne';\n  var ACTION_NORTH_WEST = 'nw';\n  var ACTION_SOUTH_EAST = 'se';\n  var ACTION_SOUTH_WEST = 'sw'; // Classes\n\n  var CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\n  var CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\n  var CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\n  var CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\n  var CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\n  var CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\n  var CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\"); // Data keys\n\n  var DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\n  var DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\"); // Drag modes\n\n  var DRAG_MODE_CROP = 'crop';\n  var DRAG_MODE_MOVE = 'move';\n  var DRAG_MODE_NONE = 'none'; // Events\n\n  var EVENT_CROP = 'crop';\n  var EVENT_CROP_END = 'cropend';\n  var EVENT_CROP_MOVE = 'cropmove';\n  var EVENT_CROP_START = 'cropstart';\n  var EVENT_DBLCLICK = 'dblclick';\n  var EVENT_TOUCH_START = IS_TOUCH_DEVICE ? 'touchstart' : 'mousedown';\n  var EVENT_TOUCH_MOVE = IS_TOUCH_DEVICE ? 'touchmove' : 'mousemove';\n  var EVENT_TOUCH_END = IS_TOUCH_DEVICE ? 'touchend touchcancel' : 'mouseup';\n  var EVENT_POINTER_DOWN = HAS_POINTER_EVENT ? 'pointerdown' : EVENT_TOUCH_START;\n  var EVENT_POINTER_MOVE = HAS_POINTER_EVENT ? 'pointermove' : EVENT_TOUCH_MOVE;\n  var EVENT_POINTER_UP = HAS_POINTER_EVENT ? 'pointerup pointercancel' : EVENT_TOUCH_END;\n  var EVENT_READY = 'ready';\n  var EVENT_RESIZE = 'resize';\n  var EVENT_WHEEL = 'wheel';\n  var EVENT_ZOOM = 'zoom'; // Mime types\n\n  var MIME_TYPE_JPEG = 'image/jpeg'; // RegExps\n\n  var REGEXP_ACTIONS = /^e|w|s|n|se|sw|ne|nw|all|crop|move|zoom$/;\n  var REGEXP_DATA_URL = /^data:/;\n  var REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\n  var REGEXP_TAG_NAME = /^img|canvas$/i; // Misc\n\n  var DEFAULTS = {\n    // Define the view mode of the cropper\n    viewMode: 0,\n    // 0, 1, 2, 3\n    // Define the dragging mode of the cropper\n    dragMode: DRAG_MODE_CROP,\n    // 'crop', 'move' or 'none'\n    // Define the initial aspect ratio of the crop box\n    initialAspectRatio: NaN,\n    // Define the aspect ratio of the crop box\n    aspectRatio: NaN,\n    // An object with the previous cropping result data\n    data: null,\n    // A selector for adding extra containers to preview\n    preview: '',\n    // Re-render the cropper when resize the window\n    responsive: true,\n    // Restore the cropped area after resize the window\n    restore: true,\n    // Check if the current image is a cross-origin image\n    checkCrossOrigin: true,\n    // Check the current image's Exif Orientation information\n    checkOrientation: true,\n    // Show the black modal\n    modal: true,\n    // Show the dashed lines for guiding\n    guides: true,\n    // Show the center indicator for guiding\n    center: true,\n    // Show the white modal to highlight the crop box\n    highlight: true,\n    // Show the grid background\n    background: true,\n    // Enable to crop the image automatically when initialize\n    autoCrop: true,\n    // Define the percentage of automatic cropping area when initializes\n    autoCropArea: 0.8,\n    // Enable to move the image\n    movable: true,\n    // Enable to rotate the image\n    rotatable: true,\n    // Enable to scale the image\n    scalable: true,\n    // Enable to zoom the image\n    zoomable: true,\n    // Enable to zoom the image by dragging touch\n    zoomOnTouch: true,\n    // Enable to zoom the image by wheeling mouse\n    zoomOnWheel: true,\n    // Define zoom ratio when zoom the image by wheeling mouse\n    wheelZoomRatio: 0.1,\n    // Enable to move the crop box\n    cropBoxMovable: true,\n    // Enable to resize the crop box\n    cropBoxResizable: true,\n    // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n    toggleDragModeOnDblclick: true,\n    // Size limitation\n    minCanvasWidth: 0,\n    minCanvasHeight: 0,\n    minCropBoxWidth: 0,\n    minCropBoxHeight: 0,\n    minContainerWidth: 200,\n    minContainerHeight: 100,\n    // Shortcuts of events\n    ready: null,\n    cropstart: null,\n    cropmove: null,\n    cropend: null,\n    crop: null,\n    zoom: null\n  };\n\n  var TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n\n  /**\n   * Check if the given value is not a number.\n   */\n\n  var isNaN = Number.isNaN || WINDOW.isNaN;\n  /**\n   * Check if the given value is a number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n   */\n\n  function isNumber(value) {\n    return typeof value === 'number' && !isNaN(value);\n  }\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n  /**\n   * Check if the given value is undefined.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n   */\n\n  function isUndefined(value) {\n    return typeof value === 'undefined';\n  }\n  /**\n   * Check if the given value is an object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n   */\n\n  function isObject(value) {\n    return _typeof(value) === 'object' && value !== null;\n  }\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  /**\n   * Check if the given value is a plain object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n   */\n\n  function isPlainObject(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n\n    try {\n      var _constructor = value.constructor;\n      var prototype = _constructor.prototype;\n      return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n    } catch (error) {\n      return false;\n    }\n  }\n  /**\n   * Check if the given value is a function.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n   */\n\n  function isFunction(value) {\n    return typeof value === 'function';\n  }\n  var slice = Array.prototype.slice;\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n  /**\n   * Iterate the given data.\n   * @param {*} data - The data to iterate.\n   * @param {Function} callback - The process function for each element.\n   * @returns {*} The original data.\n   */\n\n  function forEach(data, callback) {\n    if (data && isFunction(callback)) {\n      if (Array.isArray(data) || isNumber(data.length)\n      /* array-like */\n      ) {\n          toArray(data).forEach(function (value, key) {\n            callback.call(data, value, key, data);\n          });\n        } else if (isObject(data)) {\n        Object.keys(data).forEach(function (key) {\n          callback.call(data, data[key], key, data);\n        });\n      }\n    }\n\n    return data;\n  }\n  /**\n   * Extend the given object.\n   * @param {*} target - The target object to extend.\n   * @param {*} args - The rest objects for merging to the target object.\n   * @returns {Object} The extended object.\n   */\n\n  var assign = Object.assign || function assign(target) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (isObject(target) && args.length > 0) {\n      args.forEach(function (arg) {\n        if (isObject(arg)) {\n          Object.keys(arg).forEach(function (key) {\n            target[key] = arg[key];\n          });\n        }\n      });\n    }\n\n    return target;\n  };\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n  /**\n   * Normalize decimal number.\n   * Check out {@link https://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n  var REGEXP_SUFFIX = /^width|height|left|top|marginLeft|marginTop$/;\n  /**\n   * Apply styles to the given element.\n   * @param {Element} element - The target element.\n   * @param {Object} styles - The styles for applying.\n   */\n\n  function setStyle(element, styles) {\n    var style = element.style;\n    forEach(styles, function (value, property) {\n      if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n        value = \"\".concat(value, \"px\");\n      }\n\n      style[property] = value;\n    });\n  }\n  /**\n   * Check if the given element has a special class.\n   * @param {Element} element - The element to check.\n   * @param {string} value - The class to search.\n   * @returns {boolean} Returns `true` if the special class was found.\n   */\n\n  function hasClass(element, value) {\n    return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n  }\n  /**\n   * Add classes to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be added.\n   */\n\n  function addClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        addClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.add(value);\n      return;\n    }\n\n    var className = element.className.trim();\n\n    if (!className) {\n      element.className = value;\n    } else if (className.indexOf(value) < 0) {\n      element.className = \"\".concat(className, \" \").concat(value);\n    }\n  }\n  /**\n   * Remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be removed.\n   */\n\n  function removeClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        removeClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.remove(value);\n      return;\n    }\n\n    if (element.className.indexOf(value) >= 0) {\n      element.className = element.className.replace(value, '');\n    }\n  }\n  /**\n   * Add or remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be toggled.\n   * @param {boolean} added - Add only.\n   */\n\n  function toggleClass(element, value, added) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        toggleClass(elem, value, added);\n      });\n      return;\n    } // IE10-11 doesn't support the second parameter of `classList.toggle`\n\n\n    if (added) {\n      addClass(element, value);\n    } else {\n      removeClass(element, value);\n    }\n  }\n  var REGEXP_CAMEL_CASE = /([a-z\\d])([A-Z])/g;\n  /**\n   * Transform the given string from camelCase to kebab-case\n   * @param {string} value - The value to transform.\n   * @returns {string} The transformed value.\n   */\n\n  function toParamCase(value) {\n    return value.replace(REGEXP_CAMEL_CASE, '$1-$2').toLowerCase();\n  }\n  /**\n   * Get data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to get.\n   * @returns {string} The data value.\n   */\n\n  function getData(element, name) {\n    if (isObject(element[name])) {\n      return element[name];\n    }\n\n    if (element.dataset) {\n      return element.dataset[name];\n    }\n\n    return element.getAttribute(\"data-\".concat(toParamCase(name)));\n  }\n  /**\n   * Set data to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to set.\n   * @param {string} data - The data value.\n   */\n\n  function setData(element, name, data) {\n    if (isObject(data)) {\n      element[name] = data;\n    } else if (element.dataset) {\n      element.dataset[name] = data;\n    } else {\n      element.setAttribute(\"data-\".concat(toParamCase(name)), data);\n    }\n  }\n  /**\n   * Remove data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to remove.\n   */\n\n  function removeData(element, name) {\n    if (isObject(element[name])) {\n      try {\n        delete element[name];\n      } catch (error) {\n        element[name] = undefined;\n      }\n    } else if (element.dataset) {\n      // #128 Safari not allows to delete dataset property\n      try {\n        delete element.dataset[name];\n      } catch (error) {\n        element.dataset[name] = undefined;\n      }\n    } else {\n      element.removeAttribute(\"data-\".concat(toParamCase(name)));\n    }\n  }\n  var REGEXP_SPACES = /\\s\\s*/;\n\n  var onceSupported = function () {\n    var supported = false;\n\n    if (IS_BROWSER) {\n      var once = false;\n\n      var listener = function listener() {};\n\n      var options = Object.defineProperty({}, 'once', {\n        get: function get() {\n          supported = true;\n          return once;\n        },\n\n        /**\n         * This setter can fix a `TypeError` in strict mode\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n         * @param {boolean} value - The value to set\n         */\n        set: function set(value) {\n          once = value;\n        }\n      });\n      WINDOW.addEventListener('test', listener, options);\n      WINDOW.removeEventListener('test', listener, options);\n    }\n\n    return supported;\n  }();\n  /**\n   * Remove event listener from the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n\n  function removeListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (!onceSupported) {\n        var listeners = element.listeners;\n\n        if (listeners && listeners[event] && listeners[event][listener]) {\n          handler = listeners[event][listener];\n          delete listeners[event][listener];\n\n          if (Object.keys(listeners[event]).length === 0) {\n            delete listeners[event];\n          }\n\n          if (Object.keys(listeners).length === 0) {\n            delete element.listeners;\n          }\n        }\n      }\n\n      element.removeEventListener(event, handler, options);\n    });\n  }\n  /**\n   * Add event listener to the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n  function addListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var _handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (options.once && !onceSupported) {\n        var _element$listeners = element.listeners,\n            listeners = _element$listeners === void 0 ? {} : _element$listeners;\n\n        _handler = function handler() {\n          delete listeners[event][listener];\n          element.removeEventListener(event, _handler, options);\n\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          listener.apply(element, args);\n        };\n\n        if (!listeners[event]) {\n          listeners[event] = {};\n        }\n\n        if (listeners[event][listener]) {\n          element.removeEventListener(event, listeners[event][listener], options);\n        }\n\n        listeners[event][listener] = _handler;\n        element.listeners = listeners;\n      }\n\n      element.addEventListener(event, _handler, options);\n    });\n  }\n  /**\n   * Dispatch event on the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Object} data - The additional event data.\n   * @returns {boolean} Indicate if the event is default prevented or not.\n   */\n\n  function dispatchEvent(element, type, data) {\n    var event; // Event and CustomEvent on IE9-11 are global objects, not constructors\n\n    if (isFunction(Event) && isFunction(CustomEvent)) {\n      event = new CustomEvent(type, {\n        detail: data,\n        bubbles: true,\n        cancelable: true\n      });\n    } else {\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(type, true, true, data);\n    }\n\n    return element.dispatchEvent(event);\n  }\n  /**\n   * Get the offset base on the document.\n   * @param {Element} element - The target element.\n   * @returns {Object} The offset data.\n   */\n\n  function getOffset(element) {\n    var box = element.getBoundingClientRect();\n    return {\n      left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n      top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n    };\n  }\n  var location = WINDOW.location;\n  var REGEXP_ORIGINS = /^(\\w+:)\\/\\/([^:/?#]*):?(\\d*)/i;\n  /**\n   * Check if the given URL is a cross origin URL.\n   * @param {string} url - The target URL.\n   * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n   */\n\n  function isCrossOriginURL(url) {\n    var parts = url.match(REGEXP_ORIGINS);\n    return parts !== null && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n  }\n  /**\n   * Add timestamp to the given URL.\n   * @param {string} url - The target URL.\n   * @returns {string} The result URL.\n   */\n\n  function addTimestamp(url) {\n    var timestamp = \"timestamp=\".concat(new Date().getTime());\n    return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n  }\n  /**\n   * Get transforms base on the given object.\n   * @param {Object} obj - The target object.\n   * @returns {string} A string contains transform values.\n   */\n\n  function getTransforms(_ref) {\n    var rotate = _ref.rotate,\n        scaleX = _ref.scaleX,\n        scaleY = _ref.scaleY,\n        translateX = _ref.translateX,\n        translateY = _ref.translateY;\n    var values = [];\n\n    if (isNumber(translateX) && translateX !== 0) {\n      values.push(\"translateX(\".concat(translateX, \"px)\"));\n    }\n\n    if (isNumber(translateY) && translateY !== 0) {\n      values.push(\"translateY(\".concat(translateY, \"px)\"));\n    } // Rotate should come first before scale to match orientation transform\n\n\n    if (isNumber(rotate) && rotate !== 0) {\n      values.push(\"rotate(\".concat(rotate, \"deg)\"));\n    }\n\n    if (isNumber(scaleX) && scaleX !== 1) {\n      values.push(\"scaleX(\".concat(scaleX, \")\"));\n    }\n\n    if (isNumber(scaleY) && scaleY !== 1) {\n      values.push(\"scaleY(\".concat(scaleY, \")\"));\n    }\n\n    var transform = values.length ? values.join(' ') : 'none';\n    return {\n      WebkitTransform: transform,\n      msTransform: transform,\n      transform: transform\n    };\n  }\n  /**\n   * Get the max ratio of a group of pointers.\n   * @param {string} pointers - The target pointers.\n   * @returns {number} The result ratio.\n   */\n\n  function getMaxZoomRatio(pointers) {\n    var pointers2 = _objectSpread2({}, pointers);\n\n    var ratios = [];\n    forEach(pointers, function (pointer, pointerId) {\n      delete pointers2[pointerId];\n      forEach(pointers2, function (pointer2) {\n        var x1 = Math.abs(pointer.startX - pointer2.startX);\n        var y1 = Math.abs(pointer.startY - pointer2.startY);\n        var x2 = Math.abs(pointer.endX - pointer2.endX);\n        var y2 = Math.abs(pointer.endY - pointer2.endY);\n        var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n        var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n        var ratio = (z2 - z1) / z1;\n        ratios.push(ratio);\n      });\n    });\n    ratios.sort(function (a, b) {\n      return Math.abs(a) < Math.abs(b);\n    });\n    return ratios[0];\n  }\n  /**\n   * Get a pointer from an event object.\n   * @param {Object} event - The target event object.\n   * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n   * @returns {Object} The result pointer contains start and/or end point coordinates.\n   */\n\n  function getPointer(_ref2, endOnly) {\n    var pageX = _ref2.pageX,\n        pageY = _ref2.pageY;\n    var end = {\n      endX: pageX,\n      endY: pageY\n    };\n    return endOnly ? end : _objectSpread2({\n      startX: pageX,\n      startY: pageY\n    }, end);\n  }\n  /**\n   * Get the center point coordinate of a group of pointers.\n   * @param {Object} pointers - The target pointers.\n   * @returns {Object} The center point coordinate.\n   */\n\n  function getPointersCenter(pointers) {\n    var pageX = 0;\n    var pageY = 0;\n    var count = 0;\n    forEach(pointers, function (_ref3) {\n      var startX = _ref3.startX,\n          startY = _ref3.startY;\n      pageX += startX;\n      pageY += startY;\n      count += 1;\n    });\n    pageX /= count;\n    pageY /= count;\n    return {\n      pageX: pageX,\n      pageY: pageY\n    };\n  }\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n\n  function getAdjustedSizes(_ref4) // or 'cover'\n  {\n    var aspectRatio = _ref4.aspectRatio,\n        height = _ref4.height,\n        width = _ref4.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n\n      if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Get the new sizes of a rectangle after rotated.\n   * @param {Object} data - The original sizes.\n   * @returns {Object} The result sizes.\n   */\n\n  function getRotatedSizes(_ref5) {\n    var width = _ref5.width,\n        height = _ref5.height,\n        degree = _ref5.degree;\n    degree = Math.abs(degree) % 180;\n\n    if (degree === 90) {\n      return {\n        width: height,\n        height: width\n      };\n    }\n\n    var arc = degree % 90 * Math.PI / 180;\n    var sinArc = Math.sin(arc);\n    var cosArc = Math.cos(arc);\n    var newWidth = width * cosArc + height * sinArc;\n    var newHeight = width * sinArc + height * cosArc;\n    return degree > 90 ? {\n      width: newHeight,\n      height: newWidth\n    } : {\n      width: newWidth,\n      height: newHeight\n    };\n  }\n  /**\n   * Get a canvas which drew the given image.\n   * @param {HTMLImageElement} image - The image for drawing.\n   * @param {Object} imageData - The image data.\n   * @param {Object} canvasData - The canvas data.\n   * @param {Object} options - The options.\n   * @returns {HTMLCanvasElement} The result canvas.\n   */\n\n  function getSourceCanvas(image, _ref6, _ref7, _ref8) {\n    var imageAspectRatio = _ref6.aspectRatio,\n        imageNaturalWidth = _ref6.naturalWidth,\n        imageNaturalHeight = _ref6.naturalHeight,\n        _ref6$rotate = _ref6.rotate,\n        rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\n        _ref6$scaleX = _ref6.scaleX,\n        scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\n        _ref6$scaleY = _ref6.scaleY,\n        scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n    var aspectRatio = _ref7.aspectRatio,\n        naturalWidth = _ref7.naturalWidth,\n        naturalHeight = _ref7.naturalHeight;\n    var _ref8$fillColor = _ref8.fillColor,\n        fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\n        _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n        imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\n        _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n        imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\n        _ref8$maxWidth = _ref8.maxWidth,\n        maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\n        _ref8$maxHeight = _ref8.maxHeight,\n        maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\n        _ref8$minWidth = _ref8.minWidth,\n        minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\n        _ref8$minHeight = _ref8.minHeight,\n        minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n    var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight)); // Note: should always use image's natural sizes for drawing as\n    // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n\n    var destMaxSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var destMinSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n    var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n    var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = fillColor;\n    context.fillRect(0, 0, width, height);\n    context.save();\n    context.translate(width / 2, height / 2);\n    context.rotate(rotate * Math.PI / 180);\n    context.scale(scaleX, scaleY);\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n    context.imageSmoothingQuality = imageSmoothingQuality;\n    context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n    context.restore();\n    return canvas;\n  }\n  var fromCharCode = String.fromCharCode;\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    length += start;\n\n    for (var i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n\n    return str;\n  }\n  var REGEXP_DATA_URL_HEAD = /^data:.*,/;\n  /**\n   * Transform Data URL to array buffer.\n   * @param {string} dataURL - The Data URL to transform.\n   * @returns {ArrayBuffer} The result array buffer.\n   */\n\n  function dataURLToArrayBuffer(dataURL) {\n    var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n    var binary = atob(base64);\n    var arrayBuffer = new ArrayBuffer(binary.length);\n    var uint8 = new Uint8Array(arrayBuffer);\n    forEach(uint8, function (value, i) {\n      uint8[i] = binary.charCodeAt(i);\n    });\n    return arrayBuffer;\n  }\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = []; // Chunk Typed Array for better performance (#435)\n\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation; // Ignores range error when the image does not have correct Exif information\n\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n\n          offset += 1;\n        }\n      }\n\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n\n          if (littleEndian || endianness === 0x4D4D\n          /* bigEndian */\n          ) {\n              if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n                var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n                if (firstIFDOffset >= 0x00000008) {\n                  ifdStart = tiffOffset + firstIFDOffset;\n                }\n              }\n            }\n        }\n      }\n\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n\n        var _offset;\n\n        var i;\n\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112\n          /* Orientation */\n          ) {\n              // 8 is the offset of the current tag's value\n              _offset += 8; // Get the original orientation value\n\n              orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n              dataView.setUint16(_offset, 1, littleEndian);\n              break;\n            }\n        }\n      }\n    } catch (error) {\n      orientation = 1;\n    }\n\n    return orientation;\n  }\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n      // Rotate left 180°\n\n      case 3:\n        rotate = -180;\n        break;\n      // Flip vertical\n\n      case 4:\n        scaleY = -1;\n        break;\n      // Flip vertical and rotate right 90°\n\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n      // Rotate right 90°\n\n      case 6:\n        rotate = 90;\n        break;\n      // Flip horizontal and rotate right 90°\n\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n      // Rotate left 90°\n\n      case 8:\n        rotate = -90;\n        break;\n    }\n\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var render = {\n    render: function render() {\n      this.initContainer();\n      this.initCanvas();\n      this.initCropBox();\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    },\n    initContainer: function initContainer() {\n      var element = this.element,\n          options = this.options,\n          container = this.container,\n          cropper = this.cropper;\n      addClass(cropper, CLASS_HIDDEN);\n      removeClass(element, CLASS_HIDDEN);\n      var containerData = {\n        width: Math.max(container.offsetWidth, Number(options.minContainerWidth) || 200),\n        height: Math.max(container.offsetHeight, Number(options.minContainerHeight) || 100)\n      };\n      this.containerData = containerData;\n      setStyle(cropper, {\n        width: containerData.width,\n        height: containerData.height\n      });\n      addClass(element, CLASS_HIDDEN);\n      removeClass(cropper, CLASS_HIDDEN);\n    },\n    // Canvas (image wrapper)\n    initCanvas: function initCanvas() {\n      var containerData = this.containerData,\n          imageData = this.imageData;\n      var viewMode = this.options.viewMode;\n      var rotated = Math.abs(imageData.rotate) % 180 === 90;\n      var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n      var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n      var aspectRatio = naturalWidth / naturalHeight;\n      var canvasWidth = containerData.width;\n      var canvasHeight = containerData.height;\n\n      if (containerData.height * aspectRatio > containerData.width) {\n        if (viewMode === 3) {\n          canvasWidth = containerData.height * aspectRatio;\n        } else {\n          canvasHeight = containerData.width / aspectRatio;\n        }\n      } else if (viewMode === 3) {\n        canvasHeight = containerData.width / aspectRatio;\n      } else {\n        canvasWidth = containerData.height * aspectRatio;\n      }\n\n      var canvasData = {\n        aspectRatio: aspectRatio,\n        naturalWidth: naturalWidth,\n        naturalHeight: naturalHeight,\n        width: canvasWidth,\n        height: canvasHeight\n      };\n      canvasData.left = (containerData.width - canvasWidth) / 2;\n      canvasData.top = (containerData.height - canvasHeight) / 2;\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      this.canvasData = canvasData;\n      this.limited = viewMode === 1 || viewMode === 2;\n      this.limitCanvas(true, true);\n      this.initialImageData = assign({}, imageData);\n      this.initialCanvasData = assign({}, canvasData);\n    },\n    limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var viewMode = options.viewMode;\n      var aspectRatio = canvasData.aspectRatio;\n      var cropped = this.cropped && cropBoxData;\n\n      if (sizeLimited) {\n        var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n        var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n        if (viewMode > 1) {\n          minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n          minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n          if (viewMode === 3) {\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        } else if (viewMode > 0) {\n          if (minCanvasWidth) {\n            minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n          } else if (minCanvasHeight) {\n            minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n          } else if (cropped) {\n            minCanvasWidth = cropBoxData.width;\n            minCanvasHeight = cropBoxData.height;\n\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        }\n\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minCanvasWidth,\n          height: minCanvasHeight\n        });\n\n        minCanvasWidth = _getAdjustedSizes.width;\n        minCanvasHeight = _getAdjustedSizes.height;\n        canvasData.minWidth = minCanvasWidth;\n        canvasData.minHeight = minCanvasHeight;\n        canvasData.maxWidth = Infinity;\n        canvasData.maxHeight = Infinity;\n      }\n\n      if (positionLimited) {\n        if (viewMode > (cropped ? 0 : 1)) {\n          var newCanvasLeft = containerData.width - canvasData.width;\n          var newCanvasTop = containerData.height - canvasData.height;\n          canvasData.minLeft = Math.min(0, newCanvasLeft);\n          canvasData.minTop = Math.min(0, newCanvasTop);\n          canvasData.maxLeft = Math.max(0, newCanvasLeft);\n          canvasData.maxTop = Math.max(0, newCanvasTop);\n\n          if (cropped && this.limited) {\n            canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n            canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n            canvasData.maxLeft = cropBoxData.left;\n            canvasData.maxTop = cropBoxData.top;\n\n            if (viewMode === 2) {\n              if (canvasData.width >= containerData.width) {\n                canvasData.minLeft = Math.min(0, newCanvasLeft);\n                canvasData.maxLeft = Math.max(0, newCanvasLeft);\n              }\n\n              if (canvasData.height >= containerData.height) {\n                canvasData.minTop = Math.min(0, newCanvasTop);\n                canvasData.maxTop = Math.max(0, newCanvasTop);\n              }\n            }\n          }\n        } else {\n          canvasData.minLeft = -canvasData.width;\n          canvasData.minTop = -canvasData.height;\n          canvasData.maxLeft = containerData.width;\n          canvasData.maxTop = containerData.height;\n        }\n      }\n    },\n    renderCanvas: function renderCanvas(changed, transformed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n\n      if (transformed) {\n        var _getRotatedSizes = getRotatedSizes({\n          width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n          height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n          degree: imageData.rotate || 0\n        }),\n            naturalWidth = _getRotatedSizes.width,\n            naturalHeight = _getRotatedSizes.height;\n\n        var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n        var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n        canvasData.left -= (width - canvasData.width) / 2;\n        canvasData.top -= (height - canvasData.height) / 2;\n        canvasData.width = width;\n        canvasData.height = height;\n        canvasData.aspectRatio = naturalWidth / naturalHeight;\n        canvasData.naturalWidth = naturalWidth;\n        canvasData.naturalHeight = naturalHeight;\n        this.limitCanvas(true, false);\n      }\n\n      if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n        canvasData.left = canvasData.oldLeft;\n      }\n\n      if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n        canvasData.top = canvasData.oldTop;\n      }\n\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      this.limitCanvas(false, true);\n      canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n      canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      setStyle(this.canvas, assign({\n        width: canvasData.width,\n        height: canvasData.height\n      }, getTransforms({\n        translateX: canvasData.left,\n        translateY: canvasData.top\n      })));\n      this.renderImage(changed);\n\n      if (this.cropped && this.limited) {\n        this.limitCropBox(true, true);\n      }\n    },\n    renderImage: function renderImage(changed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n      var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n      var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n      assign(imageData, {\n        width: width,\n        height: height,\n        left: (canvasData.width - width) / 2,\n        top: (canvasData.height - height) / 2\n      });\n      setStyle(this.image, assign({\n        width: imageData.width,\n        height: imageData.height\n      }, getTransforms(assign({\n        translateX: imageData.left,\n        translateY: imageData.top\n      }, imageData))));\n\n      if (changed) {\n        this.output();\n      }\n    },\n    initCropBox: function initCropBox() {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n      var autoCropArea = Number(options.autoCropArea) || 0.8;\n      var cropBoxData = {\n        width: canvasData.width,\n        height: canvasData.height\n      };\n\n      if (aspectRatio) {\n        if (canvasData.height * aspectRatio > canvasData.width) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.cropBoxData = cropBoxData;\n      this.limitCropBox(true, true); // Initialize auto crop area\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight); // The width/height of auto crop area must large than \"minWidth/Height\"\n\n      cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n      cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n      cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n      cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n      this.initialCropBoxData = assign({}, cropBoxData);\n    },\n    limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData,\n          limited = this.limited;\n      var aspectRatio = options.aspectRatio;\n\n      if (sizeLimited) {\n        var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n        var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n        var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n        var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height; // The min/maxCropBoxWidth/Height must be less than container's width/height\n\n        minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n        minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n        if (aspectRatio) {\n          if (minCropBoxWidth && minCropBoxHeight) {\n            if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n              minCropBoxHeight = minCropBoxWidth / aspectRatio;\n            } else {\n              minCropBoxWidth = minCropBoxHeight * aspectRatio;\n            }\n          } else if (minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else if (minCropBoxHeight) {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n\n          if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n            maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n          } else {\n            maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n          }\n        } // The minWidth/Height must be less than maxWidth/Height\n\n\n        cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n        cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n        cropBoxData.maxWidth = maxCropBoxWidth;\n        cropBoxData.maxHeight = maxCropBoxHeight;\n      }\n\n      if (positionLimited) {\n        if (limited) {\n          cropBoxData.minLeft = Math.max(0, canvasData.left);\n          cropBoxData.minTop = Math.max(0, canvasData.top);\n          cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n          cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n        } else {\n          cropBoxData.minLeft = 0;\n          cropBoxData.minTop = 0;\n          cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n          cropBoxData.maxTop = containerData.height - cropBoxData.height;\n        }\n      }\n    },\n    renderCropBox: function renderCropBox() {\n      var options = this.options,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData;\n\n      if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n        cropBoxData.left = cropBoxData.oldLeft;\n      }\n\n      if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n        cropBoxData.top = cropBoxData.oldTop;\n      }\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n      this.limitCropBox(false, true);\n      cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n      cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n\n      if (options.movable && options.cropBoxMovable) {\n        // Turn to move the canvas when the crop box is equal to the container\n        setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n      }\n\n      setStyle(this.cropBox, assign({\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      }, getTransforms({\n        translateX: cropBoxData.left,\n        translateY: cropBoxData.top\n      })));\n\n      if (this.cropped && this.limited) {\n        this.limitCanvas(true, true);\n      }\n\n      if (!this.disabled) {\n        this.output();\n      }\n    },\n    output: function output() {\n      this.preview();\n      dispatchEvent(this.element, EVENT_CROP, this.getData());\n    }\n  };\n\n  var preview = {\n    initPreview: function initPreview() {\n      var element = this.element,\n          crossOrigin = this.crossOrigin;\n      var preview = this.options.preview;\n      var url = crossOrigin ? this.crossOriginUrl : this.url;\n      var alt = element.alt || 'The image to preview';\n      var image = document.createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = url;\n      image.alt = alt;\n      this.viewBox.appendChild(image);\n      this.viewBoxImage = image;\n\n      if (!preview) {\n        return;\n      }\n\n      var previews = preview;\n\n      if (typeof preview === 'string') {\n        previews = element.ownerDocument.querySelectorAll(preview);\n      } else if (preview.querySelector) {\n        previews = [preview];\n      }\n\n      this.previews = previews;\n      forEach(previews, function (el) {\n        var img = document.createElement('img'); // Save the original size for recover\n\n        setData(el, DATA_PREVIEW, {\n          width: el.offsetWidth,\n          height: el.offsetHeight,\n          html: el.innerHTML\n        });\n\n        if (crossOrigin) {\n          img.crossOrigin = crossOrigin;\n        }\n\n        img.src = url;\n        img.alt = alt;\n        /**\n         * Override img element styles\n         * Add `display:block` to avoid margin top issue\n         * Add `height:auto` to override `height` attribute on IE8\n         * (Occur only when margin-top <= -height)\n         */\n\n        img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n        el.innerHTML = '';\n        el.appendChild(img);\n      });\n    },\n    resetPreview: function resetPreview() {\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        setStyle(element, {\n          width: data.width,\n          height: data.height\n        });\n        element.innerHTML = data.html;\n        removeData(element, DATA_PREVIEW);\n      });\n    },\n    preview: function preview() {\n      var imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var cropBoxWidth = cropBoxData.width,\n          cropBoxHeight = cropBoxData.height;\n      var width = imageData.width,\n          height = imageData.height;\n      var left = cropBoxData.left - canvasData.left - imageData.left;\n      var top = cropBoxData.top - canvasData.top - imageData.top;\n\n      if (!this.cropped || this.disabled) {\n        return;\n      }\n\n      setStyle(this.viewBoxImage, assign({\n        width: width,\n        height: height\n      }, getTransforms(assign({\n        translateX: -left,\n        translateY: -top\n      }, imageData))));\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        var originalWidth = data.width;\n        var originalHeight = data.height;\n        var newWidth = originalWidth;\n        var newHeight = originalHeight;\n        var ratio = 1;\n\n        if (cropBoxWidth) {\n          ratio = originalWidth / cropBoxWidth;\n          newHeight = cropBoxHeight * ratio;\n        }\n\n        if (cropBoxHeight && newHeight > originalHeight) {\n          ratio = originalHeight / cropBoxHeight;\n          newWidth = cropBoxWidth * ratio;\n          newHeight = originalHeight;\n        }\n\n        setStyle(element, {\n          width: newWidth,\n          height: newHeight\n        });\n        setStyle(element.getElementsByTagName('img')[0], assign({\n          width: width * ratio,\n          height: height * ratio\n        }, getTransforms(assign({\n          translateX: -left * ratio,\n          translateY: -top * ratio\n        }, imageData))));\n      });\n    }\n  };\n\n  var events = {\n    bind: function bind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        addListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        addListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        addListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        addListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        addListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n\n      if (options.zoomable && options.zoomOnWheel) {\n        addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this), {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n      }\n\n      addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n      addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n\n      if (options.responsive) {\n        addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n      }\n    },\n    unbind: function unbind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        removeListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        removeListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        removeListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        removeListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n      if (options.zoomable && options.zoomOnWheel) {\n        removeListener(cropper, EVENT_WHEEL, this.onWheel, {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n      }\n\n      removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n      removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n      if (options.responsive) {\n        removeListener(window, EVENT_RESIZE, this.onResize);\n      }\n    }\n  };\n\n  var handlers = {\n    resize: function resize() {\n      if (this.disabled) {\n        return;\n      }\n\n      var options = this.options,\n          container = this.container,\n          containerData = this.containerData;\n      var ratio = container.offsetWidth / containerData.width; // Resize when width changed or height changed\n\n      if (ratio !== 1 || container.offsetHeight !== containerData.height) {\n        var canvasData;\n        var cropBoxData;\n\n        if (options.restore) {\n          canvasData = this.getCanvasData();\n          cropBoxData = this.getCropBoxData();\n        }\n\n        this.render();\n\n        if (options.restore) {\n          this.setCanvasData(forEach(canvasData, function (n, i) {\n            canvasData[i] = n * ratio;\n          }));\n          this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n            cropBoxData[i] = n * ratio;\n          }));\n        }\n      }\n    },\n    dblclick: function dblclick() {\n      if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n        return;\n      }\n\n      this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n    },\n    wheel: function wheel(event) {\n      var _this = this;\n\n      var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n      var delta = 1;\n\n      if (this.disabled) {\n        return;\n      }\n\n      event.preventDefault(); // Limit wheel speed to prevent zoom too fast (#21)\n\n      if (this.wheeling) {\n        return;\n      }\n\n      this.wheeling = true;\n      setTimeout(function () {\n        _this.wheeling = false;\n      }, 50);\n\n      if (event.deltaY) {\n        delta = event.deltaY > 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        delta = -event.wheelDelta / 120;\n      } else if (event.detail) {\n        delta = event.detail > 0 ? 1 : -1;\n      }\n\n      this.zoom(-delta * ratio, event);\n    },\n    cropStart: function cropStart(event) {\n      var buttons = event.buttons,\n          button = event.button;\n\n      if (this.disabled // Handle mouse event and pointer event and ignore touch event\n      || (event.type === 'mousedown' || event.type === 'pointerdown' && event.pointerType === 'mouse') && ( // No primary button (Usually the left button)\n      isNumber(buttons) && buttons !== 1 || isNumber(button) && button !== 0 // Open context menu\n      || event.ctrlKey)) {\n        return;\n      }\n\n      var options = this.options,\n          pointers = this.pointers;\n      var action;\n\n      if (event.changedTouches) {\n        // Handle touch event\n        forEach(event.changedTouches, function (touch) {\n          pointers[touch.identifier] = getPointer(touch);\n        });\n      } else {\n        // Handle mouse event and pointer event\n        pointers[event.pointerId || 0] = getPointer(event);\n      }\n\n      if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n        action = ACTION_ZOOM;\n      } else {\n        action = getData(event.target, DATA_ACTION);\n      }\n\n      if (!REGEXP_ACTIONS.test(action)) {\n        return;\n      }\n\n      if (dispatchEvent(this.element, EVENT_CROP_START, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      } // This line is required for preventing page zooming in iOS browsers\n\n\n      event.preventDefault();\n      this.action = action;\n      this.cropping = false;\n\n      if (action === ACTION_CROP) {\n        this.cropping = true;\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n    },\n    cropMove: function cropMove(event) {\n      var action = this.action;\n\n      if (this.disabled || !action) {\n        return;\n      }\n\n      var pointers = this.pointers;\n      event.preventDefault();\n\n      if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      }\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          // The first parameter should not be undefined (#432)\n          assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n        });\n      } else {\n        assign(pointers[event.pointerId || 0] || {}, getPointer(event, true));\n      }\n\n      this.change(event);\n    },\n    cropEnd: function cropEnd(event) {\n      if (this.disabled) {\n        return;\n      }\n\n      var action = this.action,\n          pointers = this.pointers;\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          delete pointers[touch.identifier];\n        });\n      } else {\n        delete pointers[event.pointerId || 0];\n      }\n\n      if (!action) {\n        return;\n      }\n\n      event.preventDefault();\n\n      if (!Object.keys(pointers).length) {\n        this.action = '';\n      }\n\n      if (this.cropping) {\n        this.cropping = false;\n        toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n      }\n\n      dispatchEvent(this.element, EVENT_CROP_END, {\n        originalEvent: event,\n        action: action\n      });\n    }\n  };\n\n  var change = {\n    change: function change(event) {\n      var options = this.options,\n          canvasData = this.canvasData,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData,\n          pointers = this.pointers;\n      var action = this.action;\n      var aspectRatio = options.aspectRatio;\n      var left = cropBoxData.left,\n          top = cropBoxData.top,\n          width = cropBoxData.width,\n          height = cropBoxData.height;\n      var right = left + width;\n      var bottom = top + height;\n      var minLeft = 0;\n      var minTop = 0;\n      var maxWidth = containerData.width;\n      var maxHeight = containerData.height;\n      var renderable = true;\n      var offset; // Locking aspect ratio in \"free mode\" by holding shift key\n\n      if (!aspectRatio && event.shiftKey) {\n        aspectRatio = width && height ? width / height : 1;\n      }\n\n      if (this.limited) {\n        minLeft = cropBoxData.minLeft;\n        minTop = cropBoxData.minTop;\n        maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n        maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n      }\n\n      var pointer = pointers[Object.keys(pointers)[0]];\n      var range = {\n        x: pointer.endX - pointer.startX,\n        y: pointer.endY - pointer.startY\n      };\n\n      var check = function check(side) {\n        switch (side) {\n          case ACTION_EAST:\n            if (right + range.x > maxWidth) {\n              range.x = maxWidth - right;\n            }\n\n            break;\n\n          case ACTION_WEST:\n            if (left + range.x < minLeft) {\n              range.x = minLeft - left;\n            }\n\n            break;\n\n          case ACTION_NORTH:\n            if (top + range.y < minTop) {\n              range.y = minTop - top;\n            }\n\n            break;\n\n          case ACTION_SOUTH:\n            if (bottom + range.y > maxHeight) {\n              range.y = maxHeight - bottom;\n            }\n\n            break;\n        }\n      };\n\n      switch (action) {\n        // Move crop box\n        case ACTION_ALL:\n          left += range.x;\n          top += range.y;\n          break;\n        // Resize crop box\n\n        case ACTION_EAST:\n          if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n\n          if (width < 0) {\n            action = ACTION_WEST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n\n          if (height < 0) {\n            action = ACTION_SOUTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n\n          if (width < 0) {\n            action = ACTION_EAST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_SOUTH);\n          height += range.y;\n\n          if (height < 0) {\n            action = ACTION_NORTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH_EAST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_NORTH_WEST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n            left += cropBoxData.width - width;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_WEST:\n          if (aspectRatio) {\n            if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_WEST);\n            width -= range.x;\n            left += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_EAST:\n          if (aspectRatio) {\n            if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_EAST);\n            width += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n        // Move canvas\n\n        case ACTION_MOVE:\n          this.move(range.x, range.y);\n          renderable = false;\n          break;\n        // Zoom canvas\n\n        case ACTION_ZOOM:\n          this.zoom(getMaxZoomRatio(pointers), event);\n          renderable = false;\n          break;\n        // Create crop box\n\n        case ACTION_CROP:\n          if (!range.x || !range.y) {\n            renderable = false;\n            break;\n          }\n\n          offset = getOffset(this.cropper);\n          left = pointer.startX - offset.left;\n          top = pointer.startY - offset.top;\n          width = cropBoxData.minWidth;\n          height = cropBoxData.minHeight;\n\n          if (range.x > 0) {\n            action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n          } else if (range.x < 0) {\n            left -= width;\n            action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n          }\n\n          if (range.y < 0) {\n            top -= height;\n          } // Show the crop box if is hidden\n\n\n          if (!this.cropped) {\n            removeClass(this.cropBox, CLASS_HIDDEN);\n            this.cropped = true;\n\n            if (this.limited) {\n              this.limitCropBox(true, true);\n            }\n          }\n\n          break;\n      }\n\n      if (renderable) {\n        cropBoxData.width = width;\n        cropBoxData.height = height;\n        cropBoxData.left = left;\n        cropBoxData.top = top;\n        this.action = action;\n        this.renderCropBox();\n      } // Override\n\n\n      forEach(pointers, function (p) {\n        p.startX = p.endX;\n        p.startY = p.endY;\n      });\n    }\n  };\n\n  var methods = {\n    // Show the crop box manually\n    crop: function crop() {\n      if (this.ready && !this.cropped && !this.disabled) {\n        this.cropped = true;\n        this.limitCropBox(true, true);\n\n        if (this.options.modal) {\n          addClass(this.dragBox, CLASS_MODAL);\n        }\n\n        removeClass(this.cropBox, CLASS_HIDDEN);\n        this.setCropBoxData(this.initialCropBoxData);\n      }\n\n      return this;\n    },\n    // Reset the image and crop box to their initial states\n    reset: function reset() {\n      if (this.ready && !this.disabled) {\n        this.imageData = assign({}, this.initialImageData);\n        this.canvasData = assign({}, this.initialCanvasData);\n        this.cropBoxData = assign({}, this.initialCropBoxData);\n        this.renderCanvas();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n\n      return this;\n    },\n    // Clear the crop box\n    clear: function clear() {\n      if (this.cropped && !this.disabled) {\n        assign(this.cropBoxData, {\n          left: 0,\n          top: 0,\n          width: 0,\n          height: 0\n        });\n        this.cropped = false;\n        this.renderCropBox();\n        this.limitCanvas(true, true); // Render canvas after crop box rendered\n\n        this.renderCanvas();\n        removeClass(this.dragBox, CLASS_MODAL);\n        addClass(this.cropBox, CLASS_HIDDEN);\n      }\n\n      return this;\n    },\n\n    /**\n     * Replace the image's src and rebuild the cropper\n     * @param {string} url - The new URL.\n     * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n     * @returns {Cropper} this\n     */\n    replace: function replace(url) {\n      var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!this.disabled && url) {\n        if (this.isImg) {\n          this.element.src = url;\n        }\n\n        if (hasSameSize) {\n          this.url = url;\n          this.image.src = url;\n\n          if (this.ready) {\n            this.viewBoxImage.src = url;\n            forEach(this.previews, function (element) {\n              element.getElementsByTagName('img')[0].src = url;\n            });\n          }\n        } else {\n          if (this.isImg) {\n            this.replaced = true;\n          }\n\n          this.options.data = null;\n          this.uncreate();\n          this.load(url);\n        }\n      }\n\n      return this;\n    },\n    // Enable (unfreeze) the cropper\n    enable: function enable() {\n      if (this.ready && this.disabled) {\n        this.disabled = false;\n        removeClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n    // Disable (freeze) the cropper\n    disable: function disable() {\n      if (this.ready && !this.disabled) {\n        this.disabled = true;\n        addClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n\n    /**\n     * Destroy the cropper and remove the instance from the image\n     * @returns {Cropper} this\n     */\n    destroy: function destroy() {\n      var element = this.element;\n\n      if (!element[NAMESPACE]) {\n        return this;\n      }\n\n      element[NAMESPACE] = undefined;\n\n      if (this.isImg && this.replaced) {\n        element.src = this.originalUrl;\n      }\n\n      this.uncreate();\n      return this;\n    },\n\n    /**\n     * Move the canvas with relative offsets\n     * @param {number} offsetX - The relative offset distance on the x-axis.\n     * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n     * @returns {Cropper} this\n     */\n    move: function move(offsetX) {\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n      var _this$canvasData = this.canvasData,\n          left = _this$canvasData.left,\n          top = _this$canvasData.top;\n      return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n    },\n\n    /**\n     * Move the canvas to an absolute point\n     * @param {number} x - The x-axis coordinate.\n     * @param {number} [y=x] - The y-axis coordinate.\n     * @returns {Cropper} this\n     */\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n      var canvasData = this.canvasData;\n      var changed = false;\n      x = Number(x);\n      y = Number(y);\n\n      if (this.ready && !this.disabled && this.options.movable) {\n        if (isNumber(x)) {\n          canvasData.left = x;\n          changed = true;\n        }\n\n        if (isNumber(y)) {\n          canvasData.top = y;\n          changed = true;\n        }\n\n        if (changed) {\n          this.renderCanvas(true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Zoom the canvas with a relative ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoom: function zoom(ratio, _originalEvent) {\n      var canvasData = this.canvasData;\n      ratio = Number(ratio);\n\n      if (ratio < 0) {\n        ratio = 1 / (1 - ratio);\n      } else {\n        ratio = 1 + ratio;\n      }\n\n      return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n    },\n\n    /**\n     * Zoom the canvas to an absolute ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Object} pivot - The zoom pivot point coordinate.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var width = canvasData.width,\n          height = canvasData.height,\n          naturalWidth = canvasData.naturalWidth,\n          naturalHeight = canvasData.naturalHeight;\n      ratio = Number(ratio);\n\n      if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n        var newWidth = naturalWidth * ratio;\n        var newHeight = naturalHeight * ratio;\n\n        if (dispatchEvent(this.element, EVENT_ZOOM, {\n          ratio: ratio,\n          oldRatio: width / naturalWidth,\n          originalEvent: _originalEvent\n        }) === false) {\n          return this;\n        }\n\n        if (_originalEvent) {\n          var pointers = this.pointers;\n          var offset = getOffset(this.cropper);\n          var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n            pageX: _originalEvent.pageX,\n            pageY: _originalEvent.pageY\n          }; // Zoom from the triggering point of the event\n\n          canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n        } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n          canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n        } else {\n          // Zoom from the center of the canvas\n          canvasData.left -= (newWidth - width) / 2;\n          canvasData.top -= (newHeight - height) / 2;\n        }\n\n        canvasData.width = newWidth;\n        canvasData.height = newHeight;\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Rotate the canvas with a relative degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotate: function rotate(degree) {\n      return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n    },\n\n    /**\n     * Rotate the canvas to an absolute degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotateTo: function rotateTo(degree) {\n      degree = Number(degree);\n\n      if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n        this.imageData.rotate = degree % 360;\n        this.renderCanvas(true, true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Scale the image on the x-axis.\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @returns {Cropper} this\n     */\n    scaleX: function scaleX(_scaleX) {\n      var scaleY = this.imageData.scaleY;\n      return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n    },\n\n    /**\n     * Scale the image on the y-axis.\n     * @param {number} scaleY - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scaleY: function scaleY(_scaleY) {\n      var scaleX = this.imageData.scaleX;\n      return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n    },\n\n    /**\n     * Scale the image\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n      var imageData = this.imageData;\n      var transformed = false;\n      scaleX = Number(scaleX);\n      scaleY = Number(scaleY);\n\n      if (this.ready && !this.disabled && this.options.scalable) {\n        if (isNumber(scaleX)) {\n          imageData.scaleX = scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(scaleY)) {\n          imageData.scaleY = scaleY;\n          transformed = true;\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the cropped area position and size data (base on the original image)\n     * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n     * @returns {Object} The result cropped data.\n     */\n    getData: function getData() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          x: cropBoxData.left - canvasData.left,\n          y: cropBoxData.top - canvasData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n        var ratio = imageData.width / imageData.naturalWidth;\n        forEach(data, function (n, i) {\n          data[i] = n / ratio;\n        });\n\n        if (rounded) {\n          // In case rounding off leads to extra 1px in right or bottom border\n          // we should round the top-left corner and the dimension (#343).\n          var bottom = Math.round(data.y + data.height);\n          var right = Math.round(data.x + data.width);\n          data.x = Math.round(data.x);\n          data.y = Math.round(data.y);\n          data.width = right - data.x;\n          data.height = bottom - data.y;\n        }\n      } else {\n        data = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n\n      if (options.rotatable) {\n        data.rotate = imageData.rotate || 0;\n      }\n\n      if (options.scalable) {\n        data.scaleX = imageData.scaleX || 1;\n        data.scaleY = imageData.scaleY || 1;\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the cropped area position and size with new data\n     * @param {Object} data - The new data.\n     * @returns {Cropper} this\n     */\n    setData: function setData(data) {\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData;\n      var cropBoxData = {};\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        var transformed = false;\n\n        if (options.rotatable) {\n          if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n            imageData.rotate = data.rotate;\n            transformed = true;\n          }\n        }\n\n        if (options.scalable) {\n          if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n            imageData.scaleX = data.scaleX;\n            transformed = true;\n          }\n\n          if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n            imageData.scaleY = data.scaleY;\n            transformed = true;\n          }\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n\n        var ratio = imageData.width / imageData.naturalWidth;\n\n        if (isNumber(data.x)) {\n          cropBoxData.left = data.x * ratio + canvasData.left;\n        }\n\n        if (isNumber(data.y)) {\n          cropBoxData.top = data.y * ratio + canvasData.top;\n        }\n\n        if (isNumber(data.width)) {\n          cropBoxData.width = data.width * ratio;\n        }\n\n        if (isNumber(data.height)) {\n          cropBoxData.height = data.height * ratio;\n        }\n\n        this.setCropBoxData(cropBoxData);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the container size data.\n     * @returns {Object} The result container data.\n     */\n    getContainerData: function getContainerData() {\n      return this.ready ? assign({}, this.containerData) : {};\n    },\n\n    /**\n     * Get the image position and size data.\n     * @returns {Object} The result image data.\n     */\n    getImageData: function getImageData() {\n      return this.sized ? assign({}, this.imageData) : {};\n    },\n\n    /**\n     * Get the canvas position and size data.\n     * @returns {Object} The result canvas data.\n     */\n    getCanvasData: function getCanvasData() {\n      var canvasData = this.canvasData;\n      var data = {};\n\n      if (this.ready) {\n        forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n          data[n] = canvasData[n];\n        });\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the canvas position and size with new data.\n     * @param {Object} data - The new canvas data.\n     * @returns {Cropper} this\n     */\n    setCanvasData: function setCanvasData(data) {\n      var canvasData = this.canvasData;\n      var aspectRatio = canvasData.aspectRatio;\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          canvasData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          canvasData.top = data.top;\n        }\n\n        if (isNumber(data.width)) {\n          canvasData.width = data.width;\n          canvasData.height = data.width / aspectRatio;\n        } else if (isNumber(data.height)) {\n          canvasData.height = data.height;\n          canvasData.width = data.height * aspectRatio;\n        }\n\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the crop box position and size data.\n     * @returns {Object} The result crop box data.\n     */\n    getCropBoxData: function getCropBoxData() {\n      var cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          left: cropBoxData.left,\n          top: cropBoxData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n      }\n\n      return data || {};\n    },\n\n    /**\n     * Set the crop box position and size with new data.\n     * @param {Object} data - The new crop box data.\n     * @returns {Cropper} this\n     */\n    setCropBoxData: function setCropBoxData(data) {\n      var cropBoxData = this.cropBoxData;\n      var aspectRatio = this.options.aspectRatio;\n      var widthChanged;\n      var heightChanged;\n\n      if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          cropBoxData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          cropBoxData.top = data.top;\n        }\n\n        if (isNumber(data.width) && data.width !== cropBoxData.width) {\n          widthChanged = true;\n          cropBoxData.width = data.width;\n        }\n\n        if (isNumber(data.height) && data.height !== cropBoxData.height) {\n          heightChanged = true;\n          cropBoxData.height = data.height;\n        }\n\n        if (aspectRatio) {\n          if (widthChanged) {\n            cropBoxData.height = cropBoxData.width / aspectRatio;\n          } else if (heightChanged) {\n            cropBoxData.width = cropBoxData.height * aspectRatio;\n          }\n        }\n\n        this.renderCropBox();\n      }\n\n      return this;\n    },\n\n    /**\n     * Get a canvas drawn the cropped image.\n     * @param {Object} [options={}] - The config options.\n     * @returns {HTMLCanvasElement} - The result canvas.\n     */\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!this.ready || !window.HTMLCanvasElement) {\n        return null;\n      }\n\n      var canvasData = this.canvasData;\n      var source = getSourceCanvas(this.image, this.imageData, canvasData, options); // Returns the source canvas if it is not cropped.\n\n      if (!this.cropped) {\n        return source;\n      }\n\n      var _this$getData = this.getData(),\n          initialX = _this$getData.x,\n          initialY = _this$getData.y,\n          initialWidth = _this$getData.width,\n          initialHeight = _this$getData.height;\n\n      var ratio = source.width / Math.floor(canvasData.naturalWidth);\n\n      if (ratio !== 1) {\n        initialX *= ratio;\n        initialY *= ratio;\n        initialWidth *= ratio;\n        initialHeight *= ratio;\n      }\n\n      var aspectRatio = initialWidth / initialHeight;\n      var maxSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.maxWidth || Infinity,\n        height: options.maxHeight || Infinity\n      });\n      var minSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.minWidth || 0,\n        height: options.minHeight || 0\n      }, 'cover');\n\n      var _getAdjustedSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.width || (ratio !== 1 ? source.width : initialWidth),\n        height: options.height || (ratio !== 1 ? source.height : initialHeight)\n      }),\n          width = _getAdjustedSizes.width,\n          height = _getAdjustedSizes.height;\n\n      width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n      height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      canvas.width = normalizeDecimalNumber(width);\n      canvas.height = normalizeDecimalNumber(height);\n      context.fillStyle = options.fillColor || 'transparent';\n      context.fillRect(0, 0, width, height);\n      var _options$imageSmoothi = options.imageSmoothingEnabled,\n          imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\n          imageSmoothingQuality = options.imageSmoothingQuality;\n      context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n      if (imageSmoothingQuality) {\n        context.imageSmoothingQuality = imageSmoothingQuality;\n      } // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n\n\n      var sourceWidth = source.width;\n      var sourceHeight = source.height; // Source canvas parameters\n\n      var srcX = initialX;\n      var srcY = initialY;\n      var srcWidth;\n      var srcHeight; // Destination canvas parameters\n\n      var dstX;\n      var dstY;\n      var dstWidth;\n      var dstHeight;\n\n      if (srcX <= -initialWidth || srcX > sourceWidth) {\n        srcX = 0;\n        srcWidth = 0;\n        dstX = 0;\n        dstWidth = 0;\n      } else if (srcX <= 0) {\n        dstX = -srcX;\n        srcX = 0;\n        srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n        dstWidth = srcWidth;\n      } else if (srcX <= sourceWidth) {\n        dstX = 0;\n        srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n        dstWidth = srcWidth;\n      }\n\n      if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n        srcY = 0;\n        srcHeight = 0;\n        dstY = 0;\n        dstHeight = 0;\n      } else if (srcY <= 0) {\n        dstY = -srcY;\n        srcY = 0;\n        srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n        dstHeight = srcHeight;\n      } else if (srcY <= sourceHeight) {\n        dstY = 0;\n        srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n        dstHeight = srcHeight;\n      }\n\n      var params = [srcX, srcY, srcWidth, srcHeight]; // Avoid \"IndexSizeError\"\n\n      if (dstWidth > 0 && dstHeight > 0) {\n        var scale = width / initialWidth;\n        params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n      } // All the numerical parameters should be integer for `drawImage`\n      // https://github.com/fengyuanchen/cropper/issues/476\n\n\n      context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\n        return Math.floor(normalizeDecimalNumber(param));\n      }))));\n      return canvas;\n    },\n\n    /**\n     * Change the aspect ratio of the crop box.\n     * @param {number} aspectRatio - The new aspect ratio.\n     * @returns {Cropper} this\n     */\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      var options = this.options;\n\n      if (!this.disabled && !isUndefined(aspectRatio)) {\n        // 0 -> NaN\n        options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n        if (this.ready) {\n          this.initCropBox();\n\n          if (this.cropped) {\n            this.renderCropBox();\n          }\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Change the drag mode.\n     * @param {string} mode - The new drag mode.\n     * @returns {Cropper} this\n     */\n    setDragMode: function setDragMode(mode) {\n      var options = this.options,\n          dragBox = this.dragBox,\n          face = this.face;\n\n      if (this.ready && !this.disabled) {\n        var croppable = mode === DRAG_MODE_CROP;\n        var movable = options.movable && mode === DRAG_MODE_MOVE;\n        mode = croppable || movable ? mode : DRAG_MODE_NONE;\n        options.dragMode = mode;\n        setData(dragBox, DATA_ACTION, mode);\n        toggleClass(dragBox, CLASS_CROP, croppable);\n        toggleClass(dragBox, CLASS_MOVE, movable);\n\n        if (!options.cropBoxMovable) {\n          // Sync drag mode to crop box when it is not movable\n          setData(face, DATA_ACTION, mode);\n          toggleClass(face, CLASS_CROP, croppable);\n          toggleClass(face, CLASS_MOVE, movable);\n        }\n      }\n\n      return this;\n    }\n  };\n\n  var AnotherCropper = WINDOW.Cropper;\n\n  var Cropper = /*#__PURE__*/function () {\n    /**\n     * Create a new Cropper.\n     * @param {Element} element - The target element for cropping.\n     * @param {Object} [options={}] - The configuration options.\n     */\n    function Cropper(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, Cropper);\n\n      if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n        throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n      }\n\n      this.element = element;\n      this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n      this.cropped = false;\n      this.disabled = false;\n      this.pointers = {};\n      this.ready = false;\n      this.reloading = false;\n      this.replaced = false;\n      this.sized = false;\n      this.sizing = false;\n      this.init();\n    }\n\n    _createClass(Cropper, [{\n      key: \"init\",\n      value: function init() {\n        var element = this.element;\n        var tagName = element.tagName.toLowerCase();\n        var url;\n\n        if (element[NAMESPACE]) {\n          return;\n        }\n\n        element[NAMESPACE] = this;\n\n        if (tagName === 'img') {\n          this.isImg = true; // e.g.: \"img/picture.jpg\"\n\n          url = element.getAttribute('src') || '';\n          this.originalUrl = url; // Stop when it's a blank image\n\n          if (!url) {\n            return;\n          } // e.g.: \"https://example.com/img/picture.jpg\"\n\n\n          url = element.src;\n        } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n          url = element.toDataURL();\n        }\n\n        this.load(url);\n      }\n    }, {\n      key: \"load\",\n      value: function load(url) {\n        var _this = this;\n\n        if (!url) {\n          return;\n        }\n\n        this.url = url;\n        this.imageData = {};\n        var element = this.element,\n            options = this.options;\n\n        if (!options.rotatable && !options.scalable) {\n          options.checkOrientation = false;\n        } // Only IE10+ supports Typed Arrays\n\n\n        if (!options.checkOrientation || !window.ArrayBuffer) {\n          this.clone();\n          return;\n        } // Detect the mime type of the image directly if it is a Data URL\n\n\n        if (REGEXP_DATA_URL.test(url)) {\n          // Read ArrayBuffer from Data URL of JPEG images directly for better performance\n          if (REGEXP_DATA_URL_JPEG.test(url)) {\n            this.read(dataURLToArrayBuffer(url));\n          } else {\n            // Only a JPEG image may contains Exif Orientation information,\n            // the rest types of Data URLs are not necessary to check orientation at all.\n            this.clone();\n          }\n\n          return;\n        } // 1. Detect the mime type of the image by a XMLHttpRequest.\n        // 2. Load the image as ArrayBuffer for reading orientation if its a JPEG image.\n\n\n        var xhr = new XMLHttpRequest();\n        var clone = this.clone.bind(this);\n        this.reloading = true;\n        this.xhr = xhr; // 1. Cross origin requests are only supported for protocol schemes:\n        // http, https, data, chrome, chrome-extension.\n        // 2. Access to XMLHttpRequest from a Data URL will be blocked by CORS policy\n        // in some browsers as IE11 and Safari.\n\n        xhr.onabort = clone;\n        xhr.onerror = clone;\n        xhr.ontimeout = clone;\n\n        xhr.onprogress = function () {\n          // Abort the request directly if it not a JPEG image for better performance\n          if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n            xhr.abort();\n          }\n        };\n\n        xhr.onload = function () {\n          _this.read(xhr.response);\n        };\n\n        xhr.onloadend = function () {\n          _this.reloading = false;\n          _this.xhr = null;\n        }; // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n\n\n        if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n          url = addTimestamp(url);\n        }\n\n        xhr.open('GET', url);\n        xhr.responseType = 'arraybuffer';\n        xhr.withCredentials = element.crossOrigin === 'use-credentials';\n        xhr.send();\n      }\n    }, {\n      key: \"read\",\n      value: function read(arrayBuffer) {\n        var options = this.options,\n            imageData = this.imageData; // Reset the orientation value to its default value 1\n        // as some iOS browsers will render image with its orientation\n\n        var orientation = resetAndGetOrientation(arrayBuffer);\n        var rotate = 0;\n        var scaleX = 1;\n        var scaleY = 1;\n\n        if (orientation > 1) {\n          // Generate a new URL which has the default orientation value\n          this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n\n          var _parseOrientation = parseOrientation(orientation);\n\n          rotate = _parseOrientation.rotate;\n          scaleX = _parseOrientation.scaleX;\n          scaleY = _parseOrientation.scaleY;\n        }\n\n        if (options.rotatable) {\n          imageData.rotate = rotate;\n        }\n\n        if (options.scalable) {\n          imageData.scaleX = scaleX;\n          imageData.scaleY = scaleY;\n        }\n\n        this.clone();\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        var element = this.element,\n            url = this.url;\n        var crossOrigin = element.crossOrigin;\n        var crossOriginUrl = url;\n\n        if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n          if (!crossOrigin) {\n            crossOrigin = 'anonymous';\n          } // Bust cache when there is not a \"crossOrigin\" property (#519)\n\n\n          crossOriginUrl = addTimestamp(url);\n        }\n\n        this.crossOrigin = crossOrigin;\n        this.crossOriginUrl = crossOriginUrl;\n        var image = document.createElement('img');\n\n        if (crossOrigin) {\n          image.crossOrigin = crossOrigin;\n        }\n\n        image.src = crossOriginUrl || url;\n        image.alt = element.alt || 'The image to crop';\n        this.image = image;\n        image.onload = this.start.bind(this);\n        image.onerror = this.stop.bind(this);\n        addClass(image, CLASS_HIDE);\n        element.parentNode.insertBefore(image, element.nextSibling);\n      }\n    }, {\n      key: \"start\",\n      value: function start() {\n        var _this2 = this;\n\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        this.sizing = true; // Match all browsers that use WebKit as the layout engine in iOS devices,\n        // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n\n        var isIOSWebKit = WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent);\n\n        var done = function done(naturalWidth, naturalHeight) {\n          assign(_this2.imageData, {\n            naturalWidth: naturalWidth,\n            naturalHeight: naturalHeight,\n            aspectRatio: naturalWidth / naturalHeight\n          });\n          _this2.sizing = false;\n          _this2.sized = true;\n\n          _this2.build();\n        }; // Most modern browsers (excepts iOS WebKit)\n\n\n        if (image.naturalWidth && !isIOSWebKit) {\n          done(image.naturalWidth, image.naturalHeight);\n          return;\n        }\n\n        var sizingImage = document.createElement('img');\n        var body = document.body || document.documentElement;\n        this.sizingImage = sizingImage;\n\n        sizingImage.onload = function () {\n          done(sizingImage.width, sizingImage.height);\n\n          if (!isIOSWebKit) {\n            body.removeChild(sizingImage);\n          }\n        };\n\n        sizingImage.src = image.src; // iOS WebKit will convert the image automatically\n        // with its orientation once append it into DOM (#279)\n\n        if (!isIOSWebKit) {\n          sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n          body.appendChild(sizingImage);\n        }\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        image.parentNode.removeChild(image);\n        this.image = null;\n      }\n    }, {\n      key: \"build\",\n      value: function build() {\n        if (!this.sized || this.ready) {\n          return;\n        }\n\n        var element = this.element,\n            options = this.options,\n            image = this.image; // Create cropper elements\n\n        var container = element.parentNode;\n        var template = document.createElement('div');\n        template.innerHTML = TEMPLATE;\n        var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n        var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n        var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n        var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n        var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n        this.container = container;\n        this.cropper = cropper;\n        this.canvas = canvas;\n        this.dragBox = dragBox;\n        this.cropBox = cropBox;\n        this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n        this.face = face;\n        canvas.appendChild(image); // Hide the original image\n\n        addClass(element, CLASS_HIDDEN); // Inserts the cropper after to the current image\n\n        container.insertBefore(cropper, element.nextSibling); // Show the image if is hidden\n\n        if (!this.isImg) {\n          removeClass(image, CLASS_HIDE);\n        }\n\n        this.initPreview();\n        this.bind();\n        options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n        options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n        options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n        addClass(cropBox, CLASS_HIDDEN);\n\n        if (!options.guides) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n        }\n\n        if (!options.center) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n        }\n\n        if (options.background) {\n          addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n        }\n\n        if (!options.highlight) {\n          addClass(face, CLASS_INVISIBLE);\n        }\n\n        if (options.cropBoxMovable) {\n          addClass(face, CLASS_MOVE);\n          setData(face, DATA_ACTION, ACTION_ALL);\n        }\n\n        if (!options.cropBoxResizable) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n        }\n\n        this.render();\n        this.ready = true;\n        this.setDragMode(options.dragMode);\n\n        if (options.autoCrop) {\n          this.crop();\n        }\n\n        this.setData(options.data);\n\n        if (isFunction(options.ready)) {\n          addListener(element, EVENT_READY, options.ready, {\n            once: true\n          });\n        }\n\n        dispatchEvent(element, EVENT_READY);\n      }\n    }, {\n      key: \"unbuild\",\n      value: function unbuild() {\n        if (!this.ready) {\n          return;\n        }\n\n        this.ready = false;\n        this.unbind();\n        this.resetPreview();\n        this.cropper.parentNode.removeChild(this.cropper);\n        removeClass(this.element, CLASS_HIDDEN);\n      }\n    }, {\n      key: \"uncreate\",\n      value: function uncreate() {\n        if (this.ready) {\n          this.unbuild();\n          this.ready = false;\n          this.cropped = false;\n        } else if (this.sizing) {\n          this.sizingImage.onload = null;\n          this.sizing = false;\n          this.sized = false;\n        } else if (this.reloading) {\n          this.xhr.onabort = null;\n          this.xhr.abort();\n        } else if (this.image) {\n          this.stop();\n        }\n      }\n      /**\n       * Get the no conflict cropper class.\n       * @returns {Cropper} The cropper class.\n       */\n\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Cropper = AnotherCropper;\n        return Cropper;\n      }\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        assign(DEFAULTS, isPlainObject(options) && options);\n      }\n    }]);\n\n    return Cropper;\n  }();\n\n  assign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\n  return Cropper;\n\n})));\n"]},"metadata":{},"sourceType":"script"}
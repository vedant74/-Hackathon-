{"ast":null,"code":"var _jsxFileName = \"/Users/bhavyameghnani/Desktop/react-saas-template/src/logged_out/components/home/FeatureCard.js\";\nimport React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Typography, withStyles } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  iconWrapper: {\n    borderRadius: theme.shape.borderRadius,\n    textAlign: \"center\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(1) * 1.5\n  }\n});\n\nfunction shadeColor(hex, percent) {\n  const f = parseInt(hex.slice(1), 16);\n  const t = percent < 0 ? 0 : 255;\n  const p = percent < 0 ? percent * -1 : percent;\n  const R = f >> 16;\n  const G = f >> 8 & 0x00ff;\n  const B = f & 0x0000ff;\n  return `#${(0x1000000 + (Math.round((t - R) * p) + R) * 0x10000 + (Math.round((t - G) * p) + G) * 0x100 + (Math.round((t - B) * p) + B)).toString(16).slice(1)}`;\n}\n\nfunction FeatureCard(props) {\n  const {\n    classes,\n    Icon,\n    color,\n    headline,\n    text\n  } = props;\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    // We will set color and fill here, due to some prios complications\n    className: classes.iconWrapper,\n    style: {\n      color: color,\n      backgroundColor: shadeColor(color, 0.5),\n      fill: color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, Icon), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    paragraph: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, headline), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, text));\n}\n\nFeatureCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n  Icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  headline: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(FeatureCard);","map":{"version":3,"sources":["/Users/bhavyameghnani/Desktop/react-saas-template/src/logged_out/components/home/FeatureCard.js"],"names":["React","Fragment","PropTypes","Typography","withStyles","styles","theme","iconWrapper","borderRadius","shape","textAlign","display","alignItems","justifyContent","marginBottom","spacing","padding","shadeColor","hex","percent","f","parseInt","slice","t","p","R","G","B","Math","round","toString","FeatureCard","props","classes","Icon","color","headline","text","backgroundColor","fill","propTypes","object","isRequired","element","string","withTheme"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Typography, withStyles } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  iconWrapper: {\n    borderRadius: theme.shape.borderRadius,\n    textAlign: \"center\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(1) * 1.5\n  }\n});\n\nfunction shadeColor(hex, percent) {\n  const f = parseInt(hex.slice(1), 16);\n\n  const t = percent < 0 ? 0 : 255;\n\n  const p = percent < 0 ? percent * -1 : percent;\n\n  const R = f >> 16;\n\n  const G = (f >> 8) & 0x00ff;\n\n  const B = f & 0x0000ff;\n  return `#${(\n    0x1000000 +\n    (Math.round((t - R) * p) + R) * 0x10000 +\n    (Math.round((t - G) * p) + G) * 0x100 +\n    (Math.round((t - B) * p) + B)\n  )\n    .toString(16)\n    .slice(1)}`;\n}\n\nfunction FeatureCard(props) {\n  const { classes, Icon, color, headline, text } = props;\n  return (\n    <Fragment>\n      <div\n        // We will set color and fill here, due to some prios complications\n        className={classes.iconWrapper}\n        style={{\n          color: color,\n          backgroundColor: shadeColor(color, 0.5),\n          fill: color\n        }}\n      >\n        {Icon}\n      </div>\n      <Typography variant=\"h5\" paragraph>\n        {headline}\n      </Typography>\n      <Typography variant=\"body1\" color=\"textSecondary\">\n        {text}\n      </Typography>\n    </Fragment>\n  );\n}\n\nFeatureCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n  Icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  headline: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(FeatureCard);\n"]},"metadata":{},"sourceType":"module"}
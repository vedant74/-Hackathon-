{"ast":null,"code":"var _jsxFileName = \"/Users/bhavyameghnani/Desktop/react-saas-template/src/logged_out/components/navigation/NavBar.js\";\nimport React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { AppBar, Toolbar, Typography, Button, Hidden, IconButton, withStyles } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport HowToRegIcon from \"@material-ui/icons/HowToReg\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport BookIcon from \"@material-ui/icons/Book\";\nimport NavigationDrawer from \"../../../shared/components/NavigationDrawer\";\n\nconst styles = theme => ({\n  appBar: {\n    boxShadow: theme.shadows[6],\n    backgroundColor: theme.palette.common.white\n  },\n  toolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  menuButtonText: {\n    fontSize: theme.typography.body1.fontSize,\n    fontWeight: theme.typography.h6.fontWeight\n  },\n  brandText: {\n    fontFamily: \"'Baloo Bhaijaan', cursive\",\n    fontWeight: 400\n  },\n  noDecoration: {\n    textDecoration: \"none !important\"\n  }\n});\n\nfunction NavBar(props) {\n  const {\n    classes,\n    openRegisterDialog,\n    openLoginDialog,\n    handleMobileDrawerOpen,\n    handleMobileDrawerClose,\n    mobileDrawerOpen,\n    selectedTab\n  } = props;\n  const menuItems = [{\n    link: \"/\",\n    name: \"Home\",\n    icon: /*#__PURE__*/React.createElement(HomeIcon, {\n      className: \"text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    })\n  }, {\n    link: \"/blog\",\n    name: \"Blog\",\n    icon: /*#__PURE__*/React.createElement(BookIcon, {\n      className: \"text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    })\n  }, {\n    name: \"Register\",\n    onClick: openRegisterDialog,\n    icon: /*#__PURE__*/React.createElement(HowToRegIcon, {\n      className: \"text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    })\n  }, {\n    name: \"Login\",\n    onClick: openLoginDialog,\n    icon: /*#__PURE__*/React.createElement(LockOpenIcon, {\n      className: \"text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    })\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"fixed\",\n    className: classes.appBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    className: classes.brandText,\n    display: \"inline\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Wa\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    className: classes.brandText,\n    display: \"inline\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"Ver\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    className: classes.menuButton,\n    onClick: handleMobileDrawerOpen,\n    \"aria-label\": \"Open Navigation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Hidden, {\n    smDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, menuItems.map(element => {\n    if (element.link) {\n      return /*#__PURE__*/React.createElement(Link, {\n        key: element.name,\n        to: element.link,\n        className: classes.noDecoration,\n        onClick: handleMobileDrawerClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"secondary\",\n        size: \"large\",\n        classes: {\n          text: classes.menuButtonText\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 23\n        }\n      }, element.name));\n    }\n\n    return /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      size: \"large\",\n      onClick: element.onClick,\n      classes: {\n        text: classes.menuButtonText\n      },\n      key: element.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 19\n      }\n    }, element.name);\n  }))))), /*#__PURE__*/React.createElement(NavigationDrawer, {\n    menuItems: menuItems,\n    anchor: \"right\",\n    open: mobileDrawerOpen,\n    selectedItem: selectedTab,\n    onClose: handleMobileDrawerClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }));\n}\n\nNavBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  handleMobileDrawerOpen: PropTypes.func,\n  handleMobileDrawerClose: PropTypes.func,\n  mobileDrawerOpen: PropTypes.bool,\n  selectedTab: PropTypes.string,\n  openRegisterDialog: PropTypes.func.isRequired,\n  openLoginDialog: PropTypes.func.isRequired\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(memo(NavBar));","map":{"version":3,"sources":["/Users/bhavyameghnani/Desktop/react-saas-template/src/logged_out/components/navigation/NavBar.js"],"names":["React","memo","PropTypes","Link","AppBar","Toolbar","Typography","Button","Hidden","IconButton","withStyles","MenuIcon","HomeIcon","HowToRegIcon","LockOpenIcon","BookIcon","NavigationDrawer","styles","theme","appBar","boxShadow","shadows","backgroundColor","palette","common","white","toolbar","display","justifyContent","menuButtonText","fontSize","typography","body1","fontWeight","h6","brandText","fontFamily","noDecoration","textDecoration","NavBar","props","classes","openRegisterDialog","openLoginDialog","handleMobileDrawerOpen","handleMobileDrawerClose","mobileDrawerOpen","selectedTab","menuItems","link","name","icon","onClick","root","menuButton","map","element","text","propTypes","object","isRequired","func","bool","string","withTheme"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SACEC,MADF,EAEEC,OAFF,EAGEC,UAHF,EAIEC,MAJF,EAKEC,MALF,EAMEC,UANF,EAOEC,UAPF,QAQO,mBARP;AASA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADL;AAENC,IAAAA,eAAe,EAAEJ,KAAK,CAACK,OAAN,CAAcC,MAAd,CAAqBC;AAFhC,GADe;AAKvBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE,MADF;AAEPC,IAAAA,cAAc,EAAE;AAFT,GALc;AASvBC,EAAAA,cAAc,EAAE;AACdC,IAAAA,QAAQ,EAAEZ,KAAK,CAACa,UAAN,CAAiBC,KAAjB,CAAuBF,QADnB;AAEdG,IAAAA,UAAU,EAAEf,KAAK,CAACa,UAAN,CAAiBG,EAAjB,CAAoBD;AAFlB,GATO;AAavBE,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAE,2BADH;AAETH,IAAAA,UAAU,EAAE;AAFH,GAbY;AAiBvBI,EAAAA,YAAY,EAAE;AACZC,IAAAA,cAAc,EAAE;AADJ;AAjBS,CAAL,CAApB;;AAsBA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA,kBAFI;AAGJC,IAAAA,eAHI;AAIJC,IAAAA,sBAJI;AAKJC,IAAAA,uBALI;AAMJC,IAAAA,gBANI;AAOJC,IAAAA;AAPI,MAQFP,KARJ;AASA,QAAMQ,SAAS,GAAG,CAChB;AACEC,IAAAA,IAAI,EAAE,GADR;AAEEC,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,IAAI,eAAE,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHR,GADgB,EAMhB;AACEF,IAAAA,IAAI,EAAE,OADR;AAEEC,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,IAAI,eAAE,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHR,GANgB,EAWhB;AACED,IAAAA,IAAI,EAAE,UADR;AAEEE,IAAAA,OAAO,EAAEV,kBAFX;AAGES,IAAAA,IAAI,eAAE,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHR,GAXgB,EAgBhB;AACED,IAAAA,IAAI,EAAE,OADR;AAEEE,IAAAA,OAAO,EAAET,eAFX;AAGEQ,IAAAA,IAAI,eAAE,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHR,GAhBgB,CAAlB;AAsBA,sBACE;AAAK,IAAA,SAAS,EAAEV,OAAO,CAACY,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,OAAjB;AAAyB,IAAA,SAAS,EAAEZ,OAAO,CAACtB,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEsB,OAAO,CAACf,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,OAAO,EAAC,IADV;AAEE,IAAA,SAAS,EAAEe,OAAO,CAACN,SAFrB;AAGE,IAAA,OAAO,EAAC,QAHV;AAIE,IAAA,KAAK,EAAC,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eASE,oBAAC,UAAD;AACE,IAAA,OAAO,EAAC,IADV;AAEE,IAAA,SAAS,EAAEM,OAAO,CAACN,SAFrB;AAGE,IAAA,OAAO,EAAC,QAHV;AAIE,IAAA,KAAK,EAAC,WAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WATF,CADF,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,SAAS,EAAEM,OAAO,CAACa,UADrB;AAEE,IAAA,OAAO,EAAEV,sBAFX;AAGE,kBAAW,iBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADF,eAUE,oBAAC,MAAD;AAAQ,IAAA,MAAM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,SAAS,CAACO,GAAV,CAAcC,OAAO,IAAI;AACxB,QAAIA,OAAO,CAACP,IAAZ,EAAkB;AAChB,0BACE,oBAAC,IAAD;AACE,QAAA,GAAG,EAAEO,OAAO,CAACN,IADf;AAEE,QAAA,EAAE,EAAEM,OAAO,CAACP,IAFd;AAGE,QAAA,SAAS,EAAER,OAAO,CAACJ,YAHrB;AAIE,QAAA,OAAO,EAAEQ,uBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAME,oBAAC,MAAD;AACE,QAAA,KAAK,EAAC,WADR;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,OAAO,EAAE;AAAEY,UAAAA,IAAI,EAAEhB,OAAO,CAACZ;AAAhB,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKG2B,OAAO,CAACN,IALX,CANF,CADF;AAgBD;;AACD,wBACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAC,WADR;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,OAAO,EAAEM,OAAO,CAACJ,OAHnB;AAIE,MAAA,OAAO,EAAE;AAAEK,QAAAA,IAAI,EAAEhB,OAAO,CAACZ;AAAhB,OAJX;AAKE,MAAA,GAAG,EAAE2B,OAAO,CAACN,IALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGM,OAAO,CAACN,IAPX,CADF;AAWD,GA9BA,CADH,CAVF,CAnBF,CADF,CADF,eAmEE,oBAAC,gBAAD;AACE,IAAA,SAAS,EAAEF,SADb;AAEE,IAAA,MAAM,EAAC,OAFT;AAGE,IAAA,IAAI,EAAEF,gBAHR;AAIE,IAAA,YAAY,EAAEC,WAJhB;AAKE,IAAA,OAAO,EAAEF,uBALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnEF,CADF;AA6ED;;AAEDN,MAAM,CAACmB,SAAP,GAAmB;AACjBjB,EAAAA,OAAO,EAAEvC,SAAS,CAACyD,MAAV,CAAiBC,UADT;AAEjBhB,EAAAA,sBAAsB,EAAE1C,SAAS,CAAC2D,IAFjB;AAGjBhB,EAAAA,uBAAuB,EAAE3C,SAAS,CAAC2D,IAHlB;AAIjBf,EAAAA,gBAAgB,EAAE5C,SAAS,CAAC4D,IAJX;AAKjBf,EAAAA,WAAW,EAAE7C,SAAS,CAAC6D,MALN;AAMjBrB,EAAAA,kBAAkB,EAAExC,SAAS,CAAC2D,IAAV,CAAeD,UANlB;AAOjBjB,EAAAA,eAAe,EAAEzC,SAAS,CAAC2D,IAAV,CAAeD;AAPf,CAAnB;AAUA,eAAelD,UAAU,CAACO,MAAD,EAAS;AAAE+C,EAAAA,SAAS,EAAE;AAAb,CAAT,CAAV,CAAwC/D,IAAI,CAACsC,MAAD,CAA5C,CAAf","sourcesContent":["import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  Hidden,\n  IconButton,\n  withStyles\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport HowToRegIcon from \"@material-ui/icons/HowToReg\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport BookIcon from \"@material-ui/icons/Book\";\nimport NavigationDrawer from \"../../../shared/components/NavigationDrawer\";\n\nconst styles = theme => ({\n  appBar: {\n    boxShadow: theme.shadows[6],\n    backgroundColor: theme.palette.common.white\n  },\n  toolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  menuButtonText: {\n    fontSize: theme.typography.body1.fontSize,\n    fontWeight: theme.typography.h6.fontWeight\n  },\n  brandText: {\n    fontFamily: \"'Baloo Bhaijaan', cursive\",\n    fontWeight: 400\n  },\n  noDecoration: {\n    textDecoration: \"none !important\"\n  }\n});\n\nfunction NavBar(props) {\n  const {\n    classes,\n    openRegisterDialog,\n    openLoginDialog,\n    handleMobileDrawerOpen,\n    handleMobileDrawerClose,\n    mobileDrawerOpen,\n    selectedTab\n  } = props;\n  const menuItems = [\n    {\n      link: \"/\",\n      name: \"Home\",\n      icon: <HomeIcon className=\"text-white\" />\n    },\n    {\n      link: \"/blog\",\n      name: \"Blog\",\n      icon: <BookIcon className=\"text-white\" />\n    },\n    {\n      name: \"Register\",\n      onClick: openRegisterDialog,\n      icon: <HowToRegIcon className=\"text-white\" />\n    },\n    {\n      name: \"Login\",\n      onClick: openLoginDialog,\n      icon: <LockOpenIcon className=\"text-white\" />\n    }\n  ];\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar className={classes.toolbar}>\n          <div>\n            <Typography\n              variant=\"h4\"\n              className={classes.brandText}\n              display=\"inline\"\n              color=\"primary\"\n            >\n              Wa\n            </Typography>\n            <Typography\n              variant=\"h4\"\n              className={classes.brandText}\n              display=\"inline\"\n              color=\"secondary\"\n            >\n              Ver\n            </Typography>\n          </div>\n          <div>\n            <Hidden mdUp>\n              <IconButton\n                className={classes.menuButton}\n                onClick={handleMobileDrawerOpen}\n                aria-label=\"Open Navigation\"\n              >\n                <MenuIcon color=\"primary\" />\n              </IconButton>\n            </Hidden>\n            <Hidden smDown>\n              {menuItems.map(element => {\n                if (element.link) {\n                  return (\n                    <Link\n                      key={element.name}\n                      to={element.link}\n                      className={classes.noDecoration}\n                      onClick={handleMobileDrawerClose}\n                    >\n                      <Button\n                        color=\"secondary\"\n                        size=\"large\"\n                        classes={{ text: classes.menuButtonText }}\n                      >\n                        {element.name}\n                      </Button>\n                    </Link>\n                  );\n                }\n                return (\n                  <Button\n                    color=\"secondary\"\n                    size=\"large\"\n                    onClick={element.onClick}\n                    classes={{ text: classes.menuButtonText }}\n                    key={element.name}\n                  >\n                    {element.name}\n                  </Button>\n                );\n              })}\n            </Hidden>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <NavigationDrawer\n        menuItems={menuItems}\n        anchor=\"right\"\n        open={mobileDrawerOpen}\n        selectedItem={selectedTab}\n        onClose={handleMobileDrawerClose}\n      />\n    </div>\n  );\n}\n\nNavBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  handleMobileDrawerOpen: PropTypes.func,\n  handleMobileDrawerClose: PropTypes.func,\n  mobileDrawerOpen: PropTypes.bool,\n  selectedTab: PropTypes.string,\n  openRegisterDialog: PropTypes.func.isRequired,\n  openLoginDialog: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(memo(NavBar));\n"]},"metadata":{},"sourceType":"module"}
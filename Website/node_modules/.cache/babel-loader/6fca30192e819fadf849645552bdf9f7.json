{"ast":null,"code":"var _jsxFileName = \"/Users/bhavyameghnani/Desktop/react-saas-template/src/logged_in/components/posts/PostContent.js\";\nimport React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid, TablePagination, Divider, Toolbar, Typography, Button, Paper, Box, withStyles } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SelfAligningImage from \"../../../shared/components/SelfAligningImage\";\nimport HighlightedInformation from \"../../../shared/components/HighlightedInformation\";\nimport ConfirmationDialog from \"../../../shared/components/ConfirmationDialog\";\nconst styles = {\n  dBlock: {\n    display: \"block\"\n  },\n  dNone: {\n    display: \"none\"\n  },\n  toolbar: {\n    justifyContent: \"space-between\"\n  }\n};\nconst rowsPerPage = 25;\n\nfunction PostContent(props) {\n  const {\n    pushMessageToSnackbar,\n    setPosts,\n    posts,\n    openAddPostModal,\n    classes\n  } = props;\n  const [page, setPage] = useState(0);\n  const [isDeletePostDialogOpen, setIsDeletePostDialogOpen] = useState(false);\n  const [isDeletePostDialogLoading, setIsDeletePostDialogLoading] = useState(false);\n  const closeDeletePostDialog = useCallback(() => {\n    setIsDeletePostDialogOpen(false);\n    setIsDeletePostDialogLoading(false);\n  }, [setIsDeletePostDialogOpen, setIsDeletePostDialogLoading]);\n  const deletePost = useCallback(() => {\n    setIsDeletePostDialogLoading(true);\n    setTimeout(() => {\n      const _posts = [...posts];\n\n      const index = _posts.find(element => element.id === deletePost.id);\n\n      _posts.splice(index, 1);\n\n      setPosts(_posts);\n      pushMessageToSnackbar({\n        text: \"Your post has been deleted\"\n      });\n      closeDeletePostDialog();\n    }, 1500);\n  }, [posts, setPosts, setIsDeletePostDialogLoading, pushMessageToSnackbar, closeDeletePostDialog]);\n  const onDelete = useCallback(post => {\n    setIsDeletePostDialogOpen(true);\n  }, [setIsDeletePostDialogOpen]);\n  const handleChangePage = useCallback((__, page) => {\n    setPage(page);\n  }, [setPage]);\n  const printImageGrid = useCallback(() => {\n    if (posts.length > 0) {\n      return /*#__PURE__*/React.createElement(Box, {\n        p: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }, posts.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(element => /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        sm: 4,\n        md: 3,\n        key: element.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(SelfAligningImage, {\n        src: element.src,\n        title: element.name,\n        timeStamp: element.timestamp,\n        options: [{\n          name: \"Delete\",\n          onClick: () => {\n            onDelete(element);\n          },\n          icon: /*#__PURE__*/React.createElement(DeleteIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 31\n            }\n          })\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 19\n        }\n      })))));\n    }\n\n    return /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(HighlightedInformation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, \"No posts added yet. Click on \\\"NEW\\\" to create your first one.\"));\n  }, [posts, onDelete, page]);\n  return /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, \"Your Posts\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: openAddPostModal,\n    disableElevation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, \"Add Post\")), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }), printImageGrid(), /*#__PURE__*/React.createElement(TablePagination, {\n    component: \"div\",\n    count: posts.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    backIconButtonProps: {\n      \"aria-label\": \"Previous Page\"\n    },\n    nextIconButtonProps: {\n      \"aria-label\": \"Next Page\"\n    },\n    onChangePage: handleChangePage,\n    classes: {\n      select: classes.dNone,\n      selectIcon: classes.dNone,\n      actions: posts.length > 0 ? classes.dBlock : classes.dNone,\n      caption: posts.length > 0 ? classes.dBlock : classes.dNone\n    },\n    labelRowsPerPage: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ConfirmationDialog, {\n    open: isDeletePostDialogOpen,\n    title: \"Confirmation\",\n    content: \"Do you really want to delete the post?\",\n    onClose: closeDeletePostDialog,\n    loading: isDeletePostDialogLoading,\n    onConfirm: deletePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }));\n}\n\nPostContent.propTypes = {\n  openAddPostModal: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setPosts: PropTypes.func.isRequired,\n  pushMessageToSnackbar: PropTypes.func\n};\nexport default withStyles(styles)(PostContent);","map":{"version":3,"sources":["/Users/bhavyameghnani/Desktop/react-saas-template/src/logged_in/components/posts/PostContent.js"],"names":["React","useState","useCallback","PropTypes","Grid","TablePagination","Divider","Toolbar","Typography","Button","Paper","Box","withStyles","DeleteIcon","SelfAligningImage","HighlightedInformation","ConfirmationDialog","styles","dBlock","display","dNone","toolbar","justifyContent","rowsPerPage","PostContent","props","pushMessageToSnackbar","setPosts","posts","openAddPostModal","classes","page","setPage","isDeletePostDialogOpen","setIsDeletePostDialogOpen","isDeletePostDialogLoading","setIsDeletePostDialogLoading","closeDeletePostDialog","deletePost","setTimeout","_posts","index","find","element","id","splice","text","onDelete","post","handleChangePage","__","printImageGrid","length","slice","map","src","name","timestamp","onClick","icon","select","selectIcon","actions","caption","propTypes","func","isRequired","object","arrayOf"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Grid,\n  TablePagination,\n  Divider,\n  Toolbar,\n  Typography,\n  Button,\n  Paper,\n  Box,\n  withStyles,\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SelfAligningImage from \"../../../shared/components/SelfAligningImage\";\nimport HighlightedInformation from \"../../../shared/components/HighlightedInformation\";\nimport ConfirmationDialog from \"../../../shared/components/ConfirmationDialog\";\n\nconst styles = {\n  dBlock: { display: \"block\" },\n  dNone: { display: \"none\" },\n  toolbar: {\n    justifyContent: \"space-between\",\n  },\n};\n\nconst rowsPerPage = 25;\n\nfunction PostContent(props) {\n  const {\n    pushMessageToSnackbar,\n    setPosts,\n    posts,\n    openAddPostModal,\n    classes,\n  } = props;\n  const [page, setPage] = useState(0);\n  const [isDeletePostDialogOpen, setIsDeletePostDialogOpen] = useState(false);\n  const [isDeletePostDialogLoading, setIsDeletePostDialogLoading] = useState(\n    false\n  );\n\n  const closeDeletePostDialog = useCallback(() => {\n    setIsDeletePostDialogOpen(false);\n    setIsDeletePostDialogLoading(false);\n  }, [setIsDeletePostDialogOpen, setIsDeletePostDialogLoading]);\n\n  const deletePost = useCallback(() => {\n    setIsDeletePostDialogLoading(true);\n    setTimeout(() => {\n      const _posts = [...posts];\n      const index = _posts.find((element) => element.id === deletePost.id);\n      _posts.splice(index, 1);\n      setPosts(_posts);\n      pushMessageToSnackbar({\n        text: \"Your post has been deleted\",\n      });\n      closeDeletePostDialog();\n    }, 1500);\n  }, [\n    posts,\n    setPosts,\n    setIsDeletePostDialogLoading,\n    pushMessageToSnackbar,\n    closeDeletePostDialog,\n  ]);\n\n  const onDelete = useCallback(\n    (post) => {\n      setIsDeletePostDialogOpen(true);\n    },\n    [setIsDeletePostDialogOpen]\n  );\n\n  const handleChangePage = useCallback(\n    (__, page) => {\n      setPage(page);\n    },\n    [setPage]\n  );\n\n  const printImageGrid = useCallback(() => {\n    if (posts.length > 0) {\n      return (\n        <Box p={1}>\n          <Grid container spacing={1}>\n            {posts\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((element) => (\n                <Grid item xs={6} sm={4} md={3} key={element.id}>\n                  <SelfAligningImage\n                    src={element.src}\n                    title={element.name}\n                    timeStamp={element.timestamp}\n                    options={[\n                      {\n                        name: \"Delete\",\n                        onClick: () => {\n                          onDelete(element);\n                        },\n                        icon: <DeleteIcon />,\n                      },\n                    ]}\n                  />\n                </Grid>\n              ))}\n          </Grid>\n        </Box>\n      );\n    }\n    return (\n      <Box m={2}>\n        <HighlightedInformation>\n          No posts added yet. Click on &quot;NEW&quot; to create your first one.\n        </HighlightedInformation>\n      </Box>\n    );\n  }, [posts, onDelete, page]);\n\n  return (\n    <Paper>\n      <Toolbar className={classes.toolbar}>\n        <Typography variant=\"h6\">Your Posts</Typography>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={openAddPostModal}\n          disableElevation\n        >\n          Add Post\n        </Button>\n      </Toolbar>\n      <Divider />\n      {printImageGrid()}\n      <TablePagination\n        component=\"div\"\n        count={posts.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        backIconButtonProps={{\n          \"aria-label\": \"Previous Page\",\n        }}\n        nextIconButtonProps={{\n          \"aria-label\": \"Next Page\",\n        }}\n        onChangePage={handleChangePage}\n        classes={{\n          select: classes.dNone,\n          selectIcon: classes.dNone,\n          actions: posts.length > 0 ? classes.dBlock : classes.dNone,\n          caption: posts.length > 0 ? classes.dBlock : classes.dNone,\n        }}\n        labelRowsPerPage=\"\"\n      />\n      <ConfirmationDialog\n        open={isDeletePostDialogOpen}\n        title=\"Confirmation\"\n        content=\"Do you really want to delete the post?\"\n        onClose={closeDeletePostDialog}\n        loading={isDeletePostDialogLoading}\n        onConfirm={deletePost}\n      />\n    </Paper>\n  );\n}\n\nPostContent.propTypes = {\n  openAddPostModal: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setPosts: PropTypes.func.isRequired,\n  pushMessageToSnackbar: PropTypes.func,\n};\n\nexport default withStyles(styles)(PostContent);\n"]},"metadata":{},"sourceType":"module"}
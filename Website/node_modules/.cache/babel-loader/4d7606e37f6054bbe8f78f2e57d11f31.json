{"ast":null,"code":"var _jsxFileName = \"/Users/bhavyameghnani/Desktop/react-saas-template/src/logged_out/components/register_login/DialogSelector.js\";\nimport React, { useState, useCallback, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport RegisterDialog from \"./RegisterDialog\";\nimport TermsOfServiceDialog from \"./TermsOfServiceDialog\";\nimport LoginDialog from \"./LoginDialog\";\nimport ChangePasswordDialog from \"./ChangePasswordDialog\";\nimport ModalBackdrop from \"../../../shared/components/ModalBackdrop\";\n\nfunction DialogSelector(props) {\n  const {\n    dialogOpen,\n    openTermsDialog,\n    openRegisterDialog,\n    openLoginDialog,\n    openChangePasswordDialog,\n    onClose\n  } = props;\n  const [loginStatus, setLoginStatus] = useState(null);\n  const [registerStatus, setRegisterStatus] = useState(null);\n\n  const _onClose = useCallback(() => {\n    setLoginStatus(null);\n    setRegisterStatus(null);\n    onClose();\n  }, [onClose, setLoginStatus, setRegisterStatus]);\n\n  const printDialog = useCallback(() => {\n    switch (dialogOpen) {\n      case \"register\":\n        return /*#__PURE__*/React.createElement(RegisterDialog, {\n          onClose: _onClose,\n          openTermsDialog: openTermsDialog,\n          status: registerStatus,\n          setStatus: setRegisterStatus,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 11\n          }\n        });\n\n      case \"termsOfService\":\n        return /*#__PURE__*/React.createElement(TermsOfServiceDialog, {\n          onClose: openRegisterDialog,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 16\n          }\n        });\n\n      case \"login\":\n        return /*#__PURE__*/React.createElement(LoginDialog, {\n          onClose: _onClose,\n          status: loginStatus,\n          setStatus: setLoginStatus,\n          openChangePasswordDialog: openChangePasswordDialog,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }\n        });\n\n      case \"changePassword\":\n        return /*#__PURE__*/React.createElement(ChangePasswordDialog, {\n          setLoginStatus: setLoginStatus,\n          onClose: openLoginDialog,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }\n        });\n\n      default:\n    }\n  }, [dialogOpen, openChangePasswordDialog, openLoginDialog, openRegisterDialog, openTermsDialog, _onClose, loginStatus, registerStatus, setLoginStatus, setRegisterStatus]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, dialogOpen && /*#__PURE__*/React.createElement(ModalBackdrop, {\n    open: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 22\n    }\n  }), printDialog());\n}\n\nDialogSelector.propTypes = {\n  dialogOpen: PropTypes.string,\n  openLoginDialog: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  openTermsDialog: PropTypes.func.isRequired,\n  openRegisterDialog: PropTypes.func.isRequired,\n  openChangePasswordDialog: PropTypes.func.isRequired\n};\nexport default DialogSelector;","map":{"version":3,"sources":["/Users/bhavyameghnani/Desktop/react-saas-template/src/logged_out/components/register_login/DialogSelector.js"],"names":["React","useState","useCallback","Fragment","PropTypes","RegisterDialog","TermsOfServiceDialog","LoginDialog","ChangePasswordDialog","ModalBackdrop","DialogSelector","props","dialogOpen","openTermsDialog","openRegisterDialog","openLoginDialog","openChangePasswordDialog","onClose","loginStatus","setLoginStatus","registerStatus","setRegisterStatus","_onClose","printDialog","propTypes","string","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,aAAP,MAA0B,0CAA1B;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,QAAM;AACJC,IAAAA,UADI;AAEJC,IAAAA,eAFI;AAGJC,IAAAA,kBAHI;AAIJC,IAAAA,eAJI;AAKJC,IAAAA,wBALI;AAMJC,IAAAA;AANI,MAOFN,KAPJ;AAQA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACmB,cAAD,EAAiBC,iBAAjB,IAAsCpB,QAAQ,CAAC,IAAD,CAApD;;AAEA,QAAMqB,QAAQ,GAAGpB,WAAW,CAAC,MAAM;AACjCiB,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAJ,IAAAA,OAAO;AACR,GAJ2B,EAIzB,CAACA,OAAD,EAAUE,cAAV,EAA0BE,iBAA1B,CAJyB,CAA5B;;AAMA,QAAME,WAAW,GAAGrB,WAAW,CAAC,MAAM;AACpC,YAAQU,UAAR;AACE,WAAK,UAAL;AACE,4BACE,oBAAC,cAAD;AACE,UAAA,OAAO,EAAEU,QADX;AAEE,UAAA,eAAe,EAAET,eAFnB;AAGE,UAAA,MAAM,EAAEO,cAHV;AAIE,UAAA,SAAS,EAAEC,iBAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAQF,WAAK,gBAAL;AACE,4BAAO,oBAAC,oBAAD;AAAsB,UAAA,OAAO,EAAEP,kBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACF,WAAK,OAAL;AACE,4BACE,oBAAC,WAAD;AACE,UAAA,OAAO,EAAEQ,QADX;AAEE,UAAA,MAAM,EAAEJ,WAFV;AAGE,UAAA,SAAS,EAAEC,cAHb;AAIE,UAAA,wBAAwB,EAAEH,wBAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAQF,WAAK,gBAAL;AACE,4BACE,oBAAC,oBAAD;AACE,UAAA,cAAc,EAAEG,cADlB;AAEE,UAAA,OAAO,EAAEJ,eAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAMF;AA5BF;AA8BD,GA/B8B,EA+B5B,CACDH,UADC,EAEDI,wBAFC,EAGDD,eAHC,EAIDD,kBAJC,EAKDD,eALC,EAMDS,QANC,EAODJ,WAPC,EAQDE,cARC,EASDD,cATC,EAUDE,iBAVC,CA/B4B,CAA/B;AA4CA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,UAAU,iBAAI,oBAAC,aAAD;AAAe,IAAA,IAAI,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjB,EAEGW,WAAW,EAFd,CADF;AAMD;;AAEDb,cAAc,CAACc,SAAf,GAA2B;AACzBZ,EAAAA,UAAU,EAAER,SAAS,CAACqB,MADG;AAEzBV,EAAAA,eAAe,EAAEX,SAAS,CAACsB,IAAV,CAAeC,UAFP;AAGzBV,EAAAA,OAAO,EAAEb,SAAS,CAACsB,IAAV,CAAeC,UAHC;AAIzBd,EAAAA,eAAe,EAAET,SAAS,CAACsB,IAAV,CAAeC,UAJP;AAKzBb,EAAAA,kBAAkB,EAAEV,SAAS,CAACsB,IAAV,CAAeC,UALV;AAMzBX,EAAAA,wBAAwB,EAAEZ,SAAS,CAACsB,IAAV,CAAeC;AANhB,CAA3B;AASA,eAAejB,cAAf","sourcesContent":["import React, { useState, useCallback, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport RegisterDialog from \"./RegisterDialog\";\nimport TermsOfServiceDialog from \"./TermsOfServiceDialog\";\nimport LoginDialog from \"./LoginDialog\";\nimport ChangePasswordDialog from \"./ChangePasswordDialog\";\nimport ModalBackdrop from \"../../../shared/components/ModalBackdrop\";\n\nfunction DialogSelector(props) {\n  const {\n    dialogOpen,\n    openTermsDialog,\n    openRegisterDialog,\n    openLoginDialog,\n    openChangePasswordDialog,\n    onClose,\n  } = props;\n  const [loginStatus, setLoginStatus] = useState(null);\n  const [registerStatus, setRegisterStatus] = useState(null);\n\n  const _onClose = useCallback(() => {\n    setLoginStatus(null);\n    setRegisterStatus(null);\n    onClose();\n  }, [onClose, setLoginStatus, setRegisterStatus]);\n\n  const printDialog = useCallback(() => {\n    switch (dialogOpen) {\n      case \"register\":\n        return (\n          <RegisterDialog\n            onClose={_onClose}\n            openTermsDialog={openTermsDialog}\n            status={registerStatus}\n            setStatus={setRegisterStatus}\n          />\n        );\n      case \"termsOfService\":\n        return <TermsOfServiceDialog onClose={openRegisterDialog} />;\n      case \"login\":\n        return (\n          <LoginDialog\n            onClose={_onClose}\n            status={loginStatus}\n            setStatus={setLoginStatus}\n            openChangePasswordDialog={openChangePasswordDialog}\n          />\n        );\n      case \"changePassword\":\n        return (\n          <ChangePasswordDialog\n            setLoginStatus={setLoginStatus}\n            onClose={openLoginDialog}\n          />\n        );\n      default:\n    }\n  }, [\n    dialogOpen,\n    openChangePasswordDialog,\n    openLoginDialog,\n    openRegisterDialog,\n    openTermsDialog,\n    _onClose,\n    loginStatus,\n    registerStatus,\n    setLoginStatus,\n    setRegisterStatus,\n  ]);\n\n  return (\n    <Fragment>\n      {dialogOpen && <ModalBackdrop open />}\n      {printDialog()}\n    </Fragment>\n  );\n}\n\nDialogSelector.propTypes = {\n  dialogOpen: PropTypes.string,\n  openLoginDialog: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  openTermsDialog: PropTypes.func.isRequired,\n  openRegisterDialog: PropTypes.func.isRequired,\n  openChangePasswordDialog: PropTypes.func.isRequired,\n};\n\nexport default DialogSelector;\n"]},"metadata":{},"sourceType":"module"}
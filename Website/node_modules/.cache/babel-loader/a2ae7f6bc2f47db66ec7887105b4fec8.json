{"ast":null,"code":"var _jsxFileName = \"/Users/bhavyameghnani/Desktop/react-saas-template/src/shared/components/HelpIcon.js\";\nimport React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Tooltip, Typography, withStyles } from \"@material-ui/core\";\nimport HelpIconOutline from \"@material-ui/icons/HelpOutline\";\n\nconst styles = theme => ({\n  tooltipTypo: {\n    whiteSpace: \"pre-line !important\",\n    ...theme.typography.caption,\n    color: theme.palette.common.white\n  },\n  tooltip: {\n    verticalAlign: \"middle\",\n    fontSize: \"1.25rem\"\n  },\n  helpIcon: {\n    marginLeft: theme.spacing(1),\n    \"@media (max-width: 350px)\": {\n      marginLeft: theme.spacing(0.5)\n    },\n    transition: theme.transitions.create([\"color\"], {\n      duration: theme.transitions.duration.short,\n      easing: theme.transitions.easing.easeInOut\n    })\n  }\n});\n\nfunction HelpIcon(props) {\n  const {\n    classes,\n    title\n  } = props;\n  const [isHovered, setIsHovered] = useState(false);\n  const onMouseOver = useCallback(() => {\n    setIsHovered(true);\n  }, []);\n  const onMouseLeave = useCallback(() => {\n    setIsHovered(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(Tooltip, {\n    title: /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      className: classes.tooltipTypo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, title),\n    className: classes.tooltip,\n    enterTouchDelay: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(HelpIconOutline\n  /**\n   * We have to use onMouseOver and not onMouseEnter, because if we have overlapping\n   * tooltips, the onMouseEnter wont fire when the old tooltip is fading\n   * */\n  , {\n    onMouseOver: onMouseOver,\n    onFocus: onMouseOver,\n    onBlur: onMouseLeave,\n    onMouseLeave: onMouseLeave,\n    color: isHovered ? \"primary\" : \"inherit\",\n    className: classes.helpIcon,\n    style: {\n      cursor: isHovered ? \"pointer\" : \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }));\n}\n\nHelpIcon.propTypes = {\n  classes: PropTypes.object,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node])\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(HelpIcon);","map":{"version":3,"sources":["/Users/bhavyameghnani/Desktop/react-saas-template/src/shared/components/HelpIcon.js"],"names":["React","useState","useCallback","PropTypes","Tooltip","Typography","withStyles","HelpIconOutline","styles","theme","tooltipTypo","whiteSpace","typography","caption","color","palette","common","white","tooltip","verticalAlign","fontSize","helpIcon","marginLeft","spacing","transition","transitions","create","duration","short","easing","easeInOut","HelpIcon","props","classes","title","isHovered","setIsHovered","onMouseOver","onMouseLeave","cursor","propTypes","object","oneOfType","string","node","withTheme"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Tooltip, Typography, withStyles } from \"@material-ui/core\";\nimport HelpIconOutline from \"@material-ui/icons/HelpOutline\";\n\nconst styles = theme => ({\n  tooltipTypo: {\n    whiteSpace: \"pre-line !important\",\n    ...theme.typography.caption,\n    color: theme.palette.common.white\n  },\n  tooltip: {\n    verticalAlign: \"middle\",\n    fontSize: \"1.25rem\"\n  },\n  helpIcon: {\n    marginLeft: theme.spacing(1),\n    \"@media (max-width: 350px)\": {\n      marginLeft: theme.spacing(0.5)\n    },\n    transition: theme.transitions.create([\"color\"], {\n      duration: theme.transitions.duration.short,\n      easing: theme.transitions.easing.easeInOut\n    })\n  }\n});\n\nfunction HelpIcon(props) {\n  const { classes, title } = props;\n  const [isHovered, setIsHovered] = useState(false);\n\n  const onMouseOver = useCallback(() => {\n    setIsHovered(true);\n  }, []);\n\n  const onMouseLeave = useCallback(() => {\n    setIsHovered(false);\n  }, []);\n\n  return (\n    <Tooltip\n      title={\n        <Typography variant=\"body2\" className={classes.tooltipTypo}>\n          {title}\n        </Typography>\n      }\n      className={classes.tooltip}\n      enterTouchDelay={300}\n    >\n      <HelpIconOutline\n        /**\n         * We have to use onMouseOver and not onMouseEnter, because if we have overlapping\n         * tooltips, the onMouseEnter wont fire when the old tooltip is fading\n         * */\n        onMouseOver={onMouseOver}\n        onFocus={onMouseOver}\n        onBlur={onMouseLeave}\n        onMouseLeave={onMouseLeave}\n        color={isHovered ? \"primary\" : \"inherit\"}\n        className={classes.helpIcon}\n        style={{ cursor: isHovered ? \"pointer\" : \"auto\" }}\n      />\n    </Tooltip>\n  );\n}\n\nHelpIcon.propTypes = {\n  classes: PropTypes.object,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node])\n};\n\nexport default withStyles(styles, { withTheme: true })(HelpIcon);\n"]},"metadata":{},"sourceType":"module"}
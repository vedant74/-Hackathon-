{"ast":null,"code":"var _jsxFileName = \"/Users/bhavyameghnani/Desktop/react-saas-template/src/shared/components/VertOptions.js\";\nimport React, { Fragment, useState, useCallback, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Popover, IconButton, MenuList, ListItemText, ListItemIcon, MenuItem, withStyles } from \"@material-ui/core\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nconst styles = {\n  listItemtext: {\n    paddingLeft: \"0 !important\"\n  }\n};\n\nfunction VertOptions(props) {\n  const {\n    items,\n    classes,\n    color\n  } = props;\n  const anchorEl = useRef();\n  const [isOpen, setIsOpen] = useState(false);\n  const handleClose = useCallback(() => {\n    setIsOpen(false);\n  }, [setIsOpen]);\n  const handleOpen = useCallback(() => {\n    setIsOpen(true);\n  }, [setIsOpen]);\n  const id = isOpen ? \"scroll-playground\" : null;\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleOpen,\n    buttonRef: anchorEl,\n    style: {\n      color: color ? color : null\n    },\n    \"aria-describedby\": id,\n    \"aria-label\": \"More Options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MoreVertIcon, {\n    style: {\n      color: color ? color : null\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Popover, {\n    id: id,\n    open: isOpen,\n    anchorEl: anchorEl.current,\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"center\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"center\"\n    },\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MenuList, {\n    dense: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(MenuItem, {\n    key: item.name,\n    onClick: () => {\n      handleClose();\n      item.onClick();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, item.icon), /*#__PURE__*/React.createElement(ListItemText, {\n    className: classes.listItemtext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, item.name))))));\n}\n\nVertOptions.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\n  classes: PropTypes.object.isRequired,\n  color: PropTypes.string\n};\nexport default withStyles(styles)(VertOptions);","map":{"version":3,"sources":["/Users/bhavyameghnani/Desktop/react-saas-template/src/shared/components/VertOptions.js"],"names":["React","Fragment","useState","useCallback","useRef","PropTypes","Popover","IconButton","MenuList","ListItemText","ListItemIcon","MenuItem","withStyles","MoreVertIcon","styles","listItemtext","paddingLeft","VertOptions","props","items","classes","color","anchorEl","isOpen","setIsOpen","handleClose","handleOpen","id","current","vertical","horizontal","map","item","name","onClick","icon","propTypes","arrayOf","object","isRequired","string"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useCallback, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Popover,\n  IconButton,\n  MenuList,\n  ListItemText,\n  ListItemIcon,\n  MenuItem,\n  withStyles,\n} from \"@material-ui/core\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\n\nconst styles = {\n  listItemtext: {\n    paddingLeft: \"0 !important\",\n  },\n};\n\nfunction VertOptions(props) {\n  const { items, classes, color } = props;\n  const anchorEl = useRef();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleClose = useCallback(() => {\n    setIsOpen(false);\n  }, [setIsOpen]);\n\n  const handleOpen = useCallback(() => {\n    setIsOpen(true);\n  }, [setIsOpen]);\n\n  const id = isOpen ? \"scroll-playground\" : null;\n  return (\n    <Fragment>\n      <IconButton\n        onClick={handleOpen}\n        buttonRef={anchorEl}\n        style={{ color: color ? color : null }}\n        aria-describedby={id}\n        aria-label=\"More Options\"\n      >\n        <MoreVertIcon style={{ color: color ? color : null }} />\n      </IconButton>\n      <Popover\n        id={id}\n        open={isOpen}\n        anchorEl={anchorEl.current}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        onClose={handleClose}\n      >\n        <MenuList dense>\n          {items.map((item) => (\n            <MenuItem\n              key={item.name}\n              onClick={() => {\n                handleClose();\n                item.onClick();\n              }}\n            >\n              <ListItemIcon>{item.icon}</ListItemIcon>\n              <ListItemText className={classes.listItemtext}>\n                {item.name}\n              </ListItemText>\n            </MenuItem>\n          ))}\n        </MenuList>\n      </Popover>\n    </Fragment>\n  );\n}\n\nVertOptions.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\n  classes: PropTypes.object.isRequired,\n  color: PropTypes.string,\n};\n\nexport default withStyles(styles)(VertOptions);\n"]},"metadata":{},"sourceType":"module"}
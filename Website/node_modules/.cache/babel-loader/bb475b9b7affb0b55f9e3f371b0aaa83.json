{"ast":null,"code":"var _jsxFileName = \"/Users/bhavyameghnani/Desktop/react-saas-template/src/shared/components/ImageCropperDialog.js\";\nimport React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Dialog, DialogContent, DialogActions, Button, Box, withStyles } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  dialogPaper: {\n    maxWidth: `${theme.breakpoints.values.md}px !important`\n  },\n  dialogContent: {\n    paddingTop: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    paddingLeft: theme.spacing(2)\n  }\n});\n\nfunction ImageCropperDialog(props) {\n  const {\n    ImageCropper,\n    classes,\n    onClose,\n    open,\n    src,\n    onCrop,\n    aspectRatio\n  } = props;\n  const [crop, setCrop] = useState(null);\n  const getCropFunctionFromChild = useCallback(cropFunction => {\n    setCrop(() => cropFunction);\n  }, [setCrop]);\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onEscapeKeyDown: onClose,\n    classes: {\n      paper: classes.dialogPaper\n    },\n    style: {\n      overflowX: \"visible\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogContent, {\n    className: classes.dialogContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ImageCropper, {\n    src: src,\n    setCropFunction: getCropFunctionFromChild,\n    onCrop: onCrop,\n    aspectRatio: aspectRatio,\n    color: \"#3399FF\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mr: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Close\")), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: crop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Crop\")));\n}\n\nImageCropperDialog.propTypes = {\n  ImageCropper: PropTypes.elementType,\n  classes: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  onCrop: PropTypes.func.isRequired,\n  src: PropTypes.string,\n  aspectRatio: PropTypes.number\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(ImageCropperDialog);","map":{"version":3,"sources":["/Users/bhavyameghnani/Desktop/react-saas-template/src/shared/components/ImageCropperDialog.js"],"names":["React","useState","useCallback","PropTypes","Dialog","DialogContent","DialogActions","Button","Box","withStyles","styles","theme","dialogPaper","maxWidth","breakpoints","values","md","dialogContent","paddingTop","spacing","paddingRight","paddingLeft","ImageCropperDialog","props","ImageCropper","classes","onClose","open","src","onCrop","aspectRatio","crop","setCrop","getCropFunctionFromChild","cropFunction","paper","overflowX","propTypes","elementType","object","isRequired","func","bool","string","number","withTheme"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogActions,\n  Button,\n  Box,\n  withStyles\n} from \"@material-ui/core\";\n\nconst styles = theme => ({\n  dialogPaper: { maxWidth: `${theme.breakpoints.values.md}px !important` },\n  dialogContent: {\n    paddingTop: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    paddingLeft: theme.spacing(2)\n  }\n});\n\nfunction ImageCropperDialog(props) {\n  const {\n    ImageCropper,\n    classes,\n    onClose,\n    open,\n    src,\n    onCrop,\n    aspectRatio\n  } = props;\n  const [crop, setCrop] = useState(null);\n\n  const getCropFunctionFromChild = useCallback(cropFunction => {\n    setCrop(() => cropFunction);\n  }, [setCrop]);\n\n  return (\n    <Dialog\n      open={open}\n      onEscapeKeyDown={onClose}\n      classes={{ paper: classes.dialogPaper }}\n      style={{ overflowX: \"visible\" }}\n    >\n      <DialogContent className={classes.dialogContent}>\n        <ImageCropper\n          src={src}\n          setCropFunction={getCropFunctionFromChild}\n          onCrop={onCrop}\n          aspectRatio={aspectRatio}\n          color=\"#3399FF\"\n        />\n      </DialogContent>\n      <DialogActions>\n        <Box mr={1}>\n          <Button onClick={onClose}>Close</Button>\n        </Box>\n        <Button variant=\"contained\" color=\"secondary\" onClick={crop}>\n          Crop\n          </Button>\n      </DialogActions>\n    </Dialog>\n  );\n\n}\n\nImageCropperDialog.propTypes = {\n  ImageCropper: PropTypes.elementType,\n  classes: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  onCrop: PropTypes.func.isRequired,\n  src: PropTypes.string,\n  aspectRatio: PropTypes.number\n};\n\nexport default withStyles(styles, { withTheme: true })(ImageCropperDialog);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/bhavyameghnani/Desktop/react-saas-template/src/logged_in/components/dashboard/Settings1.js\";\nimport React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { List, ListItem, ListItemSecondaryAction, Button, ExpansionPanel, ExpansionPanelSummary, Typography, ListItemText, OutlinedInput, ExpansionPanelDetails, MenuItem, FormControl, Select, Box, withStyles } from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport withWidth from \"@material-ui/core/withWidth\";\nimport Bordered from \"../../../shared/components/Bordered\";\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\n\nconst styles = theme => ({\n  numberInput: {\n    width: 110\n  },\n  numberInputInput: {\n    padding: \"9px 34px 9px 14.5px\"\n  },\n  dBlock: {\n    display: \"block\"\n  },\n  listItemLeftPadding: {\n    paddingRight: theme.spacing(3)\n  },\n  expansionPanelDetails: {\n    paddintTop: theme.spacing(0),\n    justifyContent: \"flex-end\"\n  }\n});\n\nconst inputOptions = [\"None\", \"Slow\", \"Normal\", \"Fast\"];\n\nfunction Settings1(props) {\n  const {\n    classes,\n    pushMessageToSnackbar\n  } = props;\n  const [isSaveLoading, setIsSaveLoading] = useState(false);\n  const [isDefaultLoading, setIsDefaultLoading] = useState(false);\n  const [option1, setOption1] = useState(\"None\");\n  const [option2, setOption2] = useState(\"None\");\n  const [option3, setOption3] = useState(\"None\");\n  const [option4, setOption4] = useState(\"None\");\n  const [option5, setOption5] = useState(\"2 Days\");\n  const [option6, setOption6] = useState(7500);\n  const handleChange = useCallback(event => {\n    const {\n      name,\n      value\n    } = event.target;\n\n    if (name === \"option6\") {\n      if (value > 7500 || value < 1000) {\n        return;\n      }\n    }\n\n    switch (name) {\n      case \"option1\":\n        {\n          setOption1(value);\n          break;\n        }\n\n      case \"option2\":\n        {\n          setOption2(value);\n          break;\n        }\n\n      case \"option3\":\n        {\n          setOption3(value);\n          break;\n        }\n\n      case \"option4\":\n        {\n          setOption4(value);\n          break;\n        }\n\n      case \"option5\":\n        {\n          setOption5(value);\n          break;\n        }\n\n      case \"option6\":\n        {\n          setOption6(value);\n          break;\n        }\n\n      default:\n        throw new Error(\"No branch selected in switch statement.\");\n    }\n  }, [setOption1, setOption2, setOption3, setOption4, setOption5, setOption6]);\n  const resetState = useCallback(() => {\n    setIsSaveLoading(false);\n    setIsDefaultLoading(false);\n    setOption1(\"None\");\n    setOption2(\"None\");\n    setOption3(\"None\");\n    setOption4(\"None\");\n    setOption5(\"2 Days\");\n    setOption6(7500);\n  }, [setIsSaveLoading, setIsDefaultLoading, setOption1, setOption2, setOption3, setOption4, setOption5, setOption6]);\n  const onSetDefault = useCallback(() => {\n    setIsDefaultLoading(true);\n    setTimeout(() => {\n      pushMessageToSnackbar({\n        text: \"Your settings have been reset to default\"\n      });\n      resetState();\n    }, 1500);\n  }, [pushMessageToSnackbar, resetState]);\n  const onSubmit = useCallback(() => {\n    setIsSaveLoading(true);\n    setTimeout(() => {\n      pushMessageToSnackbar({\n        text: \"Your settings have been saved\"\n      });\n      setIsSaveLoading(false);\n    }, 1500);\n  }, [setIsSaveLoading, pushMessageToSnackbar]);\n  const inputs = [{\n    state: option1,\n    label: \"Option 1\",\n    stateName: \"option1\"\n  }, {\n    state: option2,\n    label: \"Option 2\",\n    stateName: \"option2\"\n  }, {\n    state: option3,\n    label: \"Option 3\",\n    stateName: \"option3\"\n  }, {\n    state: option4,\n    label: \"Option 4\",\n    stateName: \"option4\"\n  }];\n  return /*#__PURE__*/React.createElement(ExpansionPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ExpansionPanelSummary, {\n    expandIcon: /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 42\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, \"Settings 1\")), /*#__PURE__*/React.createElement(ExpansionPanelDetails, {\n    className: classes.dBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    disablePadding: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Bordered, {\n    disableVerticalPadding: true,\n    disableBorderRadius: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, inputs.map((element, index) => /*#__PURE__*/React.createElement(ListItem, {\n    className: \"listItemLeftPadding\",\n    disableGutters: true,\n    divider: true,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 19\n    }\n  }, element.label)), /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    className: classes.ListItemSecondaryAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    value: element.state,\n    onChange: handleChange,\n    input: /*#__PURE__*/React.createElement(OutlinedInput, {\n      name: element.stateName,\n      labelWidth: 0,\n      className: classes.numberInput,\n      classes: {\n        input: classes.numberInputInput\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 25\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }, inputOptions.map(innerElement => /*#__PURE__*/React.createElement(MenuItem, {\n    value: innerElement,\n    key: innerElement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 25\n    }\n  }, innerElement))))))), /*#__PURE__*/React.createElement(ListItem, {\n    className: \"listItemLeftPadding\",\n    disableGutters: true,\n    divider: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, \"Option 5\")), /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    className: classes.ListItemSecondaryAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    value: option5,\n    onChange: handleChange,\n    input: /*#__PURE__*/React.createElement(OutlinedInput, {\n      name: \"option5\",\n      labelWidth: 0,\n      className: classes.numberInput,\n      classes: {\n        input: classes.numberInputInput\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 23\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 19\n    }\n  }, [\"Always\", \"6 Hours\", \"12 Hours\", \"1 Day\", \"2 Days\", \"3 Days\", \"1 Week\"].map(element => /*#__PURE__*/React.createElement(MenuItem, {\n    value: element,\n    key: element,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 23\n    }\n  }, element)))))), /*#__PURE__*/React.createElement(ListItem, {\n    className: \"listItemLeftPadding\",\n    disableGutters: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }\n  }, \"Option 6\")), /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    className: classes.ListItemSecondaryAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(OutlinedInput, {\n    labelWidth: 0,\n    name: \"option6\",\n    value: option6,\n    type: \"number\",\n    onChange: handleChange,\n    className: classes.numberInput,\n    classes: {\n      input: classes.numberInputInput\n    },\n    inputProps: {\n      step: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(ExpansionPanelDetails, {\n    className: classes.expansionPanelDetails,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mr: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: onSetDefault,\n    disabled: isSaveLoading || isDefaultLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 11\n    }\n  }, \"Default \", isDefaultLoading && /*#__PURE__*/React.createElement(ButtonCircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 42\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    disabled: isSaveLoading || isDefaultLoading,\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }\n  }, \"Save \", isSaveLoading && /*#__PURE__*/React.createElement(ButtonCircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 34\n    }\n  }))));\n}\n\nSettings1.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n  pushMessageToSnackbar: PropTypes.func\n};\nexport default withWidth()(withStyles(styles, {\n  withTheme: true\n})(Settings1));","map":{"version":3,"sources":["/Users/bhavyameghnani/Desktop/react-saas-template/src/logged_in/components/dashboard/Settings1.js"],"names":["React","useState","useCallback","PropTypes","List","ListItem","ListItemSecondaryAction","Button","ExpansionPanel","ExpansionPanelSummary","Typography","ListItemText","OutlinedInput","ExpansionPanelDetails","MenuItem","FormControl","Select","Box","withStyles","ExpandMoreIcon","withWidth","Bordered","ButtonCircularProgress","styles","theme","numberInput","width","numberInputInput","padding","dBlock","display","listItemLeftPadding","paddingRight","spacing","expansionPanelDetails","paddintTop","justifyContent","inputOptions","Settings1","props","classes","pushMessageToSnackbar","isSaveLoading","setIsSaveLoading","isDefaultLoading","setIsDefaultLoading","option1","setOption1","option2","setOption2","option3","setOption3","option4","setOption4","option5","setOption5","option6","setOption6","handleChange","event","name","value","target","Error","resetState","onSetDefault","setTimeout","text","onSubmit","inputs","state","label","stateName","map","element","index","input","innerElement","step","propTypes","object","isRequired","func","withTheme"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,IADF,EAEEC,QAFF,EAGEC,uBAHF,EAIEC,MAJF,EAKEC,cALF,EAMEC,qBANF,EAOEC,UAPF,EAQEC,YARF,EASEC,aATF,EAUEC,qBAVF,EAWEC,QAXF,EAYEC,WAZF,EAaEC,MAbF,EAcEC,GAdF,EAeEC,UAfF,QAgBO,mBAhBP;AAiBA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,sBAAP,MAAmC,mDAAnC;;AAEA,MAAMC,MAAM,GAAIC,KAAD,KAAY;AACzBC,EAAAA,WAAW,EAAE;AACXC,IAAAA,KAAK,EAAE;AADI,GADY;AAIzBC,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,OAAO,EAAE;AADO,GAJO;AAOzBC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAPiB;AAQzBC,EAAAA,mBAAmB,EAAE;AACnBC,IAAAA,YAAY,EAAER,KAAK,CAACS,OAAN,CAAc,CAAd;AADK,GARI;AAWzBC,EAAAA,qBAAqB,EAAE;AACrBC,IAAAA,UAAU,EAAEX,KAAK,CAACS,OAAN,CAAc,CAAd,CADS;AAErBG,IAAAA,cAAc,EAAE;AAFK;AAXE,CAAZ,CAAf;;AAgBA,MAAMC,YAAY,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,QAAjB,EAA2B,MAA3B,CAArB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAqCF,KAA3C;AACA,QAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoC1C,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAAC2C,gBAAD,EAAmBC,mBAAnB,IAA0C5C,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAAC6C,OAAD,EAAUC,UAAV,IAAwB9C,QAAQ,CAAC,MAAD,CAAtC;AACA,QAAM,CAAC+C,OAAD,EAAUC,UAAV,IAAwBhD,QAAQ,CAAC,MAAD,CAAtC;AACA,QAAM,CAACiD,OAAD,EAAUC,UAAV,IAAwBlD,QAAQ,CAAC,MAAD,CAAtC;AACA,QAAM,CAACmD,OAAD,EAAUC,UAAV,IAAwBpD,QAAQ,CAAC,MAAD,CAAtC;AACA,QAAM,CAACqD,OAAD,EAAUC,UAAV,IAAwBtD,QAAQ,CAAC,QAAD,CAAtC;AACA,QAAM,CAACuD,OAAD,EAAUC,UAAV,IAAwBxD,QAAQ,CAAC,IAAD,CAAtC;AAEA,QAAMyD,YAAY,GAAGxD,WAAW,CAC7ByD,KAAD,IAAW;AACT,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,MAA9B;;AACA,QAAIF,IAAI,KAAK,SAAb,EAAwB;AACtB,UAAIC,KAAK,GAAG,IAAR,IAAgBA,KAAK,GAAG,IAA5B,EAAkC;AAChC;AACD;AACF;;AACD,YAAQD,IAAR;AACE,WAAK,SAAL;AAAgB;AACdb,UAAAA,UAAU,CAACc,KAAD,CAAV;AACA;AACD;;AACD,WAAK,SAAL;AAAgB;AACdZ,UAAAA,UAAU,CAACY,KAAD,CAAV;AACA;AACD;;AACD,WAAK,SAAL;AAAgB;AACdV,UAAAA,UAAU,CAACU,KAAD,CAAV;AACA;AACD;;AACD,WAAK,SAAL;AAAgB;AACdR,UAAAA,UAAU,CAACQ,KAAD,CAAV;AACA;AACD;;AACD,WAAK,SAAL;AAAgB;AACdN,UAAAA,UAAU,CAACM,KAAD,CAAV;AACA;AACD;;AACD,WAAK,SAAL;AAAgB;AACdJ,UAAAA,UAAU,CAACI,KAAD,CAAV;AACA;AACD;;AACD;AACE,cAAM,IAAIE,KAAJ,CAAU,yCAAV,CAAN;AA1BJ;AA4BD,GApC6B,EAqC9B,CAAChB,UAAD,EAAaE,UAAb,EAAyBE,UAAzB,EAAqCE,UAArC,EAAiDE,UAAjD,EAA6DE,UAA7D,CArC8B,CAAhC;AAwCA,QAAMO,UAAU,GAAG9D,WAAW,CAAC,MAAM;AACnCyC,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAE,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACAE,IAAAA,UAAU,CAAC,MAAD,CAAV;AACAE,IAAAA,UAAU,CAAC,MAAD,CAAV;AACAE,IAAAA,UAAU,CAAC,MAAD,CAAV;AACAE,IAAAA,UAAU,CAAC,MAAD,CAAV;AACAE,IAAAA,UAAU,CAAC,QAAD,CAAV;AACAE,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAT6B,EAS3B,CACDd,gBADC,EAEDE,mBAFC,EAGDE,UAHC,EAIDE,UAJC,EAKDE,UALC,EAMDE,UANC,EAODE,UAPC,EAQDE,UARC,CAT2B,CAA9B;AAoBA,QAAMQ,YAAY,GAAG/D,WAAW,CAAC,MAAM;AACrC2C,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAqB,IAAAA,UAAU,CAAC,MAAM;AACfzB,MAAAA,qBAAqB,CAAC;AACpB0B,QAAAA,IAAI,EAAE;AADc,OAAD,CAArB;AAGAH,MAAAA,UAAU;AACX,KALS,EAKP,IALO,CAAV;AAMD,GAR+B,EAQ7B,CAACvB,qBAAD,EAAwBuB,UAAxB,CAR6B,CAAhC;AAUA,QAAMI,QAAQ,GAAGlE,WAAW,CAAC,MAAM;AACjCyC,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAuB,IAAAA,UAAU,CAAC,MAAM;AACfzB,MAAAA,qBAAqB,CAAC;AACpB0B,QAAAA,IAAI,EAAE;AADc,OAAD,CAArB;AAGAxB,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,KALS,EAKP,IALO,CAAV;AAMD,GAR2B,EAQzB,CAACA,gBAAD,EAAmBF,qBAAnB,CARyB,CAA5B;AAUA,QAAM4B,MAAM,GAAG,CACb;AACEC,IAAAA,KAAK,EAAExB,OADT;AAEEyB,IAAAA,KAAK,EAAE,UAFT;AAGEC,IAAAA,SAAS,EAAE;AAHb,GADa,EAMb;AACEF,IAAAA,KAAK,EAAEtB,OADT;AAEEuB,IAAAA,KAAK,EAAE,UAFT;AAGEC,IAAAA,SAAS,EAAE;AAHb,GANa,EAWb;AACEF,IAAAA,KAAK,EAAEpB,OADT;AAEEqB,IAAAA,KAAK,EAAE,UAFT;AAGEC,IAAAA,SAAS,EAAE;AAHb,GAXa,EAgBb;AACEF,IAAAA,KAAK,EAAElB,OADT;AAEEmB,IAAAA,KAAK,EAAE,UAFT;AAGEC,IAAAA,SAAS,EAAE;AAHb,GAhBa,CAAf;AAuBA,sBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,qBAAD;AAAuB,IAAA,UAAU,eAAE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,eAIE,oBAAC,qBAAD;AAAuB,IAAA,SAAS,EAAEhC,OAAO,CAACX,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,cAAc,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,sBAAsB,MAAhC;AAAiC,IAAA,mBAAmB,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGwC,MAAM,CAACI,GAAP,CAAW,CAACC,OAAD,EAAUC,KAAV,kBACV,oBAAC,QAAD;AACE,IAAA,SAAS,EAAC,qBADZ;AAEE,IAAA,cAAc,MAFhB;AAGE,IAAA,OAAO,MAHT;AAIE,IAAA,GAAG,EAAEA,KAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BD,OAAO,CAACH,KAArC,CADF,CANF,eASE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,uBAAD;AACE,IAAA,SAAS,EAAE/B,OAAO,CAAClC,uBADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAEoE,OAAO,CAACJ,KADjB;AAEE,IAAA,QAAQ,EAAEZ,YAFZ;AAGE,IAAA,KAAK,eACH,oBAAC,aAAD;AACE,MAAA,IAAI,EAAEgB,OAAO,CAACF,SADhB;AAEE,MAAA,UAAU,EAAE,CAFd;AAGE,MAAA,SAAS,EAAEhC,OAAO,CAACf,WAHrB;AAIE,MAAA,OAAO,EAAE;AAAEmD,QAAAA,KAAK,EAAEpC,OAAO,CAACb;AAAjB,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYGU,YAAY,CAACoC,GAAb,CAAkBI,YAAD,iBAChB,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEA,YAAjB;AAA+B,IAAA,GAAG,EAAEA,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,YADH,CADD,CAZH,CAHF,CADF,CATF,CADD,CADH,eAqCE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,qBAApB;AAA0C,IAAA,cAAc,MAAxD;AAAyD,IAAA,OAAO,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,eAIE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,uBAAD;AACE,IAAA,SAAS,EAAErC,OAAO,CAAClC,uBADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAEgD,OADT;AAEE,IAAA,QAAQ,EAAEI,YAFZ;AAGE,IAAA,KAAK,eACH,oBAAC,aAAD;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,UAAU,EAAE,CAFd;AAGE,MAAA,SAAS,EAAElB,OAAO,CAACf,WAHrB;AAIE,MAAA,OAAO,EAAE;AAAEmD,QAAAA,KAAK,EAAEpC,OAAO,CAACb;AAAjB,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYG,CACC,QADD,EAEC,SAFD,EAGC,UAHD,EAIC,OAJD,EAKC,QALD,EAMC,QAND,EAOC,QAPD,EAQC8C,GARD,CAQMC,OAAD,iBACJ,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEA,OAAjB;AAA0B,IAAA,GAAG,EAAEA,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OADH,CATD,CAZH,CAHF,CADF,CAJF,CArCF,eA0EE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,qBAApB;AAA0C,IAAA,cAAc,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,eAIE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,uBAAD;AACE,IAAA,SAAS,EAAElC,OAAO,CAAClC,uBADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE,oBAAC,aAAD;AACE,IAAA,UAAU,EAAE,CADd;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,KAAK,EAAEkD,OAHT;AAIE,IAAA,IAAI,EAAC,QAJP;AAKE,IAAA,QAAQ,EAAEE,YALZ;AAME,IAAA,SAAS,EAAElB,OAAO,CAACf,WANrB;AAOE,IAAA,OAAO,EAAE;AAAEmD,MAAAA,KAAK,EAAEpC,OAAO,CAACb;AAAjB,KAPX;AAQE,IAAA,UAAU,EAAE;AAAEmD,MAAAA,IAAI,EAAE;AAAR,KARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CAJF,CA1EF,CADF,CADF,CAJF,eAwGE,oBAAC,qBAAD;AAAuB,IAAA,SAAS,EAAEtC,OAAO,CAACN,qBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE+B,YADX;AAEE,IAAA,QAAQ,EAAEvB,aAAa,IAAIE,gBAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAIWA,gBAAgB,iBAAI,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJ/B,CADF,CADF,eASE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,KAAK,EAAC,WAFR;AAGE,IAAA,QAAQ,EAAEF,aAAa,IAAIE,gBAH7B;AAIE,IAAA,OAAO,EAAEwB,QAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAMQ1B,aAAa,iBAAI,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANzB,CATF,CAxGF,CADF;AA6HD;;AAEDJ,SAAS,CAACyC,SAAV,GAAsB;AACpBvC,EAAAA,OAAO,EAAErC,SAAS,CAAC6E,MAAV,CAAiBC,UADN;AAEpBzD,EAAAA,KAAK,EAAErB,SAAS,CAAC6E,MAAV,CAAiBC,UAFJ;AAGpBxC,EAAAA,qBAAqB,EAAEtC,SAAS,CAAC+E;AAHb,CAAtB;AAMA,eAAe9D,SAAS,GAAGF,UAAU,CAACK,MAAD,EAAS;AAAE4D,EAAAA,SAAS,EAAE;AAAb,CAAT,CAAV,CAAwC7C,SAAxC,CAAH,CAAxB","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  Button,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  Typography,\n  ListItemText,\n  OutlinedInput,\n  ExpansionPanelDetails,\n  MenuItem,\n  FormControl,\n  Select,\n  Box,\n  withStyles,\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport withWidth from \"@material-ui/core/withWidth\";\nimport Bordered from \"../../../shared/components/Bordered\";\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\n\nconst styles = (theme) => ({\n  numberInput: {\n    width: 110,\n  },\n  numberInputInput: {\n    padding: \"9px 34px 9px 14.5px\",\n  },\n  dBlock: { display: \"block\" },\n  listItemLeftPadding: {\n    paddingRight: theme.spacing(3),\n  },\n  expansionPanelDetails: {\n    paddintTop: theme.spacing(0),\n    justifyContent: \"flex-end\",\n  },\n});\nconst inputOptions = [\"None\", \"Slow\", \"Normal\", \"Fast\"];\n\nfunction Settings1(props) {\n  const { classes, pushMessageToSnackbar } = props;\n  const [isSaveLoading, setIsSaveLoading] = useState(false);\n  const [isDefaultLoading, setIsDefaultLoading] = useState(false);\n  const [option1, setOption1] = useState(\"None\");\n  const [option2, setOption2] = useState(\"None\");\n  const [option3, setOption3] = useState(\"None\");\n  const [option4, setOption4] = useState(\"None\");\n  const [option5, setOption5] = useState(\"2 Days\");\n  const [option6, setOption6] = useState(7500);\n\n  const handleChange = useCallback(\n    (event) => {\n      const { name, value } = event.target;\n      if (name === \"option6\") {\n        if (value > 7500 || value < 1000) {\n          return;\n        }\n      }\n      switch (name) {\n        case \"option1\": {\n          setOption1(value);\n          break;\n        }\n        case \"option2\": {\n          setOption2(value);\n          break;\n        }\n        case \"option3\": {\n          setOption3(value);\n          break;\n        }\n        case \"option4\": {\n          setOption4(value);\n          break;\n        }\n        case \"option5\": {\n          setOption5(value);\n          break;\n        }\n        case \"option6\": {\n          setOption6(value);\n          break;\n        }\n        default:\n          throw new Error(\"No branch selected in switch statement.\");\n      }\n    },\n    [setOption1, setOption2, setOption3, setOption4, setOption5, setOption6]\n  );\n\n  const resetState = useCallback(() => {\n    setIsSaveLoading(false);\n    setIsDefaultLoading(false);\n    setOption1(\"None\");\n    setOption2(\"None\");\n    setOption3(\"None\");\n    setOption4(\"None\");\n    setOption5(\"2 Days\");\n    setOption6(7500);\n  }, [\n    setIsSaveLoading,\n    setIsDefaultLoading,\n    setOption1,\n    setOption2,\n    setOption3,\n    setOption4,\n    setOption5,\n    setOption6,\n  ]);\n\n  const onSetDefault = useCallback(() => {\n    setIsDefaultLoading(true);\n    setTimeout(() => {\n      pushMessageToSnackbar({\n        text: \"Your settings have been reset to default\",\n      });\n      resetState();\n    }, 1500);\n  }, [pushMessageToSnackbar, resetState]);\n\n  const onSubmit = useCallback(() => {\n    setIsSaveLoading(true);\n    setTimeout(() => {\n      pushMessageToSnackbar({\n        text: \"Your settings have been saved\",\n      });\n      setIsSaveLoading(false);\n    }, 1500);\n  }, [setIsSaveLoading, pushMessageToSnackbar]);\n\n  const inputs = [\n    {\n      state: option1,\n      label: \"Option 1\",\n      stateName: \"option1\",\n    },\n    {\n      state: option2,\n      label: \"Option 2\",\n      stateName: \"option2\",\n    },\n    {\n      state: option3,\n      label: \"Option 3\",\n      stateName: \"option3\",\n    },\n    {\n      state: option4,\n      label: \"Option 4\",\n      stateName: \"option4\",\n    },\n  ];\n\n  return (\n    <ExpansionPanel>\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n        <Typography>Settings 1</Typography>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails className={classes.dBlock}>\n        <List disablePadding>\n          <Bordered disableVerticalPadding disableBorderRadius>\n            {inputs.map((element, index) => (\n              <ListItem\n                className=\"listItemLeftPadding\"\n                disableGutters\n                divider\n                key={index}\n              >\n                <ListItemText>\n                  <Typography variant=\"body2\">{element.label}</Typography>\n                </ListItemText>\n                <FormControl variant=\"outlined\">\n                  <ListItemSecondaryAction\n                    className={classes.ListItemSecondaryAction}\n                  >\n                    <Select\n                      value={element.state}\n                      onChange={handleChange}\n                      input={\n                        <OutlinedInput\n                          name={element.stateName}\n                          labelWidth={0}\n                          className={classes.numberInput}\n                          classes={{ input: classes.numberInputInput }}\n                        />\n                      }\n                    >\n                      {inputOptions.map((innerElement) => (\n                        <MenuItem value={innerElement} key={innerElement}>\n                          {innerElement}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </ListItemSecondaryAction>\n                </FormControl>\n              </ListItem>\n            ))}\n            <ListItem className=\"listItemLeftPadding\" disableGutters divider>\n              <ListItemText>\n                <Typography variant=\"body2\">Option 5</Typography>\n              </ListItemText>\n              <FormControl variant=\"outlined\">\n                <ListItemSecondaryAction\n                  className={classes.ListItemSecondaryAction}\n                >\n                  <Select\n                    value={option5}\n                    onChange={handleChange}\n                    input={\n                      <OutlinedInput\n                        name=\"option5\"\n                        labelWidth={0}\n                        className={classes.numberInput}\n                        classes={{ input: classes.numberInputInput }}\n                      />\n                    }\n                  >\n                    {[\n                      \"Always\",\n                      \"6 Hours\",\n                      \"12 Hours\",\n                      \"1 Day\",\n                      \"2 Days\",\n                      \"3 Days\",\n                      \"1 Week\",\n                    ].map((element) => (\n                      <MenuItem value={element} key={element}>\n                        {element}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </ListItemSecondaryAction>\n              </FormControl>\n            </ListItem>\n            <ListItem className=\"listItemLeftPadding\" disableGutters>\n              <ListItemText>\n                <Typography variant=\"body2\">Option 6</Typography>\n              </ListItemText>\n              <FormControl variant=\"outlined\">\n                <ListItemSecondaryAction\n                  className={classes.ListItemSecondaryAction}\n                >\n                  <OutlinedInput\n                    labelWidth={0}\n                    name=\"option6\"\n                    value={option6}\n                    type=\"number\"\n                    onChange={handleChange}\n                    className={classes.numberInput}\n                    classes={{ input: classes.numberInputInput }}\n                    inputProps={{ step: 20 }}\n                  />\n                </ListItemSecondaryAction>\n              </FormControl>\n            </ListItem>\n          </Bordered>\n        </List>\n      </ExpansionPanelDetails>\n      <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n        <Box mr={1}>\n          <Button\n            onClick={onSetDefault}\n            disabled={isSaveLoading || isDefaultLoading}\n          >\n            Default {isDefaultLoading && <ButtonCircularProgress />}\n          </Button>\n        </Box>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          disabled={isSaveLoading || isDefaultLoading}\n          onClick={onSubmit}\n        >\n          Save {isSaveLoading && <ButtonCircularProgress />}\n        </Button>\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  );\n}\n\nSettings1.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n  pushMessageToSnackbar: PropTypes.func,\n};\n\nexport default withWidth()(withStyles(styles, { withTheme: true })(Settings1));\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/bhavyameghnani/Desktop/react-saas-template/src/logged_in/components/navigation/MessageListItem.js\";\nimport React, { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ListItem, ListItemAvatar, ListItemText, Avatar } from \"@material-ui/core\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport formatDistance from \"date-fns/formatDistance\";\n\nfunction MessageListItem(props) {\n  const {\n    message,\n    divider\n  } = props;\n  const [hasErrorOccurred, setHasErrorOccurred] = useState(false);\n  const handleError = useCallback(() => {\n    setHasErrorOccurred(true);\n  }, [setHasErrorOccurred]);\n  return /*#__PURE__*/React.createElement(ListItem, {\n    divider: divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, hasErrorOccurred ? /*#__PURE__*/React.createElement(ErrorIcon, {\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(Avatar, {\n    src: hasErrorOccurred ? null : message.profilePicUrl,\n    onError: handleError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: message.text,\n    secondary: `${formatDistance(message.date * 1000, new Date())} ago`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }));\n}\n\nMessageListItem.propTypes = {\n  message: PropTypes.object,\n  divider: PropTypes.bool\n};\nexport default MessageListItem;","map":{"version":3,"sources":["/Users/bhavyameghnani/Desktop/react-saas-template/src/logged_in/components/navigation/MessageListItem.js"],"names":["React","useCallback","useState","PropTypes","ListItem","ListItemAvatar","ListItemText","Avatar","ErrorIcon","formatDistance","MessageListItem","props","message","divider","hasErrorOccurred","setHasErrorOccurred","handleError","profilePicUrl","text","date","Date","propTypes","object","bool"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,QADF,EAEEC,cAFF,EAGEC,YAHF,EAIEC,MAJF,QAKO,mBALP;AAMA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBF,KAA7B;AACA,QAAM,CAACG,gBAAD,EAAmBC,mBAAnB,IAA0Cb,QAAQ,CAAC,KAAD,CAAxD;AAEA,QAAMc,WAAW,GAAGf,WAAW,CAAC,MAAM;AACpCc,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD,GAF8B,EAE5B,CAACA,mBAAD,CAF4B,CAA/B;AAIA,sBACE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEF,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,gBAAgB,gBACf,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADe,gBAGf,oBAAC,MAAD;AACE,IAAA,GAAG,EAAEA,gBAAgB,GAAG,IAAH,GAAUF,OAAO,CAACK,aADzC;AAEE,IAAA,OAAO,EAAED,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADF,eAWE,oBAAC,YAAD;AACE,IAAA,OAAO,EAAEJ,OAAO,CAACM,IADnB;AAEE,IAAA,SAAS,EAAG,GAAET,cAAc,CAACG,OAAO,CAACO,IAAR,GAAe,IAAhB,EAAsB,IAAIC,IAAJ,EAAtB,CAAkC,MAFhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF;AAkBD;;AAEDV,eAAe,CAACW,SAAhB,GAA4B;AAC1BT,EAAAA,OAAO,EAAET,SAAS,CAACmB,MADO;AAE1BT,EAAAA,OAAO,EAAEV,SAAS,CAACoB;AAFO,CAA5B;AAKA,eAAeb,eAAf","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar\n} from \"@material-ui/core\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport formatDistance from \"date-fns/formatDistance\";\n\nfunction MessageListItem(props) {\n  const { message, divider } = props;\n  const [hasErrorOccurred, setHasErrorOccurred] = useState(false);\n\n  const handleError = useCallback(() => {\n    setHasErrorOccurred(true);\n  }, [setHasErrorOccurred]);\n\n  return (\n    <ListItem divider={divider}>\n      <ListItemAvatar>\n        {hasErrorOccurred ? (\n          <ErrorIcon color=\"secondary\" />\n        ) : (\n          <Avatar\n            src={hasErrorOccurred ? null : message.profilePicUrl}\n            onError={handleError}\n          />\n        )}\n      </ListItemAvatar>\n      <ListItemText\n        primary={message.text}\n        secondary={`${formatDistance(message.date * 1000, new Date())} ago`}\n      />\n    </ListItem>\n  );\n}\n\nMessageListItem.propTypes = {\n  message: PropTypes.object,\n  divider: PropTypes.bool\n};\n\nexport default MessageListItem;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/bhavyameghnani/Desktop/react-saas-template/src/shared/components/EmojiTextArea.js\";\nimport React, { Fragment, useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { Picker } from \"emoji-mart\";\nimport { TextField, IconButton, Collapse, FormHelperText, Box, Grid, withStyles } from \"@material-ui/core\";\nimport EmojiEmotionsIcon from \"@material-ui/icons/EmojiEmotions\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport countWithEmojis from \"../functions/countWithEmojis\";\n\nconst styles = theme => ({\n  \"@global\": {\n    \".emoji-mart-category-label\": theme.typography.body1,\n    \".emoji-mart-bar\": {\n      display: \"none !important\"\n    },\n    \".emoji-mart-search input\": { ...theme.typography.body1,\n      ...theme.border\n    },\n    \".emoji-mart-search\": {\n      marginTop: `${theme.spacing(1)}px !important`,\n      paddingRight: `${theme.spacing(1)}px !important`,\n      paddingLeft: `${theme.spacing(1)}px !important`,\n      paddingBottom: `${theme.spacing(1)}px !important`\n    },\n    \".emoji-mart-search-icon\": {\n      top: \"5px !important\",\n      right: \"14px !important\",\n      fontSize: 20\n    },\n    \".emoji-mart-scroll\": {\n      height: 240\n    },\n    \".emoji-mart\": { ...theme.border\n    }\n  },\n  floatButtonWrapper: {\n    position: \"absolute\",\n    bottom: 12,\n    right: 12\n  },\n  floatButtonSVG: {\n    color: theme.palette.primary.light\n  },\n  relative: {\n    position: \"relative\"\n  }\n});\n/**\n * Emojis whose unified is greater than 5 sometimes\n * are not displayed correcty in the browser.\n * We won't display them.\n */\n\n\nconst emojisToShowFilter = emoji => {\n  if (emoji.unified.length > 5) {\n    return false;\n  }\n\n  return true;\n};\n\nfunction EmojiTextarea(props) {\n  const {\n    theme,\n    classes,\n    rightContent,\n    placeholder,\n    maxCharacters,\n    emojiSet,\n    inputClassName,\n    onChange\n  } = props;\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const [characters, setCharacters] = useState(0);\n  const onSelectEmoji = useCallback(emoji => {\n    let _characters;\n\n    let _value = value + emoji.native;\n\n    if (maxCharacters) {\n      _characters = countWithEmojis(_value);\n\n      if (_characters > maxCharacters) {\n        return;\n      }\n    }\n\n    if (onChange) {\n      onChange(_value, _characters);\n    }\n\n    setValue(_value);\n    setCharacters(_characters);\n  }, [value, setValue, setCharacters, maxCharacters, onChange]);\n  const handleTextFieldChange = useCallback(event => {\n    const {\n      target\n    } = event;\n    const {\n      value\n    } = target;\n    let characters;\n\n    if (maxCharacters) {\n      characters = countWithEmojis(value);\n\n      if (characters > maxCharacters) {\n        return;\n      }\n    }\n\n    if (onChange) {\n      onChange(value, characters);\n    }\n\n    setValue(value);\n    setCharacters(characters);\n  }, [maxCharacters, onChange, setValue, setCharacters]);\n  const toggleOpen = useCallback(() => {\n    setOpen(!open);\n  }, [open, setOpen]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    spacing: 0,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: rightContent ? 8 : 12,\n    sm: rightContent ? 9 : 12,\n    lg: rightContent ? 10 : 12,\n    className: classes.relative,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    multiline: true,\n    variant: \"outlined\",\n    rows: 6,\n    onInput: handleTextFieldChange,\n    value: value,\n    placeholder: placeholder,\n    InputProps: {\n      classes: {\n        notchedOutline: inputClassName ? inputClassName : null\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.floatButtonWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: toggleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, open ? /*#__PURE__*/React.createElement(CloseIcon, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(EmojiEmotionsIcon, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  })))), rightContent && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    sm: 3,\n    lg: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, rightContent)), maxCharacters && /*#__PURE__*/React.createElement(FormHelperText, {\n    error: characters >= maxCharacters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, `${characters}/${maxCharacters} characters`), /*#__PURE__*/React.createElement(Collapse, {\n    in: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mt: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Picker, {\n    set: emojiSet,\n    color: theme.palette.primary.main,\n    style: {\n      width: \"100%\"\n    },\n    onSelect: onSelectEmoji,\n    emojisToShowFilter: emojisToShowFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }))));\n}\n\nEmojiTextarea.propTypes = {\n  theme: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  emojiSet: PropTypes.string.isRequired,\n  rightContent: PropTypes.element,\n  placeholder: PropTypes.string,\n  maxCharacters: PropTypes.number,\n  onChange: PropTypes.func,\n  inputClassName: PropTypes.string\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(EmojiTextarea);","map":{"version":3,"sources":["/Users/bhavyameghnani/Desktop/react-saas-template/src/shared/components/EmojiTextArea.js"],"names":["React","Fragment","useState","useCallback","PropTypes","Picker","TextField","IconButton","Collapse","FormHelperText","Box","Grid","withStyles","EmojiEmotionsIcon","CloseIcon","countWithEmojis","styles","theme","typography","body1","display","border","marginTop","spacing","paddingRight","paddingLeft","paddingBottom","top","right","fontSize","height","floatButtonWrapper","position","bottom","floatButtonSVG","color","palette","primary","light","relative","emojisToShowFilter","emoji","unified","length","EmojiTextarea","props","classes","rightContent","placeholder","maxCharacters","emojiSet","inputClassName","onChange","open","setOpen","value","setValue","characters","setCharacters","onSelectEmoji","_characters","_value","native","handleTextFieldChange","event","target","toggleOpen","notchedOutline","main","width","propTypes","object","isRequired","string","element","number","func","withTheme"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { Picker } from \"emoji-mart\";\nimport {\n  TextField,\n  IconButton,\n  Collapse,\n  FormHelperText,\n  Box,\n  Grid,\n  withStyles\n} from \"@material-ui/core\";\nimport EmojiEmotionsIcon from \"@material-ui/icons/EmojiEmotions\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport countWithEmojis from \"../functions/countWithEmojis\";\n\nconst styles = theme => ({\n  \"@global\": {\n    \".emoji-mart-category-label\": theme.typography.body1,\n    \".emoji-mart-bar\": { display: \"none !important\" },\n    \".emoji-mart-search input\": {\n      ...theme.typography.body1,\n      ...theme.border\n    },\n    \".emoji-mart-search\": {\n      marginTop: `${theme.spacing(1)}px !important`,\n      paddingRight: `${theme.spacing(1)}px !important`,\n      paddingLeft: `${theme.spacing(1)}px !important`,\n      paddingBottom: `${theme.spacing(1)}px !important`\n    },\n    \".emoji-mart-search-icon\": {\n      top: \"5px !important\",\n      right: \"14px !important\",\n      fontSize: 20\n    },\n    \".emoji-mart-scroll\": {\n      height: 240\n    },\n    \".emoji-mart\": {\n      ...theme.border\n    }\n  },\n  floatButtonWrapper: {\n    position: \"absolute\",\n    bottom: 12,\n    right: 12\n  },\n  floatButtonSVG: {\n    color: theme.palette.primary.light\n  },\n  relative: {\n    position: \"relative\"\n  }\n});\n\n/**\n * Emojis whose unified is greater than 5 sometimes\n * are not displayed correcty in the browser.\n * We won't display them.\n */\nconst emojisToShowFilter = emoji => {\n  if (emoji.unified.length > 5) {\n    return false;\n  }\n  return true;\n};\n\nfunction EmojiTextarea(props) {\n  const {\n    theme,\n    classes,\n    rightContent,\n    placeholder,\n    maxCharacters,\n    emojiSet,\n    inputClassName,\n    onChange\n  } = props;\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const [characters, setCharacters] = useState(0);\n\n  const onSelectEmoji = useCallback(\n    emoji => {\n      let _characters;\n      let _value = value + emoji.native;\n      if (maxCharacters) {\n        _characters = countWithEmojis(_value);\n        if (_characters > maxCharacters) {\n          return;\n        }\n      }\n      if (onChange) {\n        onChange(_value, _characters);\n      }\n      setValue(_value);\n      setCharacters(_characters);\n    },\n    [value, setValue, setCharacters, maxCharacters, onChange]\n  );\n\n  const handleTextFieldChange = useCallback(\n    event => {\n      const { target } = event;\n      const { value } = target;\n      let characters;\n      if (maxCharacters) {\n        characters = countWithEmojis(value);\n        if (characters > maxCharacters) {\n          return;\n        }\n      }\n      if (onChange) {\n        onChange(value, characters);\n      }\n      setValue(value);\n      setCharacters(characters);\n    },\n    [maxCharacters, onChange, setValue, setCharacters]\n  );\n\n  const toggleOpen = useCallback(() => {\n    setOpen(!open);\n  }, [open, setOpen]);\n\n  return (\n    <Fragment>\n      <Grid spacing={0} container>\n        <Grid\n          item\n          xs={rightContent ? 8 : 12}\n          sm={rightContent ? 9 : 12}\n          lg={rightContent ? 10 : 12}\n          className={classes.relative}\n        >\n          <TextField\n            fullWidth\n            multiline\n            variant=\"outlined\"\n            rows={6}\n            onInput={handleTextFieldChange}\n            value={value}\n            placeholder={placeholder}\n            InputProps={{\n              classes: {\n                notchedOutline: inputClassName ? inputClassName : null\n              }\n            }}\n          />\n          <div className={classes.floatButtonWrapper}>\n            <IconButton onClick={toggleOpen}>\n              {open ? (\n                <CloseIcon color=\"primary\" />\n              ) : (\n                <EmojiEmotionsIcon color=\"primary\" />\n              )}\n            </IconButton>\n          </div>\n        </Grid>\n        {rightContent && (\n          <Grid item xs={4} sm={3} lg={2}>\n            {rightContent}\n          </Grid>\n        )}\n      </Grid>\n      {maxCharacters && (\n        <FormHelperText error={characters >= maxCharacters}>\n          {`${characters}/${maxCharacters} characters`}\n        </FormHelperText>\n      )}\n      <Collapse in={open}>\n        <Box mt={1}>\n          <Picker\n            set={emojiSet}\n            color={theme.palette.primary.main}\n            style={{ width: \"100%\" }}\n            onSelect={onSelectEmoji}\n            emojisToShowFilter={emojisToShowFilter}\n          />\n        </Box>\n      </Collapse>\n    </Fragment>\n  );\n}\n\nEmojiTextarea.propTypes = {\n  theme: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  emojiSet: PropTypes.string.isRequired,\n  rightContent: PropTypes.element,\n  placeholder: PropTypes.string,\n  maxCharacters: PropTypes.number,\n  onChange: PropTypes.func,\n  inputClassName: PropTypes.string\n};\n\nexport default withStyles(styles, { withTheme: true })(EmojiTextarea);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/bhavyameghnani/Desktop/react-saas-template/src/shared/components/Dropzone.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDropzone } from \"react-dropzone\";\nimport classNames from \"classnames\";\nimport { Box, withStyles } from \"@material-ui/core\";\nimport ColoredButton from \"./ColoredButton\";\nconst styles = {\n  button: {\n    borderWidth: 1,\n    borderColor: \"rgba(0, 0, 0, 0.23)\",\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0\n  },\n  fullHeight: {\n    height: \"100%\"\n  }\n};\n\nfunction getColor(isDragAccept, isDragReject, theme) {\n  if (isDragAccept) {\n    return theme.palette.success.main;\n  }\n\n  if (isDragReject) {\n    return theme.palette.error.dark;\n  }\n\n  return theme.palette.common.black;\n}\n\nfunction Dropzone(props) {\n  const {\n    onDrop,\n    accept,\n    fullHeight,\n    children,\n    classes,\n    style,\n    theme\n  } = props;\n  const {\n    getRootProps,\n    getInputProps,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({\n    accept: accept,\n    onDrop: onDrop\n  });\n  return /*#__PURE__*/React.createElement(Box, Object.assign({}, getRootProps(), {\n    height: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(ColoredButton, {\n    fullWidth: true,\n    className: classNames(fullHeight ? classes.fullHeight : null, classes.button),\n    variant: \"outlined\",\n    color: getColor(isDragAccept, isDragReject, theme),\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, children));\n}\n\nDropzone.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n  onDrop: PropTypes.func,\n  accept: PropTypes.string,\n  fullHeight: PropTypes.bool,\n  style: PropTypes.object,\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.func])\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(Dropzone);","map":{"version":3,"sources":["/Users/bhavyameghnani/Desktop/react-saas-template/src/shared/components/Dropzone.js"],"names":["React","PropTypes","useDropzone","classNames","Box","withStyles","ColoredButton","styles","button","borderWidth","borderColor","borderTopLeftRadius","borderBottomLeftRadius","fullHeight","height","getColor","isDragAccept","isDragReject","theme","palette","success","main","error","dark","common","black","Dropzone","props","onDrop","accept","children","classes","style","getRootProps","getInputProps","propTypes","object","isRequired","func","string","bool","oneOfType","element","withTheme"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDropzone } from \"react-dropzone\";\nimport classNames from \"classnames\";\nimport { Box, withStyles } from \"@material-ui/core\";\nimport ColoredButton from \"./ColoredButton\";\n\nconst styles = {\n  button: {\n    borderWidth: 1,\n    borderColor: \"rgba(0, 0, 0, 0.23)\",\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0\n  },\n  fullHeight: {\n    height: \"100%\"\n  }\n};\n\nfunction getColor(isDragAccept, isDragReject, theme) {\n  if (isDragAccept) {\n    return theme.palette.success.main;\n  }\n  if (isDragReject) {\n    return theme.palette.error.dark;\n  }\n  return theme.palette.common.black;\n}\n\nfunction Dropzone(props) {\n  const { onDrop, accept, fullHeight, children, classes, style, theme } = props;\n  const {\n    getRootProps,\n    getInputProps,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({\n    accept: accept,\n    onDrop: onDrop\n  });\n  return (\n    <Box {...getRootProps()} height=\"100%\">\n      <input {...getInputProps()} />\n      <ColoredButton\n        fullWidth\n        className={classNames(\n          fullHeight ? classes.fullHeight : null,\n          classes.button\n        )}\n        variant=\"outlined\"\n        color={getColor(isDragAccept, isDragReject, theme)}\n        style={style}\n      >\n        {children}\n      </ColoredButton>\n    </Box>\n  );\n}\n\nDropzone.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n  onDrop: PropTypes.func,\n  accept: PropTypes.string,\n  fullHeight: PropTypes.bool,\n  style: PropTypes.object,\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.func])\n};\n\nexport default withStyles(styles, { withTheme: true })(Dropzone);\n"]},"metadata":{},"sourceType":"module"}